<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="solid__mechanics__soften__triangle_8c" kind="file" language="C++">
    <compoundname>solid_mechanics_soften_triangle.c</compoundname>
    <includes refid="solid__mechanics__soften__triangle_8h" local="yes">solid_mechanics_soften_triangle.h</includes>
    <includes local="yes">../../common/openfdem_math.h</includes>
    <incdepgraph>
      <node id="4">
        <label>../../common/openfdem_math.h</label>
      </node>
      <node id="1">
        <label>solid_mechanics/solid_mechanics_soften_triangle.c</label>
        <link refid="solid__mechanics__soften__triangle_8c"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>solid_mechanics_soften_triangle.h</label>
        <link refid="solid__mechanics__soften__triangle_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>../../solve/openfdem.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="solid__mechanics__soften__triangle_8c_1ac2f2c2380f990bb4e2a175b15882b8ca" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Solid_mechanics_soften_triangle</definition>
        <argsstring>(Element element, Solidmat solidmat, UInt elementid, Nodal nodal, Real *soften_state)</argsstring>
        <name>Solid_mechanics_soften_triangle</name>
        <param>
          <type><ref refid="openfdem__solid_8h_1af26d43ea4cd21d871010e3de16a6109d" kindref="member">Element</ref></type>
          <declname>element</declname>
        </param>
        <param>
          <type><ref refid="openfdem__mat_8h_1a10eec44786d5659964548a8edabef182" kindref="member">Solidmat</ref></type>
          <declname>solidmat</declname>
        </param>
        <param>
          <type>UInt</type>
          <declname>elementid</declname>
        </param>
        <param>
          <type><ref refid="openfdem__nodal_8h_1a1df4c8cbf146294a06506197ddb4349a" kindref="member">Nodal</ref></type>
          <declname>nodal</declname>
        </param>
        <param>
          <type>Real *</type>
          <declname>soften_state</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="solid_mechanics/solid_mechanics_soften_triangle.c" line="5" column="6" bodyfile="solid_mechanics/solid_mechanics_soften_triangle.c" bodystart="5" bodyend="145"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*<sp/>File<sp/><sp/><sp/>Openfdem_force_update.c<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="solid__mechanics__soften__triangle_8h" kindref="compound">solid_mechanics_soften_triangle.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../../common/openfdem_math.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="solid__mechanics__soften__triangle_8c_1ac2f2c2380f990bb4e2a175b15882b8ca" kindref="member">Solid_mechanics_soften_triangle</ref>(<sp/><sp/></highlight><highlight class="comment">/*<sp/>small<sp/>strain<sp/>softening<sp/>triangle<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_element__structure" kindref="compound">Element</ref><sp/>element,<sp/><ref refid="struct_solid__mat__structure" kindref="compound">Solidmat</ref><sp/>solidmat,</highlight></codeline>
<codeline lineno="7"><highlight class="normal"><sp/><sp/><sp/><sp/>UInt<sp/>elementid,</highlight></codeline>
<codeline lineno="8"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_nodal__structure" kindref="compound">Nodal</ref><sp/>nodal,<sp/>Real*<sp/>soften_state)</highlight></codeline>
<codeline lineno="9"><highlight class="normal">{</highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/><sp/><sp/>Real<sp/>nx,<sp/>ny,<sp/>voli,<sp/>volc,<sp/>emax,<sp/>dmax,<sp/>dmas;</highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/><sp/>Real<sp/><sp/>B[2][2];<sp/></highlight><highlight class="comment">/*<sp/>left<sp/>Cauchy-Green<sp/>strain<sp/>tensor<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/>Real<sp/><sp/>D[2][2];<sp/></highlight><highlight class="comment">/*<sp/>rate<sp/>of<sp/>deformation<sp/>(stretching)<sp/>tensor<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/>Real<sp/><sp/>E[2][2];<sp/></highlight><highlight class="comment">/*<sp/>strain<sp/>tensor<sp/>(small<sp/>strains)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/>Real<sp/><sp/>F[2][2];<sp/></highlight><highlight class="comment">/*<sp/>deformation<sp/>gradient<sp/>in<sp/>global<sp/>base<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/>Real<sp/><sp/>F0[2][2];<sp/></highlight><highlight class="comment">/*<sp/>initial<sp/>local<sp/>base<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/>Real<sp/><sp/>FX[2][2];<sp/></highlight><highlight class="comment">/*<sp/>current<sp/>local<sp/>base<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/>Real<sp/><sp/>F0inv[2][2];<sp/></highlight><highlight class="comment">/*<sp/>global<sp/>base<sp/>in<sp/>initial<sp/>local<sp/>base<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/>Real<sp/><sp/>FXinv[2][2];<sp/></highlight><highlight class="comment">/*<sp/>global<sp/>base<sp/>in<sp/>current<sp/>local<sp/>base<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/>Real<sp/><sp/>L[2][2];<sp/></highlight><highlight class="comment">/*<sp/>velocity<sp/>gradient<sp/>in<sp/>global<sp/>base<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/>Real<sp/><sp/>LX[2][2];<sp/></highlight><highlight class="comment">/*<sp/>vel.<sp/>gradient<sp/>in<sp/>current<sp/>local<sp/>base<sp/>=<sp/>delta<sp/>x/delta<sp/>X<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/>Real<sp/><sp/>T[2][2];<sp/></highlight><highlight class="comment">/*<sp/>Cauchy<sp/>stress<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/>UInt<sp/>i,<sp/>j,<sp/>k,<sp/>propelementid;</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/>Real<sp/>propelementshear;</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/>Real<sp/>mu;</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/>Real<sp/>lambda;</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/>propelementid<sp/>=<sp/>element-&gt;<ref refid="struct_element__structure_1a6c9b10a142500847fddcc2b5fd237c13" kindref="member">ele</ref>[elementid].<ref refid="structelement__type_1abdc03d35cad4b39f082215c818e84067" kindref="member">matid</ref>;</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(solidmat-&gt;<ref refid="struct_solid__mat__structure_1abd0efe4abcf7d9df0896b53186177ae5" kindref="member">elemat</ref>[element-&gt;<ref refid="struct_element__structure_1a6c9b10a142500847fddcc2b5fd237c13" kindref="member">ele</ref>[elementid].<ref refid="structelement__type_1abdc03d35cad4b39f082215c818e84067" kindref="member">matid</ref>].<ref refid="structmat__element__t_1ab7d2c2ff27ff51d56eb332cb487653a6" kindref="member">cons</ref><sp/>==<sp/>SOFTEN)</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>propelementshear<sp/>=<sp/>solidmat-&gt;<ref refid="struct_solid__mat__structure_1abd0efe4abcf7d9df0896b53186177ae5" kindref="member">elemat</ref>[element-&gt;<ref refid="struct_element__structure_1a6c9b10a142500847fddcc2b5fd237c13" kindref="member">ele</ref>[elementid].<ref refid="structelement__type_1abdc03d35cad4b39f082215c818e84067" kindref="member">matid</ref>].<ref refid="structmat__element__t_1a0ab0303cb2396b3ad2dad522c5d893d2" kindref="member">mat</ref>-&gt;<ref refid="unionany__mat__type_1ad75543d390c29e156fc376f13f2632e0" kindref="member">soften</ref>.<ref refid="structsolid__soften__t_1a792ea6e0cbf026edd6f77835f0fb7c8d" kindref="member">coh</ref>;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dump_message(</highlight><highlight class="stringliteral">&quot;Error:<sp/>fails<sp/>to<sp/>load<sp/>soften<sp/>materials.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exit(-1);</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(UInt<sp/>i<sp/>=<sp/>1;<sp/>i<sp/>&lt;<sp/>element-&gt;<ref refid="struct_element__structure_1a6c9b10a142500847fddcc2b5fd237c13" kindref="member">ele</ref>[elementid].<ref refid="structelement__type_1a8cc01f8e17cd811e88c606d0d2c84443" kindref="member">n_node</ref>;<sp/>i++)</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>F0[0][i<sp/>-<sp/>1]<sp/>=<sp/>nodal-&gt;<ref refid="struct_nodal__structure_1a3ed7c5a4900781be4b94bc49fd189e45" kindref="member">node</ref>[element-&gt;<ref refid="struct_element__structure_1a6c9b10a142500847fddcc2b5fd237c13" kindref="member">ele</ref>[elementid].<ref refid="structelement__type_1a025bb5e0f05dda7a3fdb3bfc276eed51" kindref="member">nodes</ref>[i]].<ref refid="structnode__type_1a2a4bf87da850c2a946589606b2e33157" kindref="member">x0</ref><sp/>-<sp/>nodal-&gt;<ref refid="struct_nodal__structure_1a3ed7c5a4900781be4b94bc49fd189e45" kindref="member">node</ref>[element-&gt;<ref refid="struct_element__structure_1a6c9b10a142500847fddcc2b5fd237c13" kindref="member">ele</ref>[elementid].<ref refid="structelement__type_1a025bb5e0f05dda7a3fdb3bfc276eed51" kindref="member">nodes</ref>[0]].<ref refid="structnode__type_1a2a4bf87da850c2a946589606b2e33157" kindref="member">x0</ref>;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>F0[1][i<sp/>-<sp/>1]<sp/>=<sp/>nodal-&gt;<ref refid="struct_nodal__structure_1a3ed7c5a4900781be4b94bc49fd189e45" kindref="member">node</ref>[element-&gt;<ref refid="struct_element__structure_1a6c9b10a142500847fddcc2b5fd237c13" kindref="member">ele</ref>[elementid].<ref refid="structelement__type_1a025bb5e0f05dda7a3fdb3bfc276eed51" kindref="member">nodes</ref>[i]].<ref refid="structnode__type_1a3cb46d6ef5dc4a7a7f9d9ea878a0416f" kindref="member">y0</ref><sp/>-<sp/>nodal-&gt;<ref refid="struct_nodal__structure_1a3ed7c5a4900781be4b94bc49fd189e45" kindref="member">node</ref>[element-&gt;<ref refid="struct_element__structure_1a6c9b10a142500847fddcc2b5fd237c13" kindref="member">ele</ref>[elementid].<ref refid="structelement__type_1a025bb5e0f05dda7a3fdb3bfc276eed51" kindref="member">nodes</ref>[0]].<ref refid="structnode__type_1a3cb46d6ef5dc4a7a7f9d9ea878a0416f" kindref="member">y0</ref>;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FX[0][i<sp/>-<sp/>1]<sp/>=<sp/>nodal-&gt;<ref refid="struct_nodal__structure_1a3ed7c5a4900781be4b94bc49fd189e45" kindref="member">node</ref>[element-&gt;<ref refid="struct_element__structure_1a6c9b10a142500847fddcc2b5fd237c13" kindref="member">ele</ref>[elementid].<ref refid="structelement__type_1a025bb5e0f05dda7a3fdb3bfc276eed51" kindref="member">nodes</ref>[i]].<ref refid="structnode__type_1ac2e288ebffee7f8ca19c46021f4d38f0" kindref="member">x</ref><sp/>-<sp/>nodal-&gt;<ref refid="struct_nodal__structure_1a3ed7c5a4900781be4b94bc49fd189e45" kindref="member">node</ref>[element-&gt;<ref refid="struct_element__structure_1a6c9b10a142500847fddcc2b5fd237c13" kindref="member">ele</ref>[elementid].<ref refid="structelement__type_1a025bb5e0f05dda7a3fdb3bfc276eed51" kindref="member">nodes</ref>[0]].<ref refid="structnode__type_1ac2e288ebffee7f8ca19c46021f4d38f0" kindref="member">x</ref>;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FX[1][i<sp/>-<sp/>1]<sp/>=<sp/>nodal-&gt;<ref refid="struct_nodal__structure_1a3ed7c5a4900781be4b94bc49fd189e45" kindref="member">node</ref>[element-&gt;<ref refid="struct_element__structure_1a6c9b10a142500847fddcc2b5fd237c13" kindref="member">ele</ref>[elementid].<ref refid="structelement__type_1a025bb5e0f05dda7a3fdb3bfc276eed51" kindref="member">nodes</ref>[i]].<ref refid="structnode__type_1a18279dd4d4460f2130f7a45358c14ffa" kindref="member">y</ref><sp/>-<sp/>nodal-&gt;<ref refid="struct_nodal__structure_1a3ed7c5a4900781be4b94bc49fd189e45" kindref="member">node</ref>[element-&gt;<ref refid="struct_element__structure_1a6c9b10a142500847fddcc2b5fd237c13" kindref="member">ele</ref>[elementid].<ref refid="structelement__type_1a025bb5e0f05dda7a3fdb3bfc276eed51" kindref="member">nodes</ref>[0]].<ref refid="structnode__type_1a18279dd4d4460f2130f7a45358c14ffa" kindref="member">y</ref>;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LX[0][i<sp/>-<sp/>1]<sp/>=<sp/>nodal-&gt;<ref refid="struct_nodal__structure_1a772bffba62974940f3c98283802d5753" kindref="member">nodal_vel</ref>[element-&gt;<ref refid="struct_element__structure_1a6c9b10a142500847fddcc2b5fd237c13" kindref="member">ele</ref>[elementid].<ref refid="structelement__type_1a025bb5e0f05dda7a3fdb3bfc276eed51" kindref="member">nodes</ref>[i]].x<sp/>-<sp/>nodal-&gt;<ref refid="struct_nodal__structure_1a772bffba62974940f3c98283802d5753" kindref="member">nodal_vel</ref>[element-&gt;<ref refid="struct_element__structure_1a6c9b10a142500847fddcc2b5fd237c13" kindref="member">ele</ref>[elementid].<ref refid="structelement__type_1a025bb5e0f05dda7a3fdb3bfc276eed51" kindref="member">nodes</ref>[0]].x;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LX[1][i<sp/>-<sp/>1]<sp/>=<sp/>nodal-&gt;<ref refid="struct_nodal__structure_1a772bffba62974940f3c98283802d5753" kindref="member">nodal_vel</ref>[element-&gt;<ref refid="struct_element__structure_1a6c9b10a142500847fddcc2b5fd237c13" kindref="member">ele</ref>[elementid].<ref refid="structelement__type_1a025bb5e0f05dda7a3fdb3bfc276eed51" kindref="member">nodes</ref>[i]].y<sp/>-<sp/>nodal-&gt;<ref refid="struct_nodal__structure_1a772bffba62974940f3c98283802d5753" kindref="member">nodal_vel</ref>[element-&gt;<ref refid="struct_element__structure_1a6c9b10a142500847fddcc2b5fd237c13" kindref="member">ele</ref>[elementid].<ref refid="structelement__type_1a025bb5e0f05dda7a3fdb3bfc276eed51" kindref="member">nodes</ref>[0]].y;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/>Matrix2Inverse(F0,<sp/>F0inv,<sp/>voli);</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/>Matrix2Inverse(FX,<sp/>FXinv,<sp/>volc);</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>update<sp/>element<sp/>area<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/>element-&gt;<ref refid="struct_element__structure_1a6c9b10a142500847fddcc2b5fd237c13" kindref="member">ele</ref>[elementid].<ref refid="structelement__type_1aa4b45bf6cc9ca433ffa5ebd5e0425218" kindref="member">area</ref><sp/>=<sp/>0.5<sp/>*<sp/>voli;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>2;<sp/>i++)</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>2;<sp/>j++)</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>F[i][j]<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>L[i][j]<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(k<sp/>=<sp/>0;<sp/>k<sp/>&lt;<sp/>2;<sp/>k++)</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>F[i][j]<sp/>=<sp/>F[i][j]<sp/>+<sp/>FX[i][k]<sp/>*<sp/>F0inv[k][j];</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>L[i][j]<sp/>=<sp/>L[i][j]<sp/>+<sp/>LX[i][k]<sp/>*<sp/>FXinv[k][j];</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>2;<sp/>i++)</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>2;<sp/>j++)</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>B[i][j]<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(k<sp/>=<sp/>0;<sp/>k<sp/>&lt;<sp/>2;<sp/>k++)</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>B[i][j]<sp/>=<sp/>B[i][j]<sp/>+<sp/>F[i][k]<sp/>*<sp/>F[j][k];<sp/></highlight><highlight class="comment">/*<sp/>left<sp/>Cauchy-Green<sp/>strain<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>D[i][j]<sp/>=<sp/>0.5<sp/>*<sp/>(L[i][j]<sp/>+<sp/>L[j][i]);<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>rate<sp/>of<sp/>deformation<sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>E[i][j]<sp/>=<sp/>0.5<sp/>*<sp/>B[i][j];<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>small<sp/>strain<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>==<sp/>j)E[i][j]<sp/>=<sp/>E[i][j]<sp/>-<sp/>0.5;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>emax<sp/>=<sp/>Openfdem_max(1.0,<sp/>sqrt(((B[0][0]<sp/>+<sp/>B[1][1])<sp/>+</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sqrt((B[0][0]<sp/>-<sp/>B[1][1])<sp/>*<sp/>(B[0][0]<sp/>-<sp/>B[1][1])<sp/>+</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>4.0<sp/>*<sp/>B[1][0]<sp/>*<sp/>B[0][1]))<sp/>*<sp/>0.5));</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>for<sp/>plane<sp/>stress<sp/>(default)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/>lambda<sp/>=<sp/>solidmat-&gt;<ref refid="struct_solid__mat__structure_1abd0efe4abcf7d9df0896b53186177ae5" kindref="member">elemat</ref>[propelementid].<ref refid="structmat__element__t_1a0ab0303cb2396b3ad2dad522c5d893d2" kindref="member">mat</ref>-&gt;<ref refid="unionany__mat__type_1ad75543d390c29e156fc376f13f2632e0" kindref="member">soften</ref>.<ref refid="structsolid__soften__t_1a14c963d6d8380710c186c60602e1f0ca" kindref="member">E</ref><sp/>*<sp/>solidmat-&gt;<ref refid="struct_solid__mat__structure_1abd0efe4abcf7d9df0896b53186177ae5" kindref="member">elemat</ref>[propelementid].<ref refid="structmat__element__t_1a0ab0303cb2396b3ad2dad522c5d893d2" kindref="member">mat</ref>-&gt;<ref refid="unionany__mat__type_1ad75543d390c29e156fc376f13f2632e0" kindref="member">soften</ref>.<ref refid="structsolid__soften__t_1a06898261af043e5ebf4d9444a4383d54" kindref="member">v</ref><sp/>/<sp/>(1.0<sp/>+<sp/>solidmat-&gt;<ref refid="struct_solid__mat__structure_1abd0efe4abcf7d9df0896b53186177ae5" kindref="member">elemat</ref>[propelementid].<ref refid="structmat__element__t_1a0ab0303cb2396b3ad2dad522c5d893d2" kindref="member">mat</ref>-&gt;<ref refid="unionany__mat__type_1ad75543d390c29e156fc376f13f2632e0" kindref="member">soften</ref>.<ref refid="structsolid__soften__t_1a06898261af043e5ebf4d9444a4383d54" kindref="member">v</ref>)</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/<sp/>(1.0<sp/>-<sp/>2.0<sp/>*<sp/>solidmat-&gt;<ref refid="struct_solid__mat__structure_1abd0efe4abcf7d9df0896b53186177ae5" kindref="member">elemat</ref>[propelementid].<ref refid="structmat__element__t_1a0ab0303cb2396b3ad2dad522c5d893d2" kindref="member">mat</ref>-&gt;<ref refid="unionany__mat__type_1ad75543d390c29e156fc376f13f2632e0" kindref="member">soften</ref>.<ref refid="structsolid__soften__t_1a06898261af043e5ebf4d9444a4383d54" kindref="member">v</ref>);<sp/><sp/></highlight><highlight class="comment">//E<sp/>v<sp/>to<sp/>lamda<sp/>mu</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/>mu<sp/>=<sp/>solidmat-&gt;<ref refid="struct_solid__mat__structure_1abd0efe4abcf7d9df0896b53186177ae5" kindref="member">elemat</ref>[propelementid].<ref refid="structmat__element__t_1a0ab0303cb2396b3ad2dad522c5d893d2" kindref="member">mat</ref>-&gt;<ref refid="unionany__mat__type_1ad75543d390c29e156fc376f13f2632e0" kindref="member">soften</ref>.<ref refid="structsolid__soften__t_1a14c963d6d8380710c186c60602e1f0ca" kindref="member">E</ref><sp/>/<sp/>2.0<sp/>/<sp/>(1.0<sp/>+<sp/>solidmat-&gt;<ref refid="struct_solid__mat__structure_1abd0efe4abcf7d9df0896b53186177ae5" kindref="member">elemat</ref>[propelementid].<ref refid="structmat__element__t_1a0ab0303cb2396b3ad2dad522c5d893d2" kindref="member">mat</ref>-&gt;<ref refid="unionany__mat__type_1ad75543d390c29e156fc376f13f2632e0" kindref="member">soften</ref>.<ref refid="structsolid__soften__t_1a06898261af043e5ebf4d9444a4383d54" kindref="member">v</ref>);</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(soften_state[elementid]<sp/>&gt;<sp/>(-Openfdem_pos_epsilon))<sp/><sp/></highlight><highlight class="comment">//default<sp/>0.0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>soften_state[elementid]<sp/>=<sp/>Openfdem_max(soften_state[elementid],<sp/>((emax<sp/>-<sp/>1.0)<sp/>/<sp/>solidmat-&gt;<ref refid="struct_solid__mat__structure_1abd0efe4abcf7d9df0896b53186177ae5" kindref="member">elemat</ref>[propelementid].<ref refid="structmat__element__t_1a0ab0303cb2396b3ad2dad522c5d893d2" kindref="member">mat</ref>-&gt;<ref refid="unionany__mat__type_1ad75543d390c29e156fc376f13f2632e0" kindref="member">soften</ref>.<ref refid="structsolid__soften__t_1afe5a1a6ffe78fb667689d3c87a679de7" kindref="member">stretch</ref>));</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dmax<sp/>=<sp/>soften_state[elementid];</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dmax<sp/>=<sp/>Openfdem_min(1.0,<sp/>dmax<sp/>*<sp/>dmax<sp/>*<sp/>dmax);</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dmas<sp/>=<sp/>1.0;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dmax<sp/>=<sp/>0.0;<sp/>dmas<sp/>=<sp/>1.0<sp/>/<sp/>(propelementshear<sp/>*<sp/>propelementshear);</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>2;<sp/>i++)<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Cauchy<sp/>stress<sp/>T=2*mu*E+lamda*trace(E)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>2;<sp/>j++)</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T[i][j]<sp/>=<sp/>(1.0<sp/>-<sp/>dmax)<sp/>*</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(2.0<sp/>*<sp/>mu<sp/>*<sp/>E[i][j]<sp/>*<sp/>(voli<sp/>/<sp/>volc)<sp/>+<sp/>solidmat-&gt;<ref refid="struct_solid__mat__structure_1abd0efe4abcf7d9df0896b53186177ae5" kindref="member">elemat</ref>[propelementid].<ref refid="structmat__element__t_1a40cb5b4cd1114f92e20d24963e7d3d88" kindref="member">damp</ref><sp/>*<sp/>2.0<sp/>*<sp/>element-&gt;<ref refid="struct_element__structure_1a922558e5863d13cca59846944723c39e" kindref="member">e_min_size</ref><sp/>*<sp/>sqrt(solidmat-&gt;<ref refid="struct_solid__mat__structure_1abd0efe4abcf7d9df0896b53186177ae5" kindref="member">elemat</ref>[propelementid].<ref refid="structmat__element__t_1a0ab0303cb2396b3ad2dad522c5d893d2" kindref="member">mat</ref>-&gt;<ref refid="unionany__mat__type_1ad75543d390c29e156fc376f13f2632e0" kindref="member">soften</ref>.<ref refid="structsolid__soften__t_1a14c963d6d8380710c186c60602e1f0ca" kindref="member">E</ref><sp/>*</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>solidmat-&gt;<ref refid="struct_solid__mat__structure_1abd0efe4abcf7d9df0896b53186177ae5" kindref="member">elemat</ref>[propelementid].<ref refid="structmat__element__t_1a0ab0303cb2396b3ad2dad522c5d893d2" kindref="member">mat</ref>-&gt;<ref refid="unionany__mat__type_1ad75543d390c29e156fc376f13f2632e0" kindref="member">soften</ref>.<ref refid="structsolid__soften__t_1abef76d23cdd90539c6c86a2b2d9464c7" kindref="member">den</ref>)<sp/>*<sp/>D[i][j]);</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>==<sp/>j)</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(volc<sp/>&lt;<sp/>voli)</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T[i][j]<sp/>=<sp/>T[i][j]<sp/>+<sp/>lambda<sp/>*<sp/>(volc<sp/>/<sp/>voli<sp/>-<sp/>voli<sp/>/<sp/>volc)<sp/>*<sp/>0.5;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T[i][j]<sp/>=<sp/>T[i][j]<sp/>+<sp/>(1.0<sp/>-<sp/>dmax)<sp/>*<sp/>lambda<sp/>*<sp/>(volc<sp/>/<sp/>voli<sp/>-<sp/>voli<sp/>/<sp/>volc);</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/>element-&gt;<ref refid="struct_element__structure_1a00ba79f0b3cc0c2497018bd25be01d21" kindref="member">stress</ref>[elementid].xx<sp/>=<sp/>T[0][0];</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/>element-&gt;<ref refid="struct_element__structure_1a00ba79f0b3cc0c2497018bd25be01d21" kindref="member">stress</ref>[elementid].xy<sp/>=<sp/>T[0][1];</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/>element-&gt;<ref refid="struct_element__structure_1a00ba79f0b3cc0c2497018bd25be01d21" kindref="member">stress</ref>[elementid].yx<sp/>=<sp/>T[1][0];</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/>element-&gt;<ref refid="struct_element__structure_1a00ba79f0b3cc0c2497018bd25be01d21" kindref="member">stress</ref>[elementid].yy<sp/>=<sp/>T[1][1];</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/>element-&gt;<ref refid="struct_element__structure_1a4a779ad74ef91f24dee1063b32a2dd26" kindref="member">strain</ref>[elementid].xx<sp/>=<sp/>E[0][0];</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/>element-&gt;<ref refid="struct_element__structure_1a4a779ad74ef91f24dee1063b32a2dd26" kindref="member">strain</ref>[elementid].xy<sp/>=<sp/>E[0][1];</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/>element-&gt;<ref refid="struct_element__structure_1a4a779ad74ef91f24dee1063b32a2dd26" kindref="member">strain</ref>[elementid].yx<sp/>=<sp/>E[1][0];</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/>element-&gt;<ref refid="struct_element__structure_1a4a779ad74ef91f24dee1063b32a2dd26" kindref="member">strain</ref>[elementid].yy<sp/>=<sp/>E[1][1];</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/>element-&gt;<ref refid="struct_element__structure_1a170278c16947cd7b9e0686f225295873" kindref="member">strain_rate</ref>[elementid].xx<sp/>=<sp/>D[0][0];</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/>element-&gt;<ref refid="struct_element__structure_1a170278c16947cd7b9e0686f225295873" kindref="member">strain_rate</ref>[elementid].xy<sp/>=<sp/>D[0][1];</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/>element-&gt;<ref refid="struct_element__structure_1a170278c16947cd7b9e0686f225295873" kindref="member">strain_rate</ref>[elementid].yx<sp/>=<sp/>D[1][0];</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/>element-&gt;<ref refid="struct_element__structure_1a170278c16947cd7b9e0686f225295873" kindref="member">strain_rate</ref>[elementid].yy<sp/>=<sp/>D[1][1];</highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>3;<sp/>i++)<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>body<sp/>stress<sp/>to<sp/>nodal<sp/>force<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>j<sp/>=<sp/>i<sp/>+<sp/>1;<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(j<sp/>&gt;<sp/>2)j<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>k<sp/>=<sp/>j<sp/>+<sp/>1;<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(k<sp/>&gt;<sp/>2)k<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nx<sp/>=<sp/>nodal-&gt;<ref refid="struct_nodal__structure_1a3ed7c5a4900781be4b94bc49fd189e45" kindref="member">node</ref>[element-&gt;<ref refid="struct_element__structure_1a6c9b10a142500847fddcc2b5fd237c13" kindref="member">ele</ref>[elementid].<ref refid="structelement__type_1a025bb5e0f05dda7a3fdb3bfc276eed51" kindref="member">nodes</ref>[k]].<ref refid="structnode__type_1a18279dd4d4460f2130f7a45358c14ffa" kindref="member">y</ref><sp/>-<sp/>nodal-&gt;<ref refid="struct_nodal__structure_1a3ed7c5a4900781be4b94bc49fd189e45" kindref="member">node</ref>[element-&gt;<ref refid="struct_element__structure_1a6c9b10a142500847fddcc2b5fd237c13" kindref="member">ele</ref>[elementid].<ref refid="structelement__type_1a025bb5e0f05dda7a3fdb3bfc276eed51" kindref="member">nodes</ref>[j]].<ref refid="structnode__type_1a18279dd4d4460f2130f7a45358c14ffa" kindref="member">y</ref>;</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ny<sp/>=<sp/>nodal-&gt;<ref refid="struct_nodal__structure_1a3ed7c5a4900781be4b94bc49fd189e45" kindref="member">node</ref>[element-&gt;<ref refid="struct_element__structure_1a6c9b10a142500847fddcc2b5fd237c13" kindref="member">ele</ref>[elementid].<ref refid="structelement__type_1a025bb5e0f05dda7a3fdb3bfc276eed51" kindref="member">nodes</ref>[j]].<ref refid="structnode__type_1ac2e288ebffee7f8ca19c46021f4d38f0" kindref="member">x</ref><sp/>-<sp/>nodal-&gt;<ref refid="struct_nodal__structure_1a3ed7c5a4900781be4b94bc49fd189e45" kindref="member">node</ref>[element-&gt;<ref refid="struct_element__structure_1a6c9b10a142500847fddcc2b5fd237c13" kindref="member">ele</ref>[elementid].<ref refid="structelement__type_1a025bb5e0f05dda7a3fdb3bfc276eed51" kindref="member">nodes</ref>[k]].<ref refid="structnode__type_1ac2e288ebffee7f8ca19c46021f4d38f0" kindref="member">x</ref>;</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*Body<sp/>force*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nodal-&gt;<ref refid="struct_nodal__structure_1a3ed7c5a4900781be4b94bc49fd189e45" kindref="member">node</ref>[element-&gt;<ref refid="struct_element__structure_1a6c9b10a142500847fddcc2b5fd237c13" kindref="member">ele</ref>[elementid].<ref refid="structelement__type_1a025bb5e0f05dda7a3fdb3bfc276eed51" kindref="member">nodes</ref>[i]].<ref refid="structnode__type_1a2547c7e5234ab6bc9cf895624626bb36" kindref="member">mass</ref><sp/>=</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nodal-&gt;<ref refid="struct_nodal__structure_1a3ed7c5a4900781be4b94bc49fd189e45" kindref="member">node</ref>[element-&gt;<ref refid="struct_element__structure_1a6c9b10a142500847fddcc2b5fd237c13" kindref="member">ele</ref>[elementid].<ref refid="structelement__type_1a025bb5e0f05dda7a3fdb3bfc276eed51" kindref="member">nodes</ref>[i]].<ref refid="structnode__type_1a2547c7e5234ab6bc9cf895624626bb36" kindref="member">mass</ref><sp/>+<sp/>dmas<sp/>*<sp/>solidmat-&gt;<ref refid="struct_solid__mat__structure_1abd0efe4abcf7d9df0896b53186177ae5" kindref="member">elemat</ref>[propelementid].<ref refid="structmat__element__t_1a0ab0303cb2396b3ad2dad522c5d893d2" kindref="member">mat</ref>-&gt;<ref refid="unionany__mat__type_1ad75543d390c29e156fc376f13f2632e0" kindref="member">soften</ref>.<ref refid="structsolid__soften__t_1abef76d23cdd90539c6c86a2b2d9464c7" kindref="member">den</ref><sp/>*<sp/>voli<sp/>/<sp/>6.0;</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nodal-&gt;<ref refid="struct_nodal__structure_1a26f47726ca87f90b27c31e37e11c8772" kindref="member">total_force</ref>[element-&gt;<ref refid="struct_element__structure_1a6c9b10a142500847fddcc2b5fd237c13" kindref="member">ele</ref>[elementid].<ref refid="structelement__type_1a025bb5e0f05dda7a3fdb3bfc276eed51" kindref="member">nodes</ref>[i]].x<sp/>=<sp/>nodal-&gt;<ref refid="struct_nodal__structure_1a26f47726ca87f90b27c31e37e11c8772" kindref="member">total_force</ref>[element-&gt;<ref refid="struct_element__structure_1a6c9b10a142500847fddcc2b5fd237c13" kindref="member">ele</ref>[elementid].<ref refid="structelement__type_1a025bb5e0f05dda7a3fdb3bfc276eed51" kindref="member">nodes</ref>[i]].x<sp/>+</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(T[0][0]<sp/>*<sp/>nx<sp/>+<sp/>T[0][1]<sp/>*<sp/>ny)<sp/>/<sp/>2.0;</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nodal-&gt;<ref refid="struct_nodal__structure_1a26f47726ca87f90b27c31e37e11c8772" kindref="member">total_force</ref>[element-&gt;<ref refid="struct_element__structure_1a6c9b10a142500847fddcc2b5fd237c13" kindref="member">ele</ref>[elementid].<ref refid="structelement__type_1a025bb5e0f05dda7a3fdb3bfc276eed51" kindref="member">nodes</ref>[i]].y<sp/>=<sp/>nodal-&gt;<ref refid="struct_nodal__structure_1a26f47726ca87f90b27c31e37e11c8772" kindref="member">total_force</ref>[element-&gt;<ref refid="struct_element__structure_1a6c9b10a142500847fddcc2b5fd237c13" kindref="member">ele</ref>[elementid].<ref refid="structelement__type_1a025bb5e0f05dda7a3fdb3bfc276eed51" kindref="member">nodes</ref>[i]].y<sp/>+</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(T[1][0]<sp/>*<sp/>nx<sp/>+<sp/>T[1][1]<sp/>*<sp/>ny)<sp/>/<sp/>2.0;</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="145"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="solid_mechanics/solid_mechanics_soften_triangle.c"/>
  </compounddef>
</doxygen>
