<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="push__cohesive__element__materials_8c" kind="file" language="C++">
    <compoundname>push_cohesive_element_materials.c</compoundname>
    <includes refid="push__cohesive__element__materials_8h" local="yes">push_cohesive_element_materials.h</includes>
    <includes local="no">string.h</includes>
    <includes local="yes">../../../common/openfdem_math.h</includes>
    <incdepgraph>
      <node id="4">
        <label>string.h</label>
      </node>
      <node id="5">
        <label>../../../common/openfdem_math.h</label>
      </node>
      <node id="3">
        <label>../../../io/parser.h</label>
      </node>
      <node id="1">
        <label>materials/solid_mat_cohesive/push_cohesive_element_materials.c</label>
        <link refid="push__cohesive__element__materials_8c"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>push_cohesive_element_materials.h</label>
        <link refid="push__cohesive__element__materials_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="push__cohesive__element__materials_8c_1ac6d317f7cda753300c2d76b2f81d9686" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void push_cohesive_element_materials</definition>
        <argsstring>(General general, Cohelement cohelement, Group group, Solidmat solidmat, char *keyword)</argsstring>
        <name>push_cohesive_element_materials</name>
        <param>
          <type>General</type>
          <declname>general</declname>
        </param>
        <param>
          <type><ref refid="openfdem__solid__cohesive_8h_1a1d2cbf2eacc8a3866c7d87e7227d8b22" kindref="member">Cohelement</ref></type>
          <declname>cohelement</declname>
        </param>
        <param>
          <type>Group</type>
          <declname>group</declname>
        </param>
        <param>
          <type><ref refid="openfdem__mat_8h_1a10eec44786d5659964548a8edabef182" kindref="member">Solidmat</ref></type>
          <declname>solidmat</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>keyword</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="materials/solid_mat_cohesive/push_cohesive_element_materials.c" line="5" column="6" bodyfile="materials/solid_mat_cohesive/push_cohesive_element_materials.c" bodystart="5" bodyend="924"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;<ref refid="push__cohesive__element__materials_8h" kindref="compound">push_cohesive_element_materials.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../../../common/openfdem_math.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="push__cohesive__element__materials_8c_1ac6d317f7cda753300c2d76b2f81d9686" kindref="member">push_cohesive_element_materials</ref>(General<sp/>general,<sp/><ref refid="struct_coh__element__structure" kindref="compound">Cohelement</ref><sp/>cohelement,<sp/>Group<sp/>group,<sp/><ref refid="struct_solid__mat__structure" kindref="compound">Solidmat</ref><sp/>solidmat,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>keyword)<sp/>{</highlight></codeline>
<codeline lineno="6"><highlight class="normal"><sp/><sp/><sp/><sp/>UInt<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nmat<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>solidmat-&gt;<ref refid="struct_solid__mat__structure_1a5c97443b78faecc0f0d70a809f84ea96" kindref="member">n_cohmat</ref>;</highlight></codeline>
<codeline lineno="7"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structmat__cohelement__t" kindref="compound">mat_cohelement_t</ref>*<sp/>cohele_mat<sp/>=<sp/>solidmat-&gt;<ref refid="struct_solid__mat__structure_1aa4d8920cccd2705cc2d8d8de0033b1fd" kindref="member">cohelemat</ref>;</highlight></codeline>
<codeline lineno="8"><highlight class="normal"><sp/><sp/><sp/><sp/>Real<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>value;</highlight></codeline>
<codeline lineno="9"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cons[10];</highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>find_id<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sn[300];</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mat_keyword[20];<sp/></highlight><highlight class="comment">/*maximuum<sp/>10<sp/>keyowrds<sp/>for<sp/>each<sp/>model<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>20;<sp/>i++)</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mat_keyword[i]<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/>keyword_count<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>delim[]<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!stricmp(</highlight><highlight class="stringliteral">&quot;all&quot;</highlight><highlight class="normal">,<sp/>keyword))<sp/>{</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nmat<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cohele_mat<sp/>=<sp/>(<ref refid="structmat__cohelement__t" kindref="compound">mat_cohelement_t</ref>*)malloc(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structmat__cohelement__t" kindref="compound">mat_cohelement_t</ref>));</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structmat__cohelement__t" kindref="compound">mat_cohelement_t</ref>*<sp/>temp<sp/>=<sp/>(<ref refid="structmat__cohelement__t" kindref="compound">mat_cohelement_t</ref>*)realloc(cohele_mat,<sp/>(nmat<sp/>+<sp/>1)<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structmat__cohelement__t" kindref="compound">mat_cohelement_t</ref>));</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cohele_mat<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>temp;</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>push<sp/>to<sp/>element<sp/>matid</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(UInt<sp/>elementid<sp/>=<sp/>0;<sp/>elementid<sp/>&lt;<sp/>cohelement-&gt;<ref refid="struct_coh__element__structure_1af9606282b3f52144a66174c964f90276" kindref="member">cohe_num</ref>;<sp/>elementid++)<sp/>{</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cohelement-&gt;<ref refid="struct_coh__element__structure_1a5c6b14a4ceedd3ac04927d5d6c28811c" kindref="member">cohele</ref>[elementid].<ref refid="structcohelement__type_1abdc03d35cad4b39f082215c818e84067" kindref="member">matid</ref><sp/>=<sp/>nmat;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cohele_mat[nmat].<ref refid="structmat__cohelement__t_1a7bb5e40c10df6a41df64bda1f4bb3e26" kindref="member">tag</ref><sp/>=<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)malloc(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">)<sp/>*<sp/>20);</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strcpy(cohele_mat[nmat].tag,<sp/>keyword);</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parse_keyword(general-&gt;InputFile,<sp/>cons);</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!stricmp(cons,<sp/></highlight><highlight class="stringliteral">&quot;EM&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>read<sp/>a<sp/>line<sp/>to<sp/>avoid<sp/>\n<sp/>at<sp/>the<sp/>end<sp/>of<sp/>the<sp/>line<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ret<sp/>=<sp/>fscanf(general-&gt;InputFile,<sp/></highlight><highlight class="stringliteral">&quot;%[^\n]%*c&quot;</highlight><highlight class="normal">,<sp/>sn);</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>split<sp/>the<sp/>string<sp/>into<sp/>strings<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>ptr<sp/>=<sp/>strtok(sn,<sp/>delim);</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(ptr<sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mat_keyword[keyword_count]<sp/>=<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)malloc(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">)<sp/>*<sp/>20);</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strcpy(mat_keyword[keyword_count],<sp/>ptr);</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptr<sp/>=<sp/>strtok(NULL,<sp/>delim);</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>keyword_count++;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cohele_mat[nmat].<ref refid="structmat__cohelement__t_1af10a9fa01cb90333299f9aedd0e4a181" kindref="member">cons</ref><sp/>=<sp/>COH_EM;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cohele_mat[nmat].<ref refid="structmat__cohelement__t_1aadcf8147cd78389b6a462bde83e7bec9" kindref="member">mat</ref><sp/><sp/>=<sp/>(<ref refid="unionany__cohmat__type" kindref="compound">any_cohmat_type</ref>*)malloc(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="unionany__cohmat__type" kindref="compound">any_cohmat_type</ref>));</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*initialize<sp/>the<sp/>parameters<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cohele_mat[nmat].<ref refid="structmat__cohelement__t_1aadcf8147cd78389b6a462bde83e7bec9" kindref="member">mat</ref>-&gt;<ref refid="unionany__cohmat__type_1a2db898a34760610abf5666bb439f7dc9" kindref="member">EM</ref>.<ref refid="structsolidcoh___e_m__t_1a4c9547f0756d1ef47036d3e7bfee1ddd" kindref="member">ten</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cohele_mat[nmat].<ref refid="structmat__cohelement__t_1aadcf8147cd78389b6a462bde83e7bec9" kindref="member">mat</ref>-&gt;<ref refid="unionany__cohmat__type_1a2db898a34760610abf5666bb439f7dc9" kindref="member">EM</ref>.<ref refid="structsolidcoh___e_m__t_1a792ea6e0cbf026edd6f77835f0fb7c8d" kindref="member">coh</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cohele_mat[nmat].<ref refid="structmat__cohelement__t_1aadcf8147cd78389b6a462bde83e7bec9" kindref="member">mat</ref>-&gt;<ref refid="unionany__cohmat__type_1a2db898a34760610abf5666bb439f7dc9" kindref="member">EM</ref>.<ref refid="structsolidcoh___e_m__t_1a87632afe13128ce6163d016ae441eb29" kindref="member">fri</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cohele_mat[nmat].<ref refid="structmat__cohelement__t_1aadcf8147cd78389b6a462bde83e7bec9" kindref="member">mat</ref>-&gt;<ref refid="unionany__cohmat__type_1a2db898a34760610abf5666bb439f7dc9" kindref="member">EM</ref>.<ref refid="structsolidcoh___e_m__t_1a58eb48dec3e590a5cd1548c0e2369da5" kindref="member">GI</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cohele_mat[nmat].<ref refid="structmat__cohelement__t_1aadcf8147cd78389b6a462bde83e7bec9" kindref="member">mat</ref>-&gt;<ref refid="unionany__cohmat__type_1a2db898a34760610abf5666bb439f7dc9" kindref="member">EM</ref>.<ref refid="structsolidcoh___e_m__t_1ac83bcaf81331cfd59d30ee2648fb7d2f" kindref="member">GII</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cohele_mat[nmat].<ref refid="structmat__cohelement__t_1aadcf8147cd78389b6a462bde83e7bec9" kindref="member">mat</ref>-&gt;<ref refid="unionany__cohmat__type_1a2db898a34760610abf5666bb439f7dc9" kindref="member">EM</ref>.<ref refid="structsolidcoh___e_m__t_1a2012363918f3e6b9833567dfef6c22f1" kindref="member">pn</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cohele_mat[nmat].<ref refid="structmat__cohelement__t_1aadcf8147cd78389b6a462bde83e7bec9" kindref="member">mat</ref>-&gt;<ref refid="unionany__cohmat__type_1a2db898a34760610abf5666bb439f7dc9" kindref="member">EM</ref>.<ref refid="structsolidcoh___e_m__t_1aa70c5b55bd505e62c2ba18dc264b5259" kindref="member">pt</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cohele_mat[nmat].<ref refid="structmat__cohelement__t_1aadcf8147cd78389b6a462bde83e7bec9" kindref="member">mat</ref>-&gt;<ref refid="unionany__cohmat__type_1a2db898a34760610abf5666bb439f7dc9" kindref="member">EM</ref>.<ref refid="structsolidcoh___e_m__t_1a119a2cdb7f2766b7eb9d79d6c58f93a5" kindref="member">beta_n</ref><sp/><sp/><sp/><sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cohele_mat[nmat].<ref refid="structmat__cohelement__t_1aadcf8147cd78389b6a462bde83e7bec9" kindref="member">mat</ref>-&gt;<ref refid="unionany__cohmat__type_1a2db898a34760610abf5666bb439f7dc9" kindref="member">EM</ref>.<ref refid="structsolidcoh___e_m__t_1a62bca2566e5a52b4fc93d2fc608887b9" kindref="member">beta_t</ref><sp/><sp/><sp/><sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cohele_mat[nmat].<ref refid="structmat__cohelement__t_1aadcf8147cd78389b6a462bde83e7bec9" kindref="member">mat</ref>-&gt;<ref refid="unionany__cohmat__type_1a2db898a34760610abf5666bb439f7dc9" kindref="member">EM</ref>.<ref refid="structsolidcoh___e_m__t_1ab08335e8ed2dea965b3bf4959e638b66" kindref="member">thermal_h</ref><sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>keyword_count;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strnicmp(mat_keyword[i],<sp/></highlight><highlight class="stringliteral">&quot;tension&quot;</highlight><highlight class="normal">,<sp/>3)<sp/>==<sp/>0)<sp/></highlight><highlight class="comment">/*<sp/>tension<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cohele_mat[nmat].<ref refid="structmat__cohelement__t_1aadcf8147cd78389b6a462bde83e7bec9" kindref="member">mat</ref>-&gt;<ref refid="unionany__cohmat__type_1a2db898a34760610abf5666bb439f7dc9" kindref="member">EM</ref>.<ref refid="structsolidcoh___e_m__t_1a4c9547f0756d1ef47036d3e7bfee1ddd" kindref="member">ten</ref><sp/>=<sp/>strtod(mat_keyword[i<sp/>+<sp/>1],<sp/>NULL);</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i++;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strnicmp(mat_keyword[i],<sp/></highlight><highlight class="stringliteral">&quot;cohesion&quot;</highlight><highlight class="normal">,<sp/>3)<sp/>==<sp/>0)<sp/></highlight><highlight class="comment">/*<sp/>cohesion<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cohele_mat[nmat].<ref refid="structmat__cohelement__t_1aadcf8147cd78389b6a462bde83e7bec9" kindref="member">mat</ref>-&gt;<ref refid="unionany__cohmat__type_1a2db898a34760610abf5666bb439f7dc9" kindref="member">EM</ref>.<ref refid="structsolidcoh___e_m__t_1a792ea6e0cbf026edd6f77835f0fb7c8d" kindref="member">coh</ref><sp/>=<sp/>strtod(mat_keyword[i<sp/>+<sp/>1],<sp/>NULL);</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i++;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strnicmp(mat_keyword[i],<sp/></highlight><highlight class="stringliteral">&quot;pn&quot;</highlight><highlight class="normal">,<sp/>2)<sp/>==<sp/>0)<sp/></highlight><highlight class="comment">/*<sp/>pn<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cohele_mat[nmat].<ref refid="structmat__cohelement__t_1aadcf8147cd78389b6a462bde83e7bec9" kindref="member">mat</ref>-&gt;<ref refid="unionany__cohmat__type_1a2db898a34760610abf5666bb439f7dc9" kindref="member">EM</ref>.<ref refid="structsolidcoh___e_m__t_1a2012363918f3e6b9833567dfef6c22f1" kindref="member">pn</ref><sp/>=<sp/>strtod(mat_keyword[i<sp/>+<sp/>1],<sp/>NULL);</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i++;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strnicmp(mat_keyword[i],<sp/></highlight><highlight class="stringliteral">&quot;pt&quot;</highlight><highlight class="normal">,<sp/>2)<sp/>==<sp/>0)<sp/></highlight><highlight class="comment">/*<sp/>pt<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cohele_mat[nmat].<ref refid="structmat__cohelement__t_1aadcf8147cd78389b6a462bde83e7bec9" kindref="member">mat</ref>-&gt;<ref refid="unionany__cohmat__type_1a2db898a34760610abf5666bb439f7dc9" kindref="member">EM</ref>.<ref refid="structsolidcoh___e_m__t_1aa70c5b55bd505e62c2ba18dc264b5259" kindref="member">pt</ref><sp/>=<sp/>strtod(mat_keyword[i<sp/>+<sp/>1],<sp/>NULL);</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i++;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(stricmp(mat_keyword[i],<sp/></highlight><highlight class="stringliteral">&quot;GI&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)<sp/></highlight><highlight class="comment">/*<sp/>GI<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cohele_mat[nmat].<ref refid="structmat__cohelement__t_1aadcf8147cd78389b6a462bde83e7bec9" kindref="member">mat</ref>-&gt;<ref refid="unionany__cohmat__type_1a2db898a34760610abf5666bb439f7dc9" kindref="member">EM</ref>.<ref refid="structsolidcoh___e_m__t_1a58eb48dec3e590a5cd1548c0e2369da5" kindref="member">GI</ref><sp/>=<sp/>strtod(mat_keyword[i<sp/>+<sp/>1],<sp/>NULL);</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i++;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(stricmp(mat_keyword[i],<sp/></highlight><highlight class="stringliteral">&quot;GII&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)<sp/></highlight><highlight class="comment">/*<sp/>GII<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cohele_mat[nmat].<ref refid="structmat__cohelement__t_1aadcf8147cd78389b6a462bde83e7bec9" kindref="member">mat</ref>-&gt;<ref refid="unionany__cohmat__type_1a2db898a34760610abf5666bb439f7dc9" kindref="member">EM</ref>.<ref refid="structsolidcoh___e_m__t_1ac83bcaf81331cfd59d30ee2648fb7d2f" kindref="member">GII</ref><sp/>=<sp/>strtod(mat_keyword[i<sp/>+<sp/>1],<sp/>NULL);</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i++;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strnicmp(mat_keyword[i],<sp/></highlight><highlight class="stringliteral">&quot;friction&quot;</highlight><highlight class="normal">,<sp/>3)<sp/>==<sp/>0)<sp/></highlight><highlight class="comment">/*<sp/>friction<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cohele_mat[nmat].<ref refid="structmat__cohelement__t_1aadcf8147cd78389b6a462bde83e7bec9" kindref="member">mat</ref>-&gt;<ref refid="unionany__cohmat__type_1a2db898a34760610abf5666bb439f7dc9" kindref="member">EM</ref>.<ref refid="structsolidcoh___e_m__t_1a87632afe13128ce6163d016ae441eb29" kindref="member">fri</ref><sp/>=<sp/>strtod(mat_keyword[i<sp/>+<sp/>1],<sp/>NULL);</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i++;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(stricmp(mat_keyword[i],<sp/></highlight><highlight class="stringliteral">&quot;beta_I&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)<sp/></highlight><highlight class="comment">/*<sp/>normal<sp/>dashpot<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cohele_mat[nmat].<ref refid="structmat__cohelement__t_1aadcf8147cd78389b6a462bde83e7bec9" kindref="member">mat</ref>-&gt;<ref refid="unionany__cohmat__type_1a2db898a34760610abf5666bb439f7dc9" kindref="member">EM</ref>.<ref refid="structsolidcoh___e_m__t_1a119a2cdb7f2766b7eb9d79d6c58f93a5" kindref="member">beta_n</ref><sp/>=<sp/>strtod(mat_keyword[i<sp/>+<sp/>1],<sp/>NULL);</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i++;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(stricmp(mat_keyword[i],<sp/></highlight><highlight class="stringliteral">&quot;beta_II&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)<sp/></highlight><highlight class="comment">/*<sp/>tangentinal<sp/>dashpot<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cohele_mat[nmat].<ref refid="structmat__cohelement__t_1aadcf8147cd78389b6a462bde83e7bec9" kindref="member">mat</ref>-&gt;<ref refid="unionany__cohmat__type_1a2db898a34760610abf5666bb439f7dc9" kindref="member">EM</ref>.<ref refid="structsolidcoh___e_m__t_1a62bca2566e5a52b4fc93d2fc608887b9" kindref="member">beta_t</ref><sp/>=<sp/>strtod(mat_keyword[i<sp/>+<sp/>1],<sp/>NULL);</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i++;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(stricmp(mat_keyword[i],<sp/></highlight><highlight class="stringliteral">&quot;thermal_h&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)<sp/></highlight><highlight class="comment">/*<sp/>thermal_h<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cohele_mat[nmat].<ref refid="structmat__cohelement__t_1aadcf8147cd78389b6a462bde83e7bec9" kindref="member">mat</ref>-&gt;<ref refid="unionany__cohmat__type_1a2db898a34760610abf5666bb439f7dc9" kindref="member">EM</ref>.<ref refid="structsolidcoh___e_m__t_1ab08335e8ed2dea965b3bf4959e638b66" kindref="member">thermal_h</ref><sp/>=<sp/>strtod(mat_keyword[i<sp/>+<sp/>1],<sp/>NULL);</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i++;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strnicmp(mat_keyword[i],<sp/></highlight><highlight class="stringliteral">&quot;#&quot;</highlight><highlight class="normal">,<sp/>1)<sp/>==<sp/>0)<sp/></highlight><highlight class="comment">/*<sp/>comments<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dump_message_keyword(</highlight><highlight class="stringliteral">&quot;Error:<sp/>no<sp/>found<sp/>keyword:<sp/>&quot;</highlight><highlight class="normal">,<sp/>mat_keyword[i]);</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exit(-1);</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nmat++;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!stricmp(cons,<sp/></highlight><highlight class="stringliteral">&quot;EM_dyn&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>read<sp/>a<sp/>line<sp/>to<sp/>avoid<sp/>\n<sp/>at<sp/>the<sp/>end<sp/>of<sp/>the<sp/>line<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ret<sp/>=<sp/>fscanf(general-&gt;InputFile,<sp/></highlight><highlight class="stringliteral">&quot;%[^\n]%*c&quot;</highlight><highlight class="normal">,<sp/>sn);</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>split<sp/>the<sp/>string<sp/>into<sp/>strings<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>ptr<sp/>=<sp/>strtok(sn,<sp/>delim);</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(ptr<sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mat_keyword[keyword_count]<sp/>=<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)malloc(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">)<sp/>*<sp/>20);</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strcpy(mat_keyword[keyword_count],<sp/>ptr);</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptr<sp/>=<sp/>strtok(NULL,<sp/>delim);</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>keyword_count++;</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cohele_mat[nmat].<ref refid="structmat__cohelement__t_1af10a9fa01cb90333299f9aedd0e4a181" kindref="member">cons</ref><sp/>=<sp/>COH_EM_DYNAMIC;</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cohele_mat[nmat].<ref refid="structmat__cohelement__t_1aadcf8147cd78389b6a462bde83e7bec9" kindref="member">mat</ref><sp/><sp/>=<sp/>(<ref refid="unionany__cohmat__type" kindref="compound">any_cohmat_type</ref>*)malloc(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="unionany__cohmat__type" kindref="compound">any_cohmat_type</ref>));</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*initialize<sp/>the<sp/>parameters<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cohele_mat[nmat].<ref refid="structmat__cohelement__t_1aadcf8147cd78389b6a462bde83e7bec9" kindref="member">mat</ref>-&gt;<ref refid="unionany__cohmat__type_1a6580630e08ffd95dce1987938f1f03e8" kindref="member">EM_dyn</ref>.<ref refid="structsolidcohdyn___e_m__t_1a4c9547f0756d1ef47036d3e7bfee1ddd" kindref="member">ten</ref><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cohele_mat[nmat].<ref refid="structmat__cohelement__t_1aadcf8147cd78389b6a462bde83e7bec9" kindref="member">mat</ref>-&gt;<ref refid="unionany__cohmat__type_1a6580630e08ffd95dce1987938f1f03e8" kindref="member">EM_dyn</ref>.<ref refid="structsolidcohdyn___e_m__t_1a792ea6e0cbf026edd6f77835f0fb7c8d" kindref="member">coh</ref><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cohele_mat[nmat].<ref refid="structmat__cohelement__t_1aadcf8147cd78389b6a462bde83e7bec9" kindref="member">mat</ref>-&gt;<ref refid="unionany__cohmat__type_1a6580630e08ffd95dce1987938f1f03e8" kindref="member">EM_dyn</ref>.<ref refid="structsolidcohdyn___e_m__t_1a87632afe13128ce6163d016ae441eb29" kindref="member">fri</ref><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cohele_mat[nmat].<ref refid="structmat__cohelement__t_1aadcf8147cd78389b6a462bde83e7bec9" kindref="member">mat</ref>-&gt;<ref refid="unionany__cohmat__type_1a6580630e08ffd95dce1987938f1f03e8" kindref="member">EM_dyn</ref>.<ref refid="structsolidcohdyn___e_m__t_1a58eb48dec3e590a5cd1548c0e2369da5" kindref="member">GI</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cohele_mat[nmat].<ref refid="structmat__cohelement__t_1aadcf8147cd78389b6a462bde83e7bec9" kindref="member">mat</ref>-&gt;<ref refid="unionany__cohmat__type_1a6580630e08ffd95dce1987938f1f03e8" kindref="member">EM_dyn</ref>.<ref refid="structsolidcohdyn___e_m__t_1ac83bcaf81331cfd59d30ee2648fb7d2f" kindref="member">GII</ref><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cohele_mat[nmat].<ref refid="structmat__cohelement__t_1aadcf8147cd78389b6a462bde83e7bec9" kindref="member">mat</ref>-&gt;<ref refid="unionany__cohmat__type_1a6580630e08ffd95dce1987938f1f03e8" kindref="member">EM_dyn</ref>.<ref refid="structsolidcohdyn___e_m__t_1a2012363918f3e6b9833567dfef6c22f1" kindref="member">pn</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cohele_mat[nmat].<ref refid="structmat__cohelement__t_1aadcf8147cd78389b6a462bde83e7bec9" kindref="member">mat</ref>-&gt;<ref refid="unionany__cohmat__type_1a6580630e08ffd95dce1987938f1f03e8" kindref="member">EM_dyn</ref>.<ref refid="structsolidcohdyn___e_m__t_1aa70c5b55bd505e62c2ba18dc264b5259" kindref="member">pt</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cohele_mat[nmat].<ref refid="structmat__cohelement__t_1aadcf8147cd78389b6a462bde83e7bec9" kindref="member">mat</ref>-&gt;<ref refid="unionany__cohmat__type_1a6580630e08ffd95dce1987938f1f03e8" kindref="member">EM_dyn</ref>.<ref refid="structsolidcohdyn___e_m__t_1a51fe15be911e1dfd322b0c922de5dc61" kindref="member">c_rate_n</ref><sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cohele_mat[nmat].<ref refid="structmat__cohelement__t_1aadcf8147cd78389b6a462bde83e7bec9" kindref="member">mat</ref>-&gt;<ref refid="unionany__cohmat__type_1a6580630e08ffd95dce1987938f1f03e8" kindref="member">EM_dyn</ref>.<ref refid="structsolidcohdyn___e_m__t_1a1a7bc85cca133c4cedd3c0116f51bbd5" kindref="member">exp_n</ref><sp/><sp/><sp/><sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cohele_mat[nmat].<ref refid="structmat__cohelement__t_1aadcf8147cd78389b6a462bde83e7bec9" kindref="member">mat</ref>-&gt;<ref refid="unionany__cohmat__type_1a6580630e08ffd95dce1987938f1f03e8" kindref="member">EM_dyn</ref>.<ref refid="structsolidcohdyn___e_m__t_1abcfa2747ea15146f89cad8f47450e2c1" kindref="member">c_rate_s</ref><sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cohele_mat[nmat].<ref refid="structmat__cohelement__t_1aadcf8147cd78389b6a462bde83e7bec9" kindref="member">mat</ref>-&gt;<ref refid="unionany__cohmat__type_1a6580630e08ffd95dce1987938f1f03e8" kindref="member">EM_dyn</ref>.<ref refid="structsolidcohdyn___e_m__t_1a4ae914e031424ee174f7e0677f63cb55" kindref="member">exp_s</ref><sp/><sp/><sp/><sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>keyword_count;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strnicmp(mat_keyword[i],<sp/></highlight><highlight class="stringliteral">&quot;tension&quot;</highlight><highlight class="normal">,<sp/>3)<sp/>==<sp/>0)<sp/></highlight><highlight class="comment">/*<sp/>tension<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cohele_mat[nmat].<ref refid="structmat__cohelement__t_1aadcf8147cd78389b6a462bde83e7bec9" kindref="member">mat</ref>-&gt;<ref refid="unionany__cohmat__type_1a6580630e08ffd95dce1987938f1f03e8" kindref="member">EM_dyn</ref>.<ref refid="structsolidcohdyn___e_m__t_1a4c9547f0756d1ef47036d3e7bfee1ddd" kindref="member">ten</ref><sp/>=<sp/>strtod(mat_keyword[i<sp/>+<sp/>1],<sp/>NULL);</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i++;</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strnicmp(mat_keyword[i],<sp/></highlight><highlight class="stringliteral">&quot;cohesion&quot;</highlight><highlight class="normal">,<sp/>3)<sp/>==<sp/>0)<sp/></highlight><highlight class="comment">/*<sp/>cohesion<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cohele_mat[nmat].<ref refid="structmat__cohelement__t_1aadcf8147cd78389b6a462bde83e7bec9" kindref="member">mat</ref>-&gt;<ref refid="unionany__cohmat__type_1a6580630e08ffd95dce1987938f1f03e8" kindref="member">EM_dyn</ref>.<ref refid="structsolidcohdyn___e_m__t_1a792ea6e0cbf026edd6f77835f0fb7c8d" kindref="member">coh</ref><sp/>=<sp/>strtod(mat_keyword[i<sp/>+<sp/>1],<sp/>NULL);</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i++;</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strnicmp(mat_keyword[i],<sp/></highlight><highlight class="stringliteral">&quot;pn&quot;</highlight><highlight class="normal">,<sp/>2)<sp/>==<sp/>0)<sp/></highlight><highlight class="comment">/*<sp/>pn<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cohele_mat[nmat].<ref refid="structmat__cohelement__t_1aadcf8147cd78389b6a462bde83e7bec9" kindref="member">mat</ref>-&gt;<ref refid="unionany__cohmat__type_1a6580630e08ffd95dce1987938f1f03e8" kindref="member">EM_dyn</ref>.<ref refid="structsolidcohdyn___e_m__t_1a2012363918f3e6b9833567dfef6c22f1" kindref="member">pn</ref><sp/>=<sp/>strtod(mat_keyword[i<sp/>+<sp/>1],<sp/>NULL);</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i++;</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strnicmp(mat_keyword[i],<sp/></highlight><highlight class="stringliteral">&quot;pt&quot;</highlight><highlight class="normal">,<sp/>2)<sp/>==<sp/>0)<sp/></highlight><highlight class="comment">/*<sp/>pt<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cohele_mat[nmat].<ref refid="structmat__cohelement__t_1aadcf8147cd78389b6a462bde83e7bec9" kindref="member">mat</ref>-&gt;<ref refid="unionany__cohmat__type_1a6580630e08ffd95dce1987938f1f03e8" kindref="member">EM_dyn</ref>.<ref refid="structsolidcohdyn___e_m__t_1aa70c5b55bd505e62c2ba18dc264b5259" kindref="member">pt</ref><sp/>=<sp/>strtod(mat_keyword[i<sp/>+<sp/>1],<sp/>NULL);</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i++;</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(stricmp(mat_keyword[i],<sp/></highlight><highlight class="stringliteral">&quot;GI&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)<sp/></highlight><highlight class="comment">/*<sp/>GI<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cohele_mat[nmat].<ref refid="structmat__cohelement__t_1aadcf8147cd78389b6a462bde83e7bec9" kindref="member">mat</ref>-&gt;<ref refid="unionany__cohmat__type_1a6580630e08ffd95dce1987938f1f03e8" kindref="member">EM_dyn</ref>.<ref refid="structsolidcohdyn___e_m__t_1a58eb48dec3e590a5cd1548c0e2369da5" kindref="member">GI</ref><sp/>=<sp/>strtod(mat_keyword[i<sp/>+<sp/>1],<sp/>NULL);</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i++;</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(stricmp(mat_keyword[i],<sp/></highlight><highlight class="stringliteral">&quot;GII&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)<sp/></highlight><highlight class="comment">/*<sp/>GII<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cohele_mat[nmat].<ref refid="structmat__cohelement__t_1aadcf8147cd78389b6a462bde83e7bec9" kindref="member">mat</ref>-&gt;<ref refid="unionany__cohmat__type_1a6580630e08ffd95dce1987938f1f03e8" kindref="member">EM_dyn</ref>.<ref refid="structsolidcohdyn___e_m__t_1ac83bcaf81331cfd59d30ee2648fb7d2f" kindref="member">GII</ref><sp/>=<sp/>strtod(mat_keyword[i<sp/>+<sp/>1],<sp/>NULL);</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i++;</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strnicmp(mat_keyword[i],<sp/></highlight><highlight class="stringliteral">&quot;friction&quot;</highlight><highlight class="normal">,<sp/>3)<sp/>==<sp/>0)<sp/></highlight><highlight class="comment">/*<sp/>friction<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cohele_mat[nmat].<ref refid="structmat__cohelement__t_1aadcf8147cd78389b6a462bde83e7bec9" kindref="member">mat</ref>-&gt;<ref refid="unionany__cohmat__type_1a6580630e08ffd95dce1987938f1f03e8" kindref="member">EM_dyn</ref>.<ref refid="structsolidcohdyn___e_m__t_1a87632afe13128ce6163d016ae441eb29" kindref="member">fri</ref><sp/>=<sp/>strtod(mat_keyword[i<sp/>+<sp/>1],<sp/>NULL);</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i++;</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strnicmp(mat_keyword[i],<sp/></highlight><highlight class="stringliteral">&quot;n_rate&quot;</highlight><highlight class="normal">,<sp/>3)<sp/>==<sp/>0)<sp/></highlight><highlight class="comment">/*<sp/>mode<sp/>I<sp/>critical<sp/>strain<sp/>rate<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cohele_mat[nmat].<ref refid="structmat__cohelement__t_1aadcf8147cd78389b6a462bde83e7bec9" kindref="member">mat</ref>-&gt;<ref refid="unionany__cohmat__type_1a6580630e08ffd95dce1987938f1f03e8" kindref="member">EM_dyn</ref>.<ref refid="structsolidcohdyn___e_m__t_1a51fe15be911e1dfd322b0c922de5dc61" kindref="member">c_rate_n</ref><sp/>=<sp/>strtod(mat_keyword[i<sp/>+<sp/>1],<sp/>NULL);</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i++;</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strnicmp(mat_keyword[i],<sp/></highlight><highlight class="stringliteral">&quot;n_pow&quot;</highlight><highlight class="normal">,<sp/>3)<sp/>==<sp/>0)<sp/></highlight><highlight class="comment">/*<sp/>mode<sp/>I<sp/>power<sp/>factor<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cohele_mat[nmat].<ref refid="structmat__cohelement__t_1aadcf8147cd78389b6a462bde83e7bec9" kindref="member">mat</ref>-&gt;<ref refid="unionany__cohmat__type_1a6580630e08ffd95dce1987938f1f03e8" kindref="member">EM_dyn</ref>.<ref refid="structsolidcohdyn___e_m__t_1a1a7bc85cca133c4cedd3c0116f51bbd5" kindref="member">exp_n</ref><sp/>=<sp/>strtod(mat_keyword[i<sp/>+<sp/>1],<sp/>NULL);</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i++;</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strnicmp(mat_keyword[i],<sp/></highlight><highlight class="stringliteral">&quot;s_rate&quot;</highlight><highlight class="normal">,<sp/>3)<sp/>==<sp/>0)<sp/></highlight><highlight class="comment">/*<sp/>mode<sp/>II<sp/>critical<sp/>strain<sp/>rate<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cohele_mat[nmat].<ref refid="structmat__cohelement__t_1aadcf8147cd78389b6a462bde83e7bec9" kindref="member">mat</ref>-&gt;<ref refid="unionany__cohmat__type_1a6580630e08ffd95dce1987938f1f03e8" kindref="member">EM_dyn</ref>.<ref refid="structsolidcohdyn___e_m__t_1abcfa2747ea15146f89cad8f47450e2c1" kindref="member">c_rate_s</ref><sp/>=<sp/>strtod(mat_keyword[i<sp/>+<sp/>1],<sp/>NULL);</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i++;</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strnicmp(mat_keyword[i],<sp/></highlight><highlight class="stringliteral">&quot;s_pow&quot;</highlight><highlight class="normal">,<sp/>3)<sp/>==<sp/>0)<sp/></highlight><highlight class="comment">/*<sp/>mode<sp/>II<sp/>power<sp/>factor<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cohele_mat[nmat].<ref refid="structmat__cohelement__t_1aadcf8147cd78389b6a462bde83e7bec9" kindref="member">mat</ref>-&gt;<ref refid="unionany__cohmat__type_1a6580630e08ffd95dce1987938f1f03e8" kindref="member">EM_dyn</ref>.<ref refid="structsolidcohdyn___e_m__t_1a4ae914e031424ee174f7e0677f63cb55" kindref="member">exp_s</ref><sp/>=<sp/>strtod(mat_keyword[i<sp/>+<sp/>1],<sp/>NULL);</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i++;</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strnicmp(mat_keyword[i],<sp/></highlight><highlight class="stringliteral">&quot;#&quot;</highlight><highlight class="normal">,<sp/>1)<sp/>==<sp/>0)<sp/></highlight><highlight class="comment">/*<sp/>comments<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dump_message_keyword(</highlight><highlight class="stringliteral">&quot;Error:<sp/>no<sp/>found<sp/>keyword:<sp/>&quot;</highlight><highlight class="normal">,<sp/>mat_keyword[i]);</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exit(-1);</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nmat++;</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!stricmp(cons,<sp/></highlight><highlight class="stringliteral">&quot;LINEAR&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>read<sp/>a<sp/>line<sp/>to<sp/>avoid<sp/>\n<sp/>at<sp/>the<sp/>end<sp/>of<sp/>the<sp/>line<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ret<sp/>=<sp/>fscanf(general-&gt;InputFile,<sp/></highlight><highlight class="stringliteral">&quot;%[^\n]%*c&quot;</highlight><highlight class="normal">,<sp/>sn);</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>split<sp/>the<sp/>string<sp/>into<sp/>strings<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>ptr<sp/>=<sp/>strtok(sn,<sp/>delim);</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(ptr<sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mat_keyword[keyword_count]<sp/>=<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)malloc(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">)<sp/>*<sp/>20);</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strcpy(mat_keyword[keyword_count],<sp/>ptr);</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptr<sp/>=<sp/>strtok(NULL,<sp/>delim);</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>keyword_count++;</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cohele_mat[nmat].<ref refid="structmat__cohelement__t_1af10a9fa01cb90333299f9aedd0e4a181" kindref="member">cons</ref><sp/>=<sp/>COH_LINEAR;</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cohele_mat[nmat].<ref refid="structmat__cohelement__t_1aadcf8147cd78389b6a462bde83e7bec9" kindref="member">mat</ref><sp/><sp/>=<sp/>(<ref refid="unionany__cohmat__type" kindref="compound">any_cohmat_type</ref>*)malloc(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="unionany__cohmat__type" kindref="compound">any_cohmat_type</ref>));</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*initialize<sp/>the<sp/>parameters<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cohele_mat[nmat].<ref refid="structmat__cohelement__t_1aadcf8147cd78389b6a462bde83e7bec9" kindref="member">mat</ref>-&gt;<ref refid="unionany__cohmat__type_1a910be8599b07c107675de67535cf1b60" kindref="member">linear</ref>.<ref refid="structsolidcoh__linear__t_1a4c9547f0756d1ef47036d3e7bfee1ddd" kindref="member">ten</ref><sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cohele_mat[nmat].<ref refid="structmat__cohelement__t_1aadcf8147cd78389b6a462bde83e7bec9" kindref="member">mat</ref>-&gt;<ref refid="unionany__cohmat__type_1a910be8599b07c107675de67535cf1b60" kindref="member">linear</ref>.<ref refid="structsolidcoh__linear__t_1a792ea6e0cbf026edd6f77835f0fb7c8d" kindref="member">coh</ref><sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cohele_mat[nmat].<ref refid="structmat__cohelement__t_1aadcf8147cd78389b6a462bde83e7bec9" kindref="member">mat</ref>-&gt;<ref refid="unionany__cohmat__type_1a910be8599b07c107675de67535cf1b60" kindref="member">linear</ref>.<ref refid="structsolidcoh__linear__t_1a87632afe13128ce6163d016ae441eb29" kindref="member">fri</ref><sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cohele_mat[nmat].<ref refid="structmat__cohelement__t_1aadcf8147cd78389b6a462bde83e7bec9" kindref="member">mat</ref>-&gt;<ref refid="unionany__cohmat__type_1a910be8599b07c107675de67535cf1b60" kindref="member">linear</ref>.<ref refid="structsolidcoh__linear__t_1a58eb48dec3e590a5cd1548c0e2369da5" kindref="member">GI</ref><sp/><sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cohele_mat[nmat].<ref refid="structmat__cohelement__t_1aadcf8147cd78389b6a462bde83e7bec9" kindref="member">mat</ref>-&gt;<ref refid="unionany__cohmat__type_1a910be8599b07c107675de67535cf1b60" kindref="member">linear</ref>.<ref refid="structsolidcoh__linear__t_1ac83bcaf81331cfd59d30ee2648fb7d2f" kindref="member">GII</ref><sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cohele_mat[nmat].<ref refid="structmat__cohelement__t_1aadcf8147cd78389b6a462bde83e7bec9" kindref="member">mat</ref>-&gt;<ref refid="unionany__cohmat__type_1a910be8599b07c107675de67535cf1b60" kindref="member">linear</ref>.<ref refid="structsolidcoh__linear__t_1a2012363918f3e6b9833567dfef6c22f1" kindref="member">pn</ref><sp/><sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cohele_mat[nmat].<ref refid="structmat__cohelement__t_1aadcf8147cd78389b6a462bde83e7bec9" kindref="member">mat</ref>-&gt;<ref refid="unionany__cohmat__type_1a910be8599b07c107675de67535cf1b60" kindref="member">linear</ref>.<ref refid="structsolidcoh__linear__t_1aa70c5b55bd505e62c2ba18dc264b5259" kindref="member">pt</ref><sp/><sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>keyword_count;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strnicmp(mat_keyword[i],<sp/></highlight><highlight class="stringliteral">&quot;tension&quot;</highlight><highlight class="normal">,<sp/>3)<sp/>==<sp/>0)<sp/></highlight><highlight class="comment">/*<sp/>tension<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cohele_mat[nmat].<ref refid="structmat__cohelement__t_1aadcf8147cd78389b6a462bde83e7bec9" kindref="member">mat</ref>-&gt;<ref refid="unionany__cohmat__type_1a910be8599b07c107675de67535cf1b60" kindref="member">linear</ref>.<ref refid="structsolidcoh__linear__t_1a4c9547f0756d1ef47036d3e7bfee1ddd" kindref="member">ten</ref><sp/>=<sp/>strtod(mat_keyword[i<sp/>+<sp/>1],<sp/>NULL);</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i++;</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strnicmp(mat_keyword[i],<sp/></highlight><highlight class="stringliteral">&quot;cohesion&quot;</highlight><highlight class="normal">,<sp/>3)<sp/>==<sp/>0)<sp/></highlight><highlight class="comment">/*<sp/>cohesion<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cohele_mat[nmat].<ref refid="structmat__cohelement__t_1aadcf8147cd78389b6a462bde83e7bec9" kindref="member">mat</ref>-&gt;<ref refid="unionany__cohmat__type_1a910be8599b07c107675de67535cf1b60" kindref="member">linear</ref>.<ref refid="structsolidcoh__linear__t_1a792ea6e0cbf026edd6f77835f0fb7c8d" kindref="member">coh</ref><sp/>=<sp/>strtod(mat_keyword[i<sp/>+<sp/>1],<sp/>NULL);</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i++;</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strnicmp(mat_keyword[i],<sp/></highlight><highlight class="stringliteral">&quot;pn&quot;</highlight><highlight class="normal">,<sp/>2)<sp/>==<sp/>0)<sp/></highlight><highlight class="comment">/*<sp/>pn<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cohele_mat[nmat].<ref refid="structmat__cohelement__t_1aadcf8147cd78389b6a462bde83e7bec9" kindref="member">mat</ref>-&gt;<ref refid="unionany__cohmat__type_1a910be8599b07c107675de67535cf1b60" kindref="member">linear</ref>.<ref refid="structsolidcoh__linear__t_1a2012363918f3e6b9833567dfef6c22f1" kindref="member">pn</ref><sp/>=<sp/>strtod(mat_keyword[i<sp/>+<sp/>1],<sp/>NULL);</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i++;</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strnicmp(mat_keyword[i],<sp/></highlight><highlight class="stringliteral">&quot;pt&quot;</highlight><highlight class="normal">,<sp/>2)<sp/>==<sp/>0)<sp/></highlight><highlight class="comment">/*<sp/>pt<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cohele_mat[nmat].<ref refid="structmat__cohelement__t_1aadcf8147cd78389b6a462bde83e7bec9" kindref="member">mat</ref>-&gt;<ref refid="unionany__cohmat__type_1a910be8599b07c107675de67535cf1b60" kindref="member">linear</ref>.<ref refid="structsolidcoh__linear__t_1aa70c5b55bd505e62c2ba18dc264b5259" kindref="member">pt</ref><sp/>=<sp/>strtod(mat_keyword[i<sp/>+<sp/>1],<sp/>NULL);</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i++;</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(stricmp(mat_keyword[i],<sp/></highlight><highlight class="stringliteral">&quot;GI&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)<sp/></highlight><highlight class="comment">/*<sp/>GI<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cohele_mat[nmat].<ref refid="structmat__cohelement__t_1aadcf8147cd78389b6a462bde83e7bec9" kindref="member">mat</ref>-&gt;<ref refid="unionany__cohmat__type_1a910be8599b07c107675de67535cf1b60" kindref="member">linear</ref>.<ref refid="structsolidcoh__linear__t_1a58eb48dec3e590a5cd1548c0e2369da5" kindref="member">GI</ref><sp/>=<sp/>strtod(mat_keyword[i<sp/>+<sp/>1],<sp/>NULL);</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i++;</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(stricmp(mat_keyword[i],<sp/></highlight><highlight class="stringliteral">&quot;GII&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)<sp/></highlight><highlight class="comment">/*<sp/>GII<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cohele_mat[nmat].<ref refid="structmat__cohelement__t_1aadcf8147cd78389b6a462bde83e7bec9" kindref="member">mat</ref>-&gt;<ref refid="unionany__cohmat__type_1a910be8599b07c107675de67535cf1b60" kindref="member">linear</ref>.<ref refid="structsolidcoh__linear__t_1ac83bcaf81331cfd59d30ee2648fb7d2f" kindref="member">GII</ref><sp/>=<sp/>strtod(mat_keyword[i<sp/>+<sp/>1],<sp/>NULL);</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i++;</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strnicmp(mat_keyword[i],<sp/></highlight><highlight class="stringliteral">&quot;friction&quot;</highlight><highlight class="normal">,<sp/>3)<sp/>==<sp/>0)<sp/></highlight><highlight class="comment">/*<sp/>friction<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cohele_mat[nmat].<ref refid="structmat__cohelement__t_1aadcf8147cd78389b6a462bde83e7bec9" kindref="member">mat</ref>-&gt;<ref refid="unionany__cohmat__type_1a910be8599b07c107675de67535cf1b60" kindref="member">linear</ref>.<ref refid="structsolidcoh__linear__t_1a87632afe13128ce6163d016ae441eb29" kindref="member">fri</ref><sp/>=<sp/>strtod(mat_keyword[i<sp/>+<sp/>1],<sp/>NULL);</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i++;</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strnicmp(mat_keyword[i],<sp/></highlight><highlight class="stringliteral">&quot;#&quot;</highlight><highlight class="normal">,<sp/>1)<sp/>==<sp/>0)<sp/></highlight><highlight class="comment">/*<sp/>comments<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dump_message_keyword(</highlight><highlight class="stringliteral">&quot;Error:<sp/>no<sp/>found<sp/>keyword:<sp/>&quot;</highlight><highlight class="normal">,<sp/>mat_keyword[i]);</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exit(-1);</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nmat++;</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!stricmp(cons,<sp/></highlight><highlight class="stringliteral">&quot;OP&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>read<sp/>a<sp/>line<sp/>to<sp/>avoid<sp/>\n<sp/>at<sp/>the<sp/>end<sp/>of<sp/>the<sp/>line<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ret<sp/>=<sp/>fscanf(general-&gt;InputFile,<sp/></highlight><highlight class="stringliteral">&quot;%[^\n]%*c&quot;</highlight><highlight class="normal">,<sp/>sn);</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>split<sp/>the<sp/>string<sp/>into<sp/>strings<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>ptr<sp/>=<sp/>strtok(sn,<sp/>delim);</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(ptr<sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mat_keyword[keyword_count]<sp/>=<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)malloc(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">)<sp/>*<sp/>20);</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strcpy(mat_keyword[keyword_count],<sp/>ptr);</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptr<sp/>=<sp/>strtok(NULL,<sp/>delim);</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>keyword_count++;</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cohele_mat[nmat].<ref refid="structmat__cohelement__t_1af10a9fa01cb90333299f9aedd0e4a181" kindref="member">cons</ref><sp/>=<sp/>COH_OP;</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cohele_mat[nmat].<ref refid="structmat__cohelement__t_1aadcf8147cd78389b6a462bde83e7bec9" kindref="member">mat</ref><sp/><sp/>=<sp/>(<ref refid="unionany__cohmat__type" kindref="compound">any_cohmat_type</ref>*)malloc(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="unionany__cohmat__type" kindref="compound">any_cohmat_type</ref>));</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*initialize<sp/>the<sp/>parameters<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cohele_mat[nmat].<ref refid="structmat__cohelement__t_1aadcf8147cd78389b6a462bde83e7bec9" kindref="member">mat</ref>-&gt;<ref refid="unionany__cohmat__type_1a4372c329a3699541885e361afdd0523a" kindref="member">OP</ref>.<ref refid="structsolidcoh___o_p__t_1a4c9547f0756d1ef47036d3e7bfee1ddd" kindref="member">ten</ref><sp/><sp/><sp/><sp/><sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cohele_mat[nmat].<ref refid="structmat__cohelement__t_1aadcf8147cd78389b6a462bde83e7bec9" kindref="member">mat</ref>-&gt;<ref refid="unionany__cohmat__type_1a4372c329a3699541885e361afdd0523a" kindref="member">OP</ref>.<ref refid="structsolidcoh___o_p__t_1a792ea6e0cbf026edd6f77835f0fb7c8d" kindref="member">coh</ref><sp/><sp/><sp/><sp/><sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cohele_mat[nmat].<ref refid="structmat__cohelement__t_1aadcf8147cd78389b6a462bde83e7bec9" kindref="member">mat</ref>-&gt;<ref refid="unionany__cohmat__type_1a4372c329a3699541885e361afdd0523a" kindref="member">OP</ref>.<ref refid="structsolidcoh___o_p__t_1a0458329966afb9c25d1884eae2f05ccc" kindref="member">delta_n</ref><sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cohele_mat[nmat].<ref refid="structmat__cohelement__t_1aadcf8147cd78389b6a462bde83e7bec9" kindref="member">mat</ref>-&gt;<ref refid="unionany__cohmat__type_1a4372c329a3699541885e361afdd0523a" kindref="member">OP</ref>.<ref refid="structsolidcoh___o_p__t_1af7d01a30c5b5da658ab0e2f002205146" kindref="member">delta_s</ref><sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cohele_mat[nmat].<ref refid="structmat__cohelement__t_1aadcf8147cd78389b6a462bde83e7bec9" kindref="member">mat</ref>-&gt;<ref refid="unionany__cohmat__type_1a4372c329a3699541885e361afdd0523a" kindref="member">OP</ref>.<ref refid="structsolidcoh___o_p__t_1a2012363918f3e6b9833567dfef6c22f1" kindref="member">pn</ref><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cohele_mat[nmat].<ref refid="structmat__cohelement__t_1aadcf8147cd78389b6a462bde83e7bec9" kindref="member">mat</ref>-&gt;<ref refid="unionany__cohmat__type_1a4372c329a3699541885e361afdd0523a" kindref="member">OP</ref>.<ref refid="structsolidcoh___o_p__t_1aa70c5b55bd505e62c2ba18dc264b5259" kindref="member">pt</ref><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="270"><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>keyword_count;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strnicmp(mat_keyword[i],<sp/></highlight><highlight class="stringliteral">&quot;tension&quot;</highlight><highlight class="normal">,<sp/>3)<sp/>==<sp/>0)<sp/></highlight><highlight class="comment">/*<sp/>tension<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cohele_mat[nmat].<ref refid="structmat__cohelement__t_1aadcf8147cd78389b6a462bde83e7bec9" kindref="member">mat</ref>-&gt;<ref refid="unionany__cohmat__type_1a4372c329a3699541885e361afdd0523a" kindref="member">OP</ref>.<ref refid="structsolidcoh___o_p__t_1a4c9547f0756d1ef47036d3e7bfee1ddd" kindref="member">ten</ref><sp/>=<sp/>strtod(mat_keyword[i<sp/>+<sp/>1],<sp/>NULL);</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i++;</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strnicmp(mat_keyword[i],<sp/></highlight><highlight class="stringliteral">&quot;cohesion&quot;</highlight><highlight class="normal">,<sp/>3)<sp/>==<sp/>0)<sp/></highlight><highlight class="comment">/*<sp/>cohesion<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cohele_mat[nmat].<ref refid="structmat__cohelement__t_1aadcf8147cd78389b6a462bde83e7bec9" kindref="member">mat</ref>-&gt;<ref refid="unionany__cohmat__type_1a4372c329a3699541885e361afdd0523a" kindref="member">OP</ref>.<ref refid="structsolidcoh___o_p__t_1a792ea6e0cbf026edd6f77835f0fb7c8d" kindref="member">coh</ref><sp/>=<sp/>strtod(mat_keyword[i<sp/>+<sp/>1],<sp/>NULL);</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i++;</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(stricmp(mat_keyword[i],<sp/></highlight><highlight class="stringliteral">&quot;op&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)<sp/></highlight><highlight class="comment">/*<sp/>GI<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cohele_mat[nmat].<ref refid="structmat__cohelement__t_1aadcf8147cd78389b6a462bde83e7bec9" kindref="member">mat</ref>-&gt;<ref refid="unionany__cohmat__type_1a4372c329a3699541885e361afdd0523a" kindref="member">OP</ref>.<ref refid="structsolidcoh___o_p__t_1a0458329966afb9c25d1884eae2f05ccc" kindref="member">delta_n</ref><sp/>=<sp/>strtod(mat_keyword[i<sp/>+<sp/>1],<sp/>NULL);</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i++;</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(stricmp(mat_keyword[i],<sp/></highlight><highlight class="stringliteral">&quot;sp&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)<sp/></highlight><highlight class="comment">/*<sp/>GII<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cohele_mat[nmat].<ref refid="structmat__cohelement__t_1aadcf8147cd78389b6a462bde83e7bec9" kindref="member">mat</ref>-&gt;<ref refid="unionany__cohmat__type_1a4372c329a3699541885e361afdd0523a" kindref="member">OP</ref>.<ref refid="structsolidcoh___o_p__t_1af7d01a30c5b5da658ab0e2f002205146" kindref="member">delta_s</ref><sp/>=<sp/>strtod(mat_keyword[i<sp/>+<sp/>1],<sp/>NULL);</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i++;</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strnicmp(mat_keyword[i],<sp/></highlight><highlight class="stringliteral">&quot;#&quot;</highlight><highlight class="normal">,<sp/>1)<sp/>==<sp/>0)<sp/></highlight><highlight class="comment">/*<sp/>comments<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dump_message_keyword(</highlight><highlight class="stringliteral">&quot;Error:<sp/>no<sp/>found<sp/>keyword:<sp/>&quot;</highlight><highlight class="normal">,<sp/>mat_keyword[i]);</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exit(-1);</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nmat++;</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!stricmp(cons,<sp/></highlight><highlight class="stringliteral">&quot;BB&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cohele_mat[nmat].<ref refid="structmat__cohelement__t_1af10a9fa01cb90333299f9aedd0e4a181" kindref="member">cons</ref><sp/>=<sp/>COH_BB;</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cohele_mat[nmat].<ref refid="structmat__cohelement__t_1aadcf8147cd78389b6a462bde83e7bec9" kindref="member">mat</ref><sp/><sp/>=<sp/>(<ref refid="unionany__cohmat__type" kindref="compound">any_cohmat_type</ref>*)malloc(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="unionany__cohmat__type" kindref="compound">any_cohmat_type</ref>));</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nmat++;</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!stricmp(cons,<sp/></highlight><highlight class="stringliteral">&quot;EM_het&quot;</highlight><highlight class="normal">))<sp/>{<sp/></highlight><highlight class="comment">/*<sp/>generate<sp/>random<sp/>seeds<sp/>for<sp/>the<sp/>hetergenous<sp/>materials<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cohelement-&gt;<ref refid="struct_coh__element__structure_1a18fcef7a83145e7064d42153c7d759a2" kindref="member">het_value</ref><sp/>=<sp/>initialize_1D_double_array(cohelement-&gt;<ref refid="struct_coh__element__structure_1af9606282b3f52144a66174c964f90276" kindref="member">cohe_num</ref>,<sp/>0.0);</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(UInt<sp/>elementid<sp/>=<sp/>0;<sp/>elementid<sp/>&lt;<sp/>cohelement-&gt;<ref refid="struct_coh__element__structure_1af9606282b3f52144a66174c964f90276" kindref="member">cohe_num</ref>;<sp/>elementid++)<sp/>{</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cohelement-&gt;<ref refid="struct_coh__element__structure_1a18fcef7a83145e7064d42153c7d759a2" kindref="member">het_value</ref>[elementid]<sp/>=<sp/>random_normal(0.0,<sp/>1.0);</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>read<sp/>a<sp/>line<sp/>to<sp/>avoid<sp/>\n<sp/>at<sp/>the<sp/>end<sp/>of<sp/>the<sp/>line<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ret<sp/>=<sp/>fscanf(general-&gt;InputFile,<sp/></highlight><highlight class="stringliteral">&quot;%[^\n]%*c&quot;</highlight><highlight class="normal">,<sp/>sn);</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>split<sp/>the<sp/>string<sp/>into<sp/>strings<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>ptr<sp/>=<sp/>strtok(sn,<sp/>delim);</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(ptr<sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mat_keyword[keyword_count]<sp/>=<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)malloc(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">)<sp/>*<sp/>20);</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strcpy(mat_keyword[keyword_count],<sp/>ptr);</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptr<sp/>=<sp/>strtok(NULL,<sp/>delim);</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>keyword_count++;</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cohele_mat[nmat].<ref refid="structmat__cohelement__t_1af10a9fa01cb90333299f9aedd0e4a181" kindref="member">cons</ref><sp/>=<sp/>COH_EM_HET;</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cohele_mat[nmat].<ref refid="structmat__cohelement__t_1aadcf8147cd78389b6a462bde83e7bec9" kindref="member">mat</ref><sp/><sp/>=<sp/>(<ref refid="unionany__cohmat__type" kindref="compound">any_cohmat_type</ref>*)malloc(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="unionany__cohmat__type" kindref="compound">any_cohmat_type</ref>));</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*initialize<sp/>the<sp/>parameters<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cohele_mat[nmat].<ref refid="structmat__cohelement__t_1aadcf8147cd78389b6a462bde83e7bec9" kindref="member">mat</ref>-&gt;<ref refid="unionany__cohmat__type_1add3298c89ae5060a0ba05405ef0b5e50" kindref="member">EM_het</ref>.<ref refid="structsolidcohhet___e_m__t_1a2012363918f3e6b9833567dfef6c22f1" kindref="member">pn</ref><sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cohele_mat[nmat].<ref refid="structmat__cohelement__t_1aadcf8147cd78389b6a462bde83e7bec9" kindref="member">mat</ref>-&gt;<ref refid="unionany__cohmat__type_1add3298c89ae5060a0ba05405ef0b5e50" kindref="member">EM_het</ref>.<ref refid="structsolidcohhet___e_m__t_1aa70c5b55bd505e62c2ba18dc264b5259" kindref="member">pt</ref><sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>ten</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cohele_mat[nmat].<ref refid="structmat__cohelement__t_1aadcf8147cd78389b6a462bde83e7bec9" kindref="member">mat</ref>-&gt;<ref refid="unionany__cohmat__type_1add3298c89ae5060a0ba05405ef0b5e50" kindref="member">EM_het</ref>.<ref refid="structsolidcohhet___e_m__t_1a500d85dc4ceda517431b5cb4236fece9" kindref="member">ten</ref><sp/><sp/><sp/><sp/>=<sp/>(Real*)malloc(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(Real)<sp/>*<sp/>2);</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cohele_mat[nmat].<ref refid="structmat__cohelement__t_1aadcf8147cd78389b6a462bde83e7bec9" kindref="member">mat</ref>-&gt;<ref refid="unionany__cohmat__type_1add3298c89ae5060a0ba05405ef0b5e50" kindref="member">EM_het</ref>.<ref refid="structsolidcohhet___e_m__t_1a500d85dc4ceda517431b5cb4236fece9" kindref="member">ten</ref>[0]<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cohele_mat[nmat].<ref refid="structmat__cohelement__t_1aadcf8147cd78389b6a462bde83e7bec9" kindref="member">mat</ref>-&gt;<ref refid="unionany__cohmat__type_1add3298c89ae5060a0ba05405ef0b5e50" kindref="member">EM_het</ref>.<ref refid="structsolidcohhet___e_m__t_1a500d85dc4ceda517431b5cb4236fece9" kindref="member">ten</ref>[1]<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>coh</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cohele_mat[nmat].<ref refid="structmat__cohelement__t_1aadcf8147cd78389b6a462bde83e7bec9" kindref="member">mat</ref>-&gt;<ref refid="unionany__cohmat__type_1add3298c89ae5060a0ba05405ef0b5e50" kindref="member">EM_het</ref>.<ref refid="structsolidcohhet___e_m__t_1a5d587cda6734f31d2dd5d6176a8c6f91" kindref="member">coh</ref><sp/><sp/><sp/><sp/>=<sp/>(Real*)malloc(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(Real)<sp/>*<sp/>2);</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cohele_mat[nmat].<ref refid="structmat__cohelement__t_1aadcf8147cd78389b6a462bde83e7bec9" kindref="member">mat</ref>-&gt;<ref refid="unionany__cohmat__type_1add3298c89ae5060a0ba05405ef0b5e50" kindref="member">EM_het</ref>.<ref refid="structsolidcohhet___e_m__t_1a5d587cda6734f31d2dd5d6176a8c6f91" kindref="member">coh</ref>[0]<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cohele_mat[nmat].<ref refid="structmat__cohelement__t_1aadcf8147cd78389b6a462bde83e7bec9" kindref="member">mat</ref>-&gt;<ref refid="unionany__cohmat__type_1add3298c89ae5060a0ba05405ef0b5e50" kindref="member">EM_het</ref>.<ref refid="structsolidcohhet___e_m__t_1a5d587cda6734f31d2dd5d6176a8c6f91" kindref="member">coh</ref>[1]<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>fri</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cohele_mat[nmat].<ref refid="structmat__cohelement__t_1aadcf8147cd78389b6a462bde83e7bec9" kindref="member">mat</ref>-&gt;<ref refid="unionany__cohmat__type_1add3298c89ae5060a0ba05405ef0b5e50" kindref="member">EM_het</ref>.<ref refid="structsolidcohhet___e_m__t_1a7750b33c9ae1df281c66d12a6b5576da" kindref="member">fri</ref><sp/><sp/><sp/><sp/>=<sp/>(Real*)malloc(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(Real)<sp/>*<sp/>2);</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cohele_mat[nmat].<ref refid="structmat__cohelement__t_1aadcf8147cd78389b6a462bde83e7bec9" kindref="member">mat</ref>-&gt;<ref refid="unionany__cohmat__type_1add3298c89ae5060a0ba05405ef0b5e50" kindref="member">EM_het</ref>.<ref refid="structsolidcohhet___e_m__t_1a7750b33c9ae1df281c66d12a6b5576da" kindref="member">fri</ref>[0]<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cohele_mat[nmat].<ref refid="structmat__cohelement__t_1aadcf8147cd78389b6a462bde83e7bec9" kindref="member">mat</ref>-&gt;<ref refid="unionany__cohmat__type_1add3298c89ae5060a0ba05405ef0b5e50" kindref="member">EM_het</ref>.<ref refid="structsolidcohhet___e_m__t_1a7750b33c9ae1df281c66d12a6b5576da" kindref="member">fri</ref>[1]<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>GI</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cohele_mat[nmat].<ref refid="structmat__cohelement__t_1aadcf8147cd78389b6a462bde83e7bec9" kindref="member">mat</ref>-&gt;<ref refid="unionany__cohmat__type_1add3298c89ae5060a0ba05405ef0b5e50" kindref="member">EM_het</ref>.<ref refid="structsolidcohhet___e_m__t_1a9714ec177ae46f736682f2bcc1bef51e" kindref="member">GI</ref><sp/><sp/><sp/><sp/>=<sp/>(Real*)malloc(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(Real)<sp/>*<sp/>2);</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cohele_mat[nmat].<ref refid="structmat__cohelement__t_1aadcf8147cd78389b6a462bde83e7bec9" kindref="member">mat</ref>-&gt;<ref refid="unionany__cohmat__type_1add3298c89ae5060a0ba05405ef0b5e50" kindref="member">EM_het</ref>.<ref refid="structsolidcohhet___e_m__t_1a9714ec177ae46f736682f2bcc1bef51e" kindref="member">GI</ref>[0]<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cohele_mat[nmat].<ref refid="structmat__cohelement__t_1aadcf8147cd78389b6a462bde83e7bec9" kindref="member">mat</ref>-&gt;<ref refid="unionany__cohmat__type_1add3298c89ae5060a0ba05405ef0b5e50" kindref="member">EM_het</ref>.<ref refid="structsolidcohhet___e_m__t_1a9714ec177ae46f736682f2bcc1bef51e" kindref="member">GI</ref>[1]<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>GII</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cohele_mat[nmat].<ref refid="structmat__cohelement__t_1aadcf8147cd78389b6a462bde83e7bec9" kindref="member">mat</ref>-&gt;<ref refid="unionany__cohmat__type_1add3298c89ae5060a0ba05405ef0b5e50" kindref="member">EM_het</ref>.<ref refid="structsolidcohhet___e_m__t_1ac5f9553eefb1fa03a875cec16fad1ad3" kindref="member">GII</ref><sp/><sp/><sp/><sp/>=<sp/>(Real*)malloc(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(Real)<sp/>*<sp/>2);</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cohele_mat[nmat].<ref refid="structmat__cohelement__t_1aadcf8147cd78389b6a462bde83e7bec9" kindref="member">mat</ref>-&gt;<ref refid="unionany__cohmat__type_1add3298c89ae5060a0ba05405ef0b5e50" kindref="member">EM_het</ref>.<ref refid="structsolidcohhet___e_m__t_1ac5f9553eefb1fa03a875cec16fad1ad3" kindref="member">GII</ref>[0]<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cohele_mat[nmat].<ref refid="structmat__cohelement__t_1aadcf8147cd78389b6a462bde83e7bec9" kindref="member">mat</ref>-&gt;<ref refid="unionany__cohmat__type_1add3298c89ae5060a0ba05405ef0b5e50" kindref="member">EM_het</ref>.<ref refid="structsolidcohhet___e_m__t_1ac5f9553eefb1fa03a875cec16fad1ad3" kindref="member">GII</ref>[1]<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="341"><highlight class="normal"></highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>keyword_count;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strnicmp(mat_keyword[i],<sp/></highlight><highlight class="stringliteral">&quot;tension&quot;</highlight><highlight class="normal">,<sp/>3)<sp/>==<sp/>0)<sp/></highlight><highlight class="comment">/*<sp/>tension<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cohele_mat[nmat].<ref refid="structmat__cohelement__t_1aadcf8147cd78389b6a462bde83e7bec9" kindref="member">mat</ref>-&gt;<ref refid="unionany__cohmat__type_1add3298c89ae5060a0ba05405ef0b5e50" kindref="member">EM_het</ref>.<ref refid="structsolidcohhet___e_m__t_1a500d85dc4ceda517431b5cb4236fece9" kindref="member">ten</ref>[0]<sp/>=<sp/>strtod(mat_keyword[i<sp/>+<sp/>1],<sp/>NULL);</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cohele_mat[nmat].<ref refid="structmat__cohelement__t_1aadcf8147cd78389b6a462bde83e7bec9" kindref="member">mat</ref>-&gt;<ref refid="unionany__cohmat__type_1add3298c89ae5060a0ba05405ef0b5e50" kindref="member">EM_het</ref>.<ref refid="structsolidcohhet___e_m__t_1a500d85dc4ceda517431b5cb4236fece9" kindref="member">ten</ref>[1]<sp/>=<sp/>strtod(mat_keyword[i<sp/>+<sp/>2],<sp/>NULL);</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>i<sp/>+<sp/>2;</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strnicmp(mat_keyword[i],<sp/></highlight><highlight class="stringliteral">&quot;cohesion&quot;</highlight><highlight class="normal">,<sp/>3)<sp/>==<sp/>0)<sp/></highlight><highlight class="comment">/*<sp/>cohesion<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cohele_mat[nmat].<ref refid="structmat__cohelement__t_1aadcf8147cd78389b6a462bde83e7bec9" kindref="member">mat</ref>-&gt;<ref refid="unionany__cohmat__type_1add3298c89ae5060a0ba05405ef0b5e50" kindref="member">EM_het</ref>.<ref refid="structsolidcohhet___e_m__t_1a5d587cda6734f31d2dd5d6176a8c6f91" kindref="member">coh</ref>[0]<sp/>=<sp/>strtod(mat_keyword[i<sp/>+<sp/>1],<sp/>NULL);</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cohele_mat[nmat].<ref refid="structmat__cohelement__t_1aadcf8147cd78389b6a462bde83e7bec9" kindref="member">mat</ref>-&gt;<ref refid="unionany__cohmat__type_1add3298c89ae5060a0ba05405ef0b5e50" kindref="member">EM_het</ref>.<ref refid="structsolidcohhet___e_m__t_1a5d587cda6734f31d2dd5d6176a8c6f91" kindref="member">coh</ref>[1]<sp/>=<sp/>strtod(mat_keyword[i<sp/>+<sp/>2],<sp/>NULL);</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>i<sp/>+<sp/>2;</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(stricmp(mat_keyword[i],<sp/></highlight><highlight class="stringliteral">&quot;GI&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)<sp/></highlight><highlight class="comment">/*<sp/>GI<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cohele_mat[nmat].<ref refid="structmat__cohelement__t_1aadcf8147cd78389b6a462bde83e7bec9" kindref="member">mat</ref>-&gt;<ref refid="unionany__cohmat__type_1add3298c89ae5060a0ba05405ef0b5e50" kindref="member">EM_het</ref>.<ref refid="structsolidcohhet___e_m__t_1a9714ec177ae46f736682f2bcc1bef51e" kindref="member">GI</ref>[0]<sp/>=<sp/>strtod(mat_keyword[i<sp/>+<sp/>1],<sp/>NULL);</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cohele_mat[nmat].<ref refid="structmat__cohelement__t_1aadcf8147cd78389b6a462bde83e7bec9" kindref="member">mat</ref>-&gt;<ref refid="unionany__cohmat__type_1add3298c89ae5060a0ba05405ef0b5e50" kindref="member">EM_het</ref>.<ref refid="structsolidcohhet___e_m__t_1a9714ec177ae46f736682f2bcc1bef51e" kindref="member">GI</ref>[1]<sp/>=<sp/>strtod(mat_keyword[i<sp/>+<sp/>2],<sp/>NULL);</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>i<sp/>+<sp/>2;</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(stricmp(mat_keyword[i],<sp/></highlight><highlight class="stringliteral">&quot;GII&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)<sp/></highlight><highlight class="comment">/*<sp/>GII<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cohele_mat[nmat].<ref refid="structmat__cohelement__t_1aadcf8147cd78389b6a462bde83e7bec9" kindref="member">mat</ref>-&gt;<ref refid="unionany__cohmat__type_1add3298c89ae5060a0ba05405ef0b5e50" kindref="member">EM_het</ref>.<ref refid="structsolidcohhet___e_m__t_1ac5f9553eefb1fa03a875cec16fad1ad3" kindref="member">GII</ref>[0]<sp/>=<sp/>strtod(mat_keyword[i<sp/>+<sp/>1],<sp/>NULL);</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cohele_mat[nmat].<ref refid="structmat__cohelement__t_1aadcf8147cd78389b6a462bde83e7bec9" kindref="member">mat</ref>-&gt;<ref refid="unionany__cohmat__type_1add3298c89ae5060a0ba05405ef0b5e50" kindref="member">EM_het</ref>.<ref refid="structsolidcohhet___e_m__t_1ac5f9553eefb1fa03a875cec16fad1ad3" kindref="member">GII</ref>[1]<sp/>=<sp/>strtod(mat_keyword[i<sp/>+<sp/>2],<sp/>NULL);</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>i<sp/>+<sp/>2;</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strnicmp(mat_keyword[i],<sp/></highlight><highlight class="stringliteral">&quot;friction&quot;</highlight><highlight class="normal">,<sp/>3)<sp/>==<sp/>0)<sp/></highlight><highlight class="comment">/*<sp/>friction<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cohele_mat[nmat].<ref refid="structmat__cohelement__t_1aadcf8147cd78389b6a462bde83e7bec9" kindref="member">mat</ref>-&gt;<ref refid="unionany__cohmat__type_1add3298c89ae5060a0ba05405ef0b5e50" kindref="member">EM_het</ref>.<ref refid="structsolidcohhet___e_m__t_1a7750b33c9ae1df281c66d12a6b5576da" kindref="member">fri</ref>[0]<sp/>=<sp/>strtod(mat_keyword[i<sp/>+<sp/>1],<sp/>NULL);</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cohele_mat[nmat].<ref refid="structmat__cohelement__t_1aadcf8147cd78389b6a462bde83e7bec9" kindref="member">mat</ref>-&gt;<ref refid="unionany__cohmat__type_1add3298c89ae5060a0ba05405ef0b5e50" kindref="member">EM_het</ref>.<ref refid="structsolidcohhet___e_m__t_1a7750b33c9ae1df281c66d12a6b5576da" kindref="member">fri</ref>[1]<sp/>=<sp/>strtod(mat_keyword[i<sp/>+<sp/>2],<sp/>NULL);</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>i<sp/>+<sp/>2;</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strnicmp(mat_keyword[i],<sp/></highlight><highlight class="stringliteral">&quot;#&quot;</highlight><highlight class="normal">,<sp/>1)<sp/>==<sp/>0)<sp/></highlight><highlight class="comment">/*<sp/>comments<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dump_message_keyword(</highlight><highlight class="stringliteral">&quot;Error:<sp/>no<sp/>found<sp/>keyword:<sp/>&quot;</highlight><highlight class="normal">,<sp/>mat_keyword[i]);</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exit(-1);</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nmat++;</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!stricmp(cons,<sp/></highlight><highlight class="stringliteral">&quot;EM_ani&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>read<sp/>a<sp/>line<sp/>to<sp/>avoid<sp/>\n<sp/>at<sp/>the<sp/>end<sp/>of<sp/>the<sp/>line<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ret<sp/>=<sp/>fscanf(general-&gt;InputFile,<sp/></highlight><highlight class="stringliteral">&quot;%[^\n]%*c&quot;</highlight><highlight class="normal">,<sp/>sn);</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>split<sp/>the<sp/>string<sp/>into<sp/>strings<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>ptr<sp/>=<sp/>strtok(sn,<sp/>delim);</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(ptr<sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mat_keyword[keyword_count]<sp/>=<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)malloc(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">)<sp/>*<sp/>20);</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strcpy(mat_keyword[keyword_count],<sp/>ptr);</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptr<sp/>=<sp/>strtok(NULL,<sp/>delim);</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>keyword_count++;</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cohele_mat[nmat].<ref refid="structmat__cohelement__t_1af10a9fa01cb90333299f9aedd0e4a181" kindref="member">cons</ref><sp/>=<sp/>COH_EM_ANI;</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cohele_mat[nmat].<ref refid="structmat__cohelement__t_1aadcf8147cd78389b6a462bde83e7bec9" kindref="member">mat</ref><sp/><sp/>=<sp/>(<ref refid="unionany__cohmat__type" kindref="compound">any_cohmat_type</ref>*)malloc(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="unionany__cohmat__type" kindref="compound">any_cohmat_type</ref>));</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*initialize<sp/>the<sp/>parameters<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cohele_mat[nmat].<ref refid="structmat__cohelement__t_1aadcf8147cd78389b6a462bde83e7bec9" kindref="member">mat</ref>-&gt;<ref refid="unionany__cohmat__type_1a94f67ab5aa017cf697a688870bb0c616" kindref="member">EM_ani</ref>.<ref refid="structsolidcohani___e_m__t_1a2012363918f3e6b9833567dfef6c22f1" kindref="member">pn</ref><sp/><sp/><sp/><sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cohele_mat[nmat].<ref refid="structmat__cohelement__t_1aadcf8147cd78389b6a462bde83e7bec9" kindref="member">mat</ref>-&gt;<ref refid="unionany__cohmat__type_1a94f67ab5aa017cf697a688870bb0c616" kindref="member">EM_ani</ref>.<ref refid="structsolidcohani___e_m__t_1aa70c5b55bd505e62c2ba18dc264b5259" kindref="member">pt</ref><sp/><sp/><sp/><sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cohele_mat[nmat].<ref refid="structmat__cohelement__t_1aadcf8147cd78389b6a462bde83e7bec9" kindref="member">mat</ref>-&gt;<ref refid="unionany__cohmat__type_1a94f67ab5aa017cf697a688870bb0c616" kindref="member">EM_ani</ref>.<ref refid="structsolidcohani___e_m__t_1a52bb4c1c2469def4afdc7c9b879d91b1" kindref="member">power</ref><sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cohele_mat[nmat].<ref refid="structmat__cohelement__t_1aadcf8147cd78389b6a462bde83e7bec9" kindref="member">mat</ref>-&gt;<ref refid="unionany__cohmat__type_1a94f67ab5aa017cf697a688870bb0c616" kindref="member">EM_ani</ref>.<ref refid="structsolidcohani___e_m__t_1a5bfc7d1448bac91d1eec23e44354af76" kindref="member">dip</ref><sp/><sp/><sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>ten</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cohele_mat[nmat].<ref refid="structmat__cohelement__t_1aadcf8147cd78389b6a462bde83e7bec9" kindref="member">mat</ref>-&gt;<ref refid="unionany__cohmat__type_1a94f67ab5aa017cf697a688870bb0c616" kindref="member">EM_ani</ref>.<ref refid="structsolidcohani___e_m__t_1a500d85dc4ceda517431b5cb4236fece9" kindref="member">ten</ref><sp/><sp/><sp/><sp/>=<sp/>(Real*)malloc(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(Real)<sp/>*<sp/>2);</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cohele_mat[nmat].<ref refid="structmat__cohelement__t_1aadcf8147cd78389b6a462bde83e7bec9" kindref="member">mat</ref>-&gt;<ref refid="unionany__cohmat__type_1a94f67ab5aa017cf697a688870bb0c616" kindref="member">EM_ani</ref>.<ref refid="structsolidcohani___e_m__t_1a500d85dc4ceda517431b5cb4236fece9" kindref="member">ten</ref>[0]<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cohele_mat[nmat].<ref refid="structmat__cohelement__t_1aadcf8147cd78389b6a462bde83e7bec9" kindref="member">mat</ref>-&gt;<ref refid="unionany__cohmat__type_1a94f67ab5aa017cf697a688870bb0c616" kindref="member">EM_ani</ref>.<ref refid="structsolidcohani___e_m__t_1a500d85dc4ceda517431b5cb4236fece9" kindref="member">ten</ref>[1]<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>coh</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cohele_mat[nmat].<ref refid="structmat__cohelement__t_1aadcf8147cd78389b6a462bde83e7bec9" kindref="member">mat</ref>-&gt;<ref refid="unionany__cohmat__type_1a94f67ab5aa017cf697a688870bb0c616" kindref="member">EM_ani</ref>.<ref refid="structsolidcohani___e_m__t_1a5d587cda6734f31d2dd5d6176a8c6f91" kindref="member">coh</ref><sp/><sp/><sp/><sp/>=<sp/>(Real*)malloc(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(Real)<sp/>*<sp/>2);</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cohele_mat[nmat].<ref refid="structmat__cohelement__t_1aadcf8147cd78389b6a462bde83e7bec9" kindref="member">mat</ref>-&gt;<ref refid="unionany__cohmat__type_1a94f67ab5aa017cf697a688870bb0c616" kindref="member">EM_ani</ref>.<ref refid="structsolidcohani___e_m__t_1a5d587cda6734f31d2dd5d6176a8c6f91" kindref="member">coh</ref>[0]<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cohele_mat[nmat].<ref refid="structmat__cohelement__t_1aadcf8147cd78389b6a462bde83e7bec9" kindref="member">mat</ref>-&gt;<ref refid="unionany__cohmat__type_1a94f67ab5aa017cf697a688870bb0c616" kindref="member">EM_ani</ref>.<ref refid="structsolidcohani___e_m__t_1a5d587cda6734f31d2dd5d6176a8c6f91" kindref="member">coh</ref>[1]<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>fri</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cohele_mat[nmat].<ref refid="structmat__cohelement__t_1aadcf8147cd78389b6a462bde83e7bec9" kindref="member">mat</ref>-&gt;<ref refid="unionany__cohmat__type_1a94f67ab5aa017cf697a688870bb0c616" kindref="member">EM_ani</ref>.<ref refid="structsolidcohani___e_m__t_1a7750b33c9ae1df281c66d12a6b5576da" kindref="member">fri</ref><sp/><sp/><sp/><sp/>=<sp/>(Real*)malloc(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(Real)<sp/>*<sp/>2);</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cohele_mat[nmat].<ref refid="structmat__cohelement__t_1aadcf8147cd78389b6a462bde83e7bec9" kindref="member">mat</ref>-&gt;<ref refid="unionany__cohmat__type_1a94f67ab5aa017cf697a688870bb0c616" kindref="member">EM_ani</ref>.<ref refid="structsolidcohani___e_m__t_1a7750b33c9ae1df281c66d12a6b5576da" kindref="member">fri</ref>[0]<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cohele_mat[nmat].<ref refid="structmat__cohelement__t_1aadcf8147cd78389b6a462bde83e7bec9" kindref="member">mat</ref>-&gt;<ref refid="unionany__cohmat__type_1a94f67ab5aa017cf697a688870bb0c616" kindref="member">EM_ani</ref>.<ref refid="structsolidcohani___e_m__t_1a7750b33c9ae1df281c66d12a6b5576da" kindref="member">fri</ref>[1]<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>GI</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cohele_mat[nmat].<ref refid="structmat__cohelement__t_1aadcf8147cd78389b6a462bde83e7bec9" kindref="member">mat</ref>-&gt;<ref refid="unionany__cohmat__type_1a94f67ab5aa017cf697a688870bb0c616" kindref="member">EM_ani</ref>.<ref refid="structsolidcohani___e_m__t_1a9714ec177ae46f736682f2bcc1bef51e" kindref="member">GI</ref><sp/><sp/><sp/><sp/>=<sp/>(Real*)malloc(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(Real)<sp/>*<sp/>2);</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cohele_mat[nmat].<ref refid="structmat__cohelement__t_1aadcf8147cd78389b6a462bde83e7bec9" kindref="member">mat</ref>-&gt;<ref refid="unionany__cohmat__type_1a94f67ab5aa017cf697a688870bb0c616" kindref="member">EM_ani</ref>.<ref refid="structsolidcohani___e_m__t_1a9714ec177ae46f736682f2bcc1bef51e" kindref="member">GI</ref>[0]<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cohele_mat[nmat].<ref refid="structmat__cohelement__t_1aadcf8147cd78389b6a462bde83e7bec9" kindref="member">mat</ref>-&gt;<ref refid="unionany__cohmat__type_1a94f67ab5aa017cf697a688870bb0c616" kindref="member">EM_ani</ref>.<ref refid="structsolidcohani___e_m__t_1a9714ec177ae46f736682f2bcc1bef51e" kindref="member">GI</ref>[1]<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>GII</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cohele_mat[nmat].<ref refid="structmat__cohelement__t_1aadcf8147cd78389b6a462bde83e7bec9" kindref="member">mat</ref>-&gt;<ref refid="unionany__cohmat__type_1a94f67ab5aa017cf697a688870bb0c616" kindref="member">EM_ani</ref>.<ref refid="structsolidcohani___e_m__t_1ac5f9553eefb1fa03a875cec16fad1ad3" kindref="member">GII</ref><sp/><sp/><sp/><sp/>=<sp/>(Real*)malloc(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(Real)<sp/>*<sp/>2);</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cohele_mat[nmat].<ref refid="structmat__cohelement__t_1aadcf8147cd78389b6a462bde83e7bec9" kindref="member">mat</ref>-&gt;<ref refid="unionany__cohmat__type_1a94f67ab5aa017cf697a688870bb0c616" kindref="member">EM_ani</ref>.<ref refid="structsolidcohani___e_m__t_1ac5f9553eefb1fa03a875cec16fad1ad3" kindref="member">GII</ref>[0]<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cohele_mat[nmat].<ref refid="structmat__cohelement__t_1aadcf8147cd78389b6a462bde83e7bec9" kindref="member">mat</ref>-&gt;<ref refid="unionany__cohmat__type_1a94f67ab5aa017cf697a688870bb0c616" kindref="member">EM_ani</ref>.<ref refid="structsolidcohani___e_m__t_1ac5f9553eefb1fa03a875cec16fad1ad3" kindref="member">GII</ref>[1]<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="415"><highlight class="normal"></highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>keyword_count;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strnicmp(mat_keyword[i],<sp/></highlight><highlight class="stringliteral">&quot;tension&quot;</highlight><highlight class="normal">,<sp/>3)<sp/>==<sp/>0)<sp/></highlight><highlight class="comment">/*<sp/>tension<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cohele_mat[nmat].<ref refid="structmat__cohelement__t_1aadcf8147cd78389b6a462bde83e7bec9" kindref="member">mat</ref>-&gt;<ref refid="unionany__cohmat__type_1a94f67ab5aa017cf697a688870bb0c616" kindref="member">EM_ani</ref>.<ref refid="structsolidcohani___e_m__t_1a500d85dc4ceda517431b5cb4236fece9" kindref="member">ten</ref>[0]<sp/>=<sp/>strtod(mat_keyword[i<sp/>+<sp/>1],<sp/>NULL);</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cohele_mat[nmat].<ref refid="structmat__cohelement__t_1aadcf8147cd78389b6a462bde83e7bec9" kindref="member">mat</ref>-&gt;<ref refid="unionany__cohmat__type_1a94f67ab5aa017cf697a688870bb0c616" kindref="member">EM_ani</ref>.<ref refid="structsolidcohani___e_m__t_1a500d85dc4ceda517431b5cb4236fece9" kindref="member">ten</ref>[1]<sp/>=<sp/>strtod(mat_keyword[i<sp/>+<sp/>2],<sp/>NULL);</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>i<sp/>+<sp/>2;</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strnicmp(mat_keyword[i],<sp/></highlight><highlight class="stringliteral">&quot;cohesion&quot;</highlight><highlight class="normal">,<sp/>3)<sp/>==<sp/>0)<sp/></highlight><highlight class="comment">/*<sp/>cohesion<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cohele_mat[nmat].<ref refid="structmat__cohelement__t_1aadcf8147cd78389b6a462bde83e7bec9" kindref="member">mat</ref>-&gt;<ref refid="unionany__cohmat__type_1a94f67ab5aa017cf697a688870bb0c616" kindref="member">EM_ani</ref>.<ref refid="structsolidcohani___e_m__t_1a5d587cda6734f31d2dd5d6176a8c6f91" kindref="member">coh</ref>[0]<sp/>=<sp/>strtod(mat_keyword[i<sp/>+<sp/>1],<sp/>NULL);</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cohele_mat[nmat].<ref refid="structmat__cohelement__t_1aadcf8147cd78389b6a462bde83e7bec9" kindref="member">mat</ref>-&gt;<ref refid="unionany__cohmat__type_1a94f67ab5aa017cf697a688870bb0c616" kindref="member">EM_ani</ref>.<ref refid="structsolidcohani___e_m__t_1a5d587cda6734f31d2dd5d6176a8c6f91" kindref="member">coh</ref>[1]<sp/>=<sp/>strtod(mat_keyword[i<sp/>+<sp/>2],<sp/>NULL);</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>i<sp/>+<sp/>2;</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strnicmp(mat_keyword[i],<sp/></highlight><highlight class="stringliteral">&quot;dip&quot;</highlight><highlight class="normal">,<sp/>3)<sp/>==<sp/>0)<sp/></highlight><highlight class="comment">/*<sp/>dip<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cohele_mat[nmat].<ref refid="structmat__cohelement__t_1aadcf8147cd78389b6a462bde83e7bec9" kindref="member">mat</ref>-&gt;<ref refid="unionany__cohmat__type_1a94f67ab5aa017cf697a688870bb0c616" kindref="member">EM_ani</ref>.<ref refid="structsolidcohani___e_m__t_1a5bfc7d1448bac91d1eec23e44354af76" kindref="member">dip</ref><sp/>=<sp/>strtod(mat_keyword[i<sp/>+<sp/>1],<sp/>NULL);</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>i<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strnicmp(mat_keyword[i],<sp/></highlight><highlight class="stringliteral">&quot;power&quot;</highlight><highlight class="normal">,<sp/>3)<sp/>==<sp/>0)<sp/></highlight><highlight class="comment">/*<sp/>power<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cohele_mat[nmat].<ref refid="structmat__cohelement__t_1aadcf8147cd78389b6a462bde83e7bec9" kindref="member">mat</ref>-&gt;<ref refid="unionany__cohmat__type_1a94f67ab5aa017cf697a688870bb0c616" kindref="member">EM_ani</ref>.<ref refid="structsolidcohani___e_m__t_1a52bb4c1c2469def4afdc7c9b879d91b1" kindref="member">power</ref><sp/>=<sp/>strtod(mat_keyword[i<sp/>+<sp/>1],<sp/>NULL);</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>i<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(stricmp(mat_keyword[i],<sp/></highlight><highlight class="stringliteral">&quot;GI&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)<sp/></highlight><highlight class="comment">/*<sp/>GI<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cohele_mat[nmat].<ref refid="structmat__cohelement__t_1aadcf8147cd78389b6a462bde83e7bec9" kindref="member">mat</ref>-&gt;<ref refid="unionany__cohmat__type_1a94f67ab5aa017cf697a688870bb0c616" kindref="member">EM_ani</ref>.<ref refid="structsolidcohani___e_m__t_1a9714ec177ae46f736682f2bcc1bef51e" kindref="member">GI</ref>[0]<sp/>=<sp/>strtod(mat_keyword[i<sp/>+<sp/>1],<sp/>NULL);</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cohele_mat[nmat].<ref refid="structmat__cohelement__t_1aadcf8147cd78389b6a462bde83e7bec9" kindref="member">mat</ref>-&gt;<ref refid="unionany__cohmat__type_1a94f67ab5aa017cf697a688870bb0c616" kindref="member">EM_ani</ref>.<ref refid="structsolidcohani___e_m__t_1a9714ec177ae46f736682f2bcc1bef51e" kindref="member">GI</ref>[1]<sp/>=<sp/>strtod(mat_keyword[i<sp/>+<sp/>2],<sp/>NULL);</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>i<sp/>+<sp/>2;</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(stricmp(mat_keyword[i],<sp/></highlight><highlight class="stringliteral">&quot;GII&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)<sp/></highlight><highlight class="comment">/*<sp/>GII<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cohele_mat[nmat].<ref refid="structmat__cohelement__t_1aadcf8147cd78389b6a462bde83e7bec9" kindref="member">mat</ref>-&gt;<ref refid="unionany__cohmat__type_1a94f67ab5aa017cf697a688870bb0c616" kindref="member">EM_ani</ref>.<ref refid="structsolidcohani___e_m__t_1ac5f9553eefb1fa03a875cec16fad1ad3" kindref="member">GII</ref>[0]<sp/>=<sp/>strtod(mat_keyword[i<sp/>+<sp/>1],<sp/>NULL);</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cohele_mat[nmat].<ref refid="structmat__cohelement__t_1aadcf8147cd78389b6a462bde83e7bec9" kindref="member">mat</ref>-&gt;<ref refid="unionany__cohmat__type_1a94f67ab5aa017cf697a688870bb0c616" kindref="member">EM_ani</ref>.<ref refid="structsolidcohani___e_m__t_1ac5f9553eefb1fa03a875cec16fad1ad3" kindref="member">GII</ref>[1]<sp/>=<sp/>strtod(mat_keyword[i<sp/>+<sp/>2],<sp/>NULL);</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>i<sp/>+<sp/>2;</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strnicmp(mat_keyword[i],<sp/></highlight><highlight class="stringliteral">&quot;friction&quot;</highlight><highlight class="normal">,<sp/>3)<sp/>==<sp/>0)<sp/></highlight><highlight class="comment">/*<sp/>friction<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cohele_mat[nmat].<ref refid="structmat__cohelement__t_1aadcf8147cd78389b6a462bde83e7bec9" kindref="member">mat</ref>-&gt;<ref refid="unionany__cohmat__type_1a94f67ab5aa017cf697a688870bb0c616" kindref="member">EM_ani</ref>.<ref refid="structsolidcohani___e_m__t_1a7750b33c9ae1df281c66d12a6b5576da" kindref="member">fri</ref>[0]<sp/>=<sp/>strtod(mat_keyword[i<sp/>+<sp/>1],<sp/>NULL);</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cohele_mat[nmat].<ref refid="structmat__cohelement__t_1aadcf8147cd78389b6a462bde83e7bec9" kindref="member">mat</ref>-&gt;<ref refid="unionany__cohmat__type_1a94f67ab5aa017cf697a688870bb0c616" kindref="member">EM_ani</ref>.<ref refid="structsolidcohani___e_m__t_1a7750b33c9ae1df281c66d12a6b5576da" kindref="member">fri</ref>[1]<sp/>=<sp/>strtod(mat_keyword[i<sp/>+<sp/>2],<sp/>NULL);</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>i<sp/>+<sp/>2;</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strnicmp(mat_keyword[i],<sp/></highlight><highlight class="stringliteral">&quot;#&quot;</highlight><highlight class="normal">,<sp/>1)<sp/>==<sp/>0)<sp/></highlight><highlight class="comment">/*<sp/>comments<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dump_message_keyword(</highlight><highlight class="stringliteral">&quot;Error:<sp/>no<sp/>found<sp/>keyword:<sp/>&quot;</highlight><highlight class="normal">,<sp/>mat_keyword[i]);</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exit(-1);</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nmat++;</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dump_message(</highlight><highlight class="stringliteral">&quot;Error:<sp/>unrecognised<sp/>boudary<sp/>type.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(group-&gt;ng_cohele<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dump_message(</highlight><highlight class="stringliteral">&quot;Error:<sp/>no<sp/>cohesive<sp/>element<sp/>groups<sp/>found.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exit(1);</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(UInt<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>group-&gt;ng_cohele;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!stricmp(group-&gt;cohele[i].tag,<sp/>keyword))<sp/>{</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>find_id++;</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nmat<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cohele_mat<sp/>=<sp/>(<ref refid="structmat__cohelement__t" kindref="compound">mat_cohelement_t</ref>*)malloc(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structmat__cohelement__t" kindref="compound">mat_cohelement_t</ref>));</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structmat__cohelement__t" kindref="compound">mat_cohelement_t</ref>*<sp/>temp<sp/>=<sp/>(<ref refid="structmat__cohelement__t" kindref="compound">mat_cohelement_t</ref>*)realloc(cohele_mat,<sp/>(nmat<sp/>+<sp/>1)<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structmat__cohelement__t" kindref="compound">mat_cohelement_t</ref>));</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cohele_mat<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>temp;</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>push<sp/>to<sp/>element<sp/>matid</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(UInt<sp/>elementid<sp/>=<sp/>0;<sp/>elementid<sp/>&lt;<sp/>group-&gt;cohele[i].size;<sp/>elementid++)<sp/>{</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cohelement-&gt;<ref refid="struct_coh__element__structure_1a5c6b14a4ceedd3ac04927d5d6c28811c" kindref="member">cohele</ref>[group-&gt;cohele[i].cohele[elementid]].<ref refid="structcohelement__type_1abdc03d35cad4b39f082215c818e84067" kindref="member">matid</ref><sp/>=<sp/>nmat;</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="480"><highlight class="normal"></highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cohele_mat[nmat].<ref refid="structmat__cohelement__t_1a7bb5e40c10df6a41df64bda1f4bb3e26" kindref="member">tag</ref><sp/>=<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)malloc(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">)<sp/>*<sp/>20);</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strcpy(cohele_mat[nmat].tag,<sp/>keyword);</highlight></codeline>
<codeline lineno="483"><highlight class="normal"></highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parse_keyword(general-&gt;InputFile,<sp/>cons);</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!stricmp(cons,<sp/></highlight><highlight class="stringliteral">&quot;EM&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>read<sp/>a<sp/>line<sp/>to<sp/>avoid<sp/>\n<sp/>at<sp/>the<sp/>end<sp/>of<sp/>the<sp/>line<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ret<sp/>=<sp/>fscanf(general-&gt;InputFile,<sp/></highlight><highlight class="stringliteral">&quot;%[^\n]%*c&quot;</highlight><highlight class="normal">,<sp/>sn);</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>split<sp/>the<sp/>string<sp/>into<sp/>strings<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>ptr<sp/>=<sp/>strtok(sn,<sp/>delim);</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(ptr<sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mat_keyword[keyword_count]<sp/>=<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)malloc(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">)<sp/>*<sp/>20);</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strcpy(mat_keyword[keyword_count],<sp/>ptr);</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptr<sp/>=<sp/>strtok(NULL,<sp/>delim);</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>keyword_count++;</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="496"><highlight class="normal"></highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cohele_mat[nmat].<ref refid="structmat__cohelement__t_1af10a9fa01cb90333299f9aedd0e4a181" kindref="member">cons</ref><sp/>=<sp/>COH_EM;</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cohele_mat[nmat].<ref refid="structmat__cohelement__t_1aadcf8147cd78389b6a462bde83e7bec9" kindref="member">mat</ref><sp/><sp/>=<sp/>(<ref refid="unionany__cohmat__type" kindref="compound">any_cohmat_type</ref>*)malloc(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="unionany__cohmat__type" kindref="compound">any_cohmat_type</ref>));</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*initialize<sp/>the<sp/>parameters<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cohele_mat[nmat].<ref refid="structmat__cohelement__t_1aadcf8147cd78389b6a462bde83e7bec9" kindref="member">mat</ref>-&gt;<ref refid="unionany__cohmat__type_1a2db898a34760610abf5666bb439f7dc9" kindref="member">EM</ref>.<ref refid="structsolidcoh___e_m__t_1a4c9547f0756d1ef47036d3e7bfee1ddd" kindref="member">ten</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cohele_mat[nmat].<ref refid="structmat__cohelement__t_1aadcf8147cd78389b6a462bde83e7bec9" kindref="member">mat</ref>-&gt;<ref refid="unionany__cohmat__type_1a2db898a34760610abf5666bb439f7dc9" kindref="member">EM</ref>.<ref refid="structsolidcoh___e_m__t_1a792ea6e0cbf026edd6f77835f0fb7c8d" kindref="member">coh</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cohele_mat[nmat].<ref refid="structmat__cohelement__t_1aadcf8147cd78389b6a462bde83e7bec9" kindref="member">mat</ref>-&gt;<ref refid="unionany__cohmat__type_1a2db898a34760610abf5666bb439f7dc9" kindref="member">EM</ref>.<ref refid="structsolidcoh___e_m__t_1a87632afe13128ce6163d016ae441eb29" kindref="member">fri</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cohele_mat[nmat].<ref refid="structmat__cohelement__t_1aadcf8147cd78389b6a462bde83e7bec9" kindref="member">mat</ref>-&gt;<ref refid="unionany__cohmat__type_1a2db898a34760610abf5666bb439f7dc9" kindref="member">EM</ref>.<ref refid="structsolidcoh___e_m__t_1a58eb48dec3e590a5cd1548c0e2369da5" kindref="member">GI</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cohele_mat[nmat].<ref refid="structmat__cohelement__t_1aadcf8147cd78389b6a462bde83e7bec9" kindref="member">mat</ref>-&gt;<ref refid="unionany__cohmat__type_1a2db898a34760610abf5666bb439f7dc9" kindref="member">EM</ref>.<ref refid="structsolidcoh___e_m__t_1ac83bcaf81331cfd59d30ee2648fb7d2f" kindref="member">GII</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cohele_mat[nmat].<ref refid="structmat__cohelement__t_1aadcf8147cd78389b6a462bde83e7bec9" kindref="member">mat</ref>-&gt;<ref refid="unionany__cohmat__type_1a2db898a34760610abf5666bb439f7dc9" kindref="member">EM</ref>.<ref refid="structsolidcoh___e_m__t_1a2012363918f3e6b9833567dfef6c22f1" kindref="member">pn</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cohele_mat[nmat].<ref refid="structmat__cohelement__t_1aadcf8147cd78389b6a462bde83e7bec9" kindref="member">mat</ref>-&gt;<ref refid="unionany__cohmat__type_1a2db898a34760610abf5666bb439f7dc9" kindref="member">EM</ref>.<ref refid="structsolidcoh___e_m__t_1aa70c5b55bd505e62c2ba18dc264b5259" kindref="member">pt</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cohele_mat[nmat].<ref refid="structmat__cohelement__t_1aadcf8147cd78389b6a462bde83e7bec9" kindref="member">mat</ref>-&gt;<ref refid="unionany__cohmat__type_1a2db898a34760610abf5666bb439f7dc9" kindref="member">EM</ref>.<ref refid="structsolidcoh___e_m__t_1a119a2cdb7f2766b7eb9d79d6c58f93a5" kindref="member">beta_n</ref><sp/><sp/><sp/><sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cohele_mat[nmat].<ref refid="structmat__cohelement__t_1aadcf8147cd78389b6a462bde83e7bec9" kindref="member">mat</ref>-&gt;<ref refid="unionany__cohmat__type_1a2db898a34760610abf5666bb439f7dc9" kindref="member">EM</ref>.<ref refid="structsolidcoh___e_m__t_1a62bca2566e5a52b4fc93d2fc608887b9" kindref="member">beta_t</ref><sp/><sp/><sp/><sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cohele_mat[nmat].<ref refid="structmat__cohelement__t_1aadcf8147cd78389b6a462bde83e7bec9" kindref="member">mat</ref>-&gt;<ref refid="unionany__cohmat__type_1a2db898a34760610abf5666bb439f7dc9" kindref="member">EM</ref>.<ref refid="structsolidcoh___e_m__t_1ab08335e8ed2dea965b3bf4959e638b66" kindref="member">thermal_h</ref><sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="510"><highlight class="normal"></highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>keyword_count;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strnicmp(mat_keyword[i],<sp/></highlight><highlight class="stringliteral">&quot;tension&quot;</highlight><highlight class="normal">,<sp/>3)<sp/>==<sp/>0)<sp/></highlight><highlight class="comment">/*<sp/>tension<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cohele_mat[nmat].<ref refid="structmat__cohelement__t_1aadcf8147cd78389b6a462bde83e7bec9" kindref="member">mat</ref>-&gt;<ref refid="unionany__cohmat__type_1a2db898a34760610abf5666bb439f7dc9" kindref="member">EM</ref>.<ref refid="structsolidcoh___e_m__t_1a4c9547f0756d1ef47036d3e7bfee1ddd" kindref="member">ten</ref><sp/>=<sp/>strtod(mat_keyword[i<sp/>+<sp/>1],<sp/>NULL);</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i++;</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strnicmp(mat_keyword[i],<sp/></highlight><highlight class="stringliteral">&quot;cohesion&quot;</highlight><highlight class="normal">,<sp/>3)<sp/>==<sp/>0)<sp/></highlight><highlight class="comment">/*<sp/>cohesion<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cohele_mat[nmat].<ref refid="structmat__cohelement__t_1aadcf8147cd78389b6a462bde83e7bec9" kindref="member">mat</ref>-&gt;<ref refid="unionany__cohmat__type_1a2db898a34760610abf5666bb439f7dc9" kindref="member">EM</ref>.<ref refid="structsolidcoh___e_m__t_1a792ea6e0cbf026edd6f77835f0fb7c8d" kindref="member">coh</ref><sp/>=<sp/>strtod(mat_keyword[i<sp/>+<sp/>1],<sp/>NULL);</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i++;</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strnicmp(mat_keyword[i],<sp/></highlight><highlight class="stringliteral">&quot;pn&quot;</highlight><highlight class="normal">,<sp/>2)<sp/>==<sp/>0)<sp/></highlight><highlight class="comment">/*<sp/>pn<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cohele_mat[nmat].<ref refid="structmat__cohelement__t_1aadcf8147cd78389b6a462bde83e7bec9" kindref="member">mat</ref>-&gt;<ref refid="unionany__cohmat__type_1a2db898a34760610abf5666bb439f7dc9" kindref="member">EM</ref>.<ref refid="structsolidcoh___e_m__t_1a2012363918f3e6b9833567dfef6c22f1" kindref="member">pn</ref><sp/>=<sp/>strtod(mat_keyword[i<sp/>+<sp/>1],<sp/>NULL);</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i++;</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strnicmp(mat_keyword[i],<sp/></highlight><highlight class="stringliteral">&quot;pt&quot;</highlight><highlight class="normal">,<sp/>2)<sp/>==<sp/>0)<sp/></highlight><highlight class="comment">/*<sp/>pt<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cohele_mat[nmat].<ref refid="structmat__cohelement__t_1aadcf8147cd78389b6a462bde83e7bec9" kindref="member">mat</ref>-&gt;<ref refid="unionany__cohmat__type_1a2db898a34760610abf5666bb439f7dc9" kindref="member">EM</ref>.<ref refid="structsolidcoh___e_m__t_1aa70c5b55bd505e62c2ba18dc264b5259" kindref="member">pt</ref><sp/>=<sp/>strtod(mat_keyword[i<sp/>+<sp/>1],<sp/>NULL);</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i++;</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(stricmp(mat_keyword[i],<sp/></highlight><highlight class="stringliteral">&quot;GI&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)<sp/></highlight><highlight class="comment">/*<sp/>GI<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cohele_mat[nmat].<ref refid="structmat__cohelement__t_1aadcf8147cd78389b6a462bde83e7bec9" kindref="member">mat</ref>-&gt;<ref refid="unionany__cohmat__type_1a2db898a34760610abf5666bb439f7dc9" kindref="member">EM</ref>.<ref refid="structsolidcoh___e_m__t_1a58eb48dec3e590a5cd1548c0e2369da5" kindref="member">GI</ref><sp/>=<sp/>strtod(mat_keyword[i<sp/>+<sp/>1],<sp/>NULL);</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i++;</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(stricmp(mat_keyword[i],<sp/></highlight><highlight class="stringliteral">&quot;GII&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)<sp/></highlight><highlight class="comment">/*<sp/>GII<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cohele_mat[nmat].<ref refid="structmat__cohelement__t_1aadcf8147cd78389b6a462bde83e7bec9" kindref="member">mat</ref>-&gt;<ref refid="unionany__cohmat__type_1a2db898a34760610abf5666bb439f7dc9" kindref="member">EM</ref>.<ref refid="structsolidcoh___e_m__t_1ac83bcaf81331cfd59d30ee2648fb7d2f" kindref="member">GII</ref><sp/>=<sp/>strtod(mat_keyword[i<sp/>+<sp/>1],<sp/>NULL);</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i++;</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strnicmp(mat_keyword[i],<sp/></highlight><highlight class="stringliteral">&quot;friction&quot;</highlight><highlight class="normal">,<sp/>3)<sp/>==<sp/>0)<sp/></highlight><highlight class="comment">/*<sp/>friction<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cohele_mat[nmat].<ref refid="structmat__cohelement__t_1aadcf8147cd78389b6a462bde83e7bec9" kindref="member">mat</ref>-&gt;<ref refid="unionany__cohmat__type_1a2db898a34760610abf5666bb439f7dc9" kindref="member">EM</ref>.<ref refid="structsolidcoh___e_m__t_1a87632afe13128ce6163d016ae441eb29" kindref="member">fri</ref><sp/>=<sp/>strtod(mat_keyword[i<sp/>+<sp/>1],<sp/>NULL);</highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i++;</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(stricmp(mat_keyword[i],<sp/></highlight><highlight class="stringliteral">&quot;beta_I&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)<sp/></highlight><highlight class="comment">/*<sp/>normal<sp/>dashpot<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cohele_mat[nmat].<ref refid="structmat__cohelement__t_1aadcf8147cd78389b6a462bde83e7bec9" kindref="member">mat</ref>-&gt;<ref refid="unionany__cohmat__type_1a2db898a34760610abf5666bb439f7dc9" kindref="member">EM</ref>.<ref refid="structsolidcoh___e_m__t_1a119a2cdb7f2766b7eb9d79d6c58f93a5" kindref="member">beta_n</ref><sp/>=<sp/>strtod(mat_keyword[i<sp/>+<sp/>1],<sp/>NULL);</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i++;</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(stricmp(mat_keyword[i],<sp/></highlight><highlight class="stringliteral">&quot;beta_II&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)<sp/></highlight><highlight class="comment">/*<sp/>tangentinal<sp/>dashpot<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cohele_mat[nmat].<ref refid="structmat__cohelement__t_1aadcf8147cd78389b6a462bde83e7bec9" kindref="member">mat</ref>-&gt;<ref refid="unionany__cohmat__type_1a2db898a34760610abf5666bb439f7dc9" kindref="member">EM</ref>.<ref refid="structsolidcoh___e_m__t_1a62bca2566e5a52b4fc93d2fc608887b9" kindref="member">beta_t</ref><sp/>=<sp/>strtod(mat_keyword[i<sp/>+<sp/>1],<sp/>NULL);</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i++;</highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(stricmp(mat_keyword[i],<sp/></highlight><highlight class="stringliteral">&quot;thermal_h&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)<sp/></highlight><highlight class="comment">/*<sp/>thermal_h<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cohele_mat[nmat].<ref refid="structmat__cohelement__t_1aadcf8147cd78389b6a462bde83e7bec9" kindref="member">mat</ref>-&gt;<ref refid="unionany__cohmat__type_1a2db898a34760610abf5666bb439f7dc9" kindref="member">EM</ref>.<ref refid="structsolidcoh___e_m__t_1ab08335e8ed2dea965b3bf4959e638b66" kindref="member">thermal_h</ref><sp/>=<sp/>strtod(mat_keyword[i<sp/>+<sp/>1],<sp/>NULL);</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i++;</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strnicmp(mat_keyword[i],<sp/></highlight><highlight class="stringliteral">&quot;#&quot;</highlight><highlight class="normal">,<sp/>1)<sp/>==<sp/>0)<sp/></highlight><highlight class="comment">/*<sp/>comments<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dump_message_keyword(</highlight><highlight class="stringliteral">&quot;Error:<sp/>no<sp/>found<sp/>keyword:<sp/>&quot;</highlight><highlight class="normal">,<sp/>mat_keyword[i]);</highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exit(-1);</highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nmat++;</highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!stricmp(cons,<sp/></highlight><highlight class="stringliteral">&quot;EM_dyn&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>read<sp/>a<sp/>line<sp/>to<sp/>avoid<sp/>\n<sp/>at<sp/>the<sp/>end<sp/>of<sp/>the<sp/>line<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ret<sp/>=<sp/>fscanf(general-&gt;InputFile,<sp/></highlight><highlight class="stringliteral">&quot;%[^\n]%*c&quot;</highlight><highlight class="normal">,<sp/>sn);</highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>split<sp/>the<sp/>string<sp/>into<sp/>strings<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>ptr<sp/>=<sp/>strtok(sn,<sp/>delim);</highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(ptr<sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mat_keyword[keyword_count]<sp/>=<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)malloc(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">)<sp/>*<sp/>20);</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strcpy(mat_keyword[keyword_count],<sp/>ptr);</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptr<sp/>=<sp/>strtok(NULL,<sp/>delim);</highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>keyword_count++;</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cohele_mat[nmat].<ref refid="structmat__cohelement__t_1af10a9fa01cb90333299f9aedd0e4a181" kindref="member">cons</ref><sp/>=<sp/>COH_EM_DYNAMIC;</highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cohele_mat[nmat].<ref refid="structmat__cohelement__t_1aadcf8147cd78389b6a462bde83e7bec9" kindref="member">mat</ref><sp/><sp/>=<sp/>(<ref refid="unionany__cohmat__type" kindref="compound">any_cohmat_type</ref>*)malloc(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="unionany__cohmat__type" kindref="compound">any_cohmat_type</ref>));</highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*initialize<sp/>the<sp/>parameters<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cohele_mat[nmat].<ref refid="structmat__cohelement__t_1aadcf8147cd78389b6a462bde83e7bec9" kindref="member">mat</ref>-&gt;<ref refid="unionany__cohmat__type_1a6580630e08ffd95dce1987938f1f03e8" kindref="member">EM_dyn</ref>.<ref refid="structsolidcohdyn___e_m__t_1a4c9547f0756d1ef47036d3e7bfee1ddd" kindref="member">ten</ref><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cohele_mat[nmat].<ref refid="structmat__cohelement__t_1aadcf8147cd78389b6a462bde83e7bec9" kindref="member">mat</ref>-&gt;<ref refid="unionany__cohmat__type_1a6580630e08ffd95dce1987938f1f03e8" kindref="member">EM_dyn</ref>.<ref refid="structsolidcohdyn___e_m__t_1a792ea6e0cbf026edd6f77835f0fb7c8d" kindref="member">coh</ref><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cohele_mat[nmat].<ref refid="structmat__cohelement__t_1aadcf8147cd78389b6a462bde83e7bec9" kindref="member">mat</ref>-&gt;<ref refid="unionany__cohmat__type_1a6580630e08ffd95dce1987938f1f03e8" kindref="member">EM_dyn</ref>.<ref refid="structsolidcohdyn___e_m__t_1a87632afe13128ce6163d016ae441eb29" kindref="member">fri</ref><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cohele_mat[nmat].<ref refid="structmat__cohelement__t_1aadcf8147cd78389b6a462bde83e7bec9" kindref="member">mat</ref>-&gt;<ref refid="unionany__cohmat__type_1a6580630e08ffd95dce1987938f1f03e8" kindref="member">EM_dyn</ref>.<ref refid="structsolidcohdyn___e_m__t_1a58eb48dec3e590a5cd1548c0e2369da5" kindref="member">GI</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cohele_mat[nmat].<ref refid="structmat__cohelement__t_1aadcf8147cd78389b6a462bde83e7bec9" kindref="member">mat</ref>-&gt;<ref refid="unionany__cohmat__type_1a6580630e08ffd95dce1987938f1f03e8" kindref="member">EM_dyn</ref>.<ref refid="structsolidcohdyn___e_m__t_1ac83bcaf81331cfd59d30ee2648fb7d2f" kindref="member">GII</ref><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cohele_mat[nmat].<ref refid="structmat__cohelement__t_1aadcf8147cd78389b6a462bde83e7bec9" kindref="member">mat</ref>-&gt;<ref refid="unionany__cohmat__type_1a6580630e08ffd95dce1987938f1f03e8" kindref="member">EM_dyn</ref>.<ref refid="structsolidcohdyn___e_m__t_1a2012363918f3e6b9833567dfef6c22f1" kindref="member">pn</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cohele_mat[nmat].<ref refid="structmat__cohelement__t_1aadcf8147cd78389b6a462bde83e7bec9" kindref="member">mat</ref>-&gt;<ref refid="unionany__cohmat__type_1a6580630e08ffd95dce1987938f1f03e8" kindref="member">EM_dyn</ref>.<ref refid="structsolidcohdyn___e_m__t_1aa70c5b55bd505e62c2ba18dc264b5259" kindref="member">pt</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cohele_mat[nmat].<ref refid="structmat__cohelement__t_1aadcf8147cd78389b6a462bde83e7bec9" kindref="member">mat</ref>-&gt;<ref refid="unionany__cohmat__type_1a6580630e08ffd95dce1987938f1f03e8" kindref="member">EM_dyn</ref>.<ref refid="structsolidcohdyn___e_m__t_1a51fe15be911e1dfd322b0c922de5dc61" kindref="member">c_rate_n</ref><sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cohele_mat[nmat].<ref refid="structmat__cohelement__t_1aadcf8147cd78389b6a462bde83e7bec9" kindref="member">mat</ref>-&gt;<ref refid="unionany__cohmat__type_1a6580630e08ffd95dce1987938f1f03e8" kindref="member">EM_dyn</ref>.<ref refid="structsolidcohdyn___e_m__t_1a1a7bc85cca133c4cedd3c0116f51bbd5" kindref="member">exp_n</ref><sp/><sp/><sp/><sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cohele_mat[nmat].<ref refid="structmat__cohelement__t_1aadcf8147cd78389b6a462bde83e7bec9" kindref="member">mat</ref>-&gt;<ref refid="unionany__cohmat__type_1a6580630e08ffd95dce1987938f1f03e8" kindref="member">EM_dyn</ref>.<ref refid="structsolidcohdyn___e_m__t_1abcfa2747ea15146f89cad8f47450e2c1" kindref="member">c_rate_s</ref><sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cohele_mat[nmat].<ref refid="structmat__cohelement__t_1aadcf8147cd78389b6a462bde83e7bec9" kindref="member">mat</ref>-&gt;<ref refid="unionany__cohmat__type_1a6580630e08ffd95dce1987938f1f03e8" kindref="member">EM_dyn</ref>.<ref refid="structsolidcohdyn___e_m__t_1a4ae914e031424ee174f7e0677f63cb55" kindref="member">exp_s</ref><sp/><sp/><sp/><sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="586"><highlight class="normal"></highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>keyword_count;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strnicmp(mat_keyword[i],<sp/></highlight><highlight class="stringliteral">&quot;tension&quot;</highlight><highlight class="normal">,<sp/>3)<sp/>==<sp/>0)<sp/></highlight><highlight class="comment">/*<sp/>tension<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cohele_mat[nmat].<ref refid="structmat__cohelement__t_1aadcf8147cd78389b6a462bde83e7bec9" kindref="member">mat</ref>-&gt;<ref refid="unionany__cohmat__type_1a6580630e08ffd95dce1987938f1f03e8" kindref="member">EM_dyn</ref>.<ref refid="structsolidcohdyn___e_m__t_1a4c9547f0756d1ef47036d3e7bfee1ddd" kindref="member">ten</ref><sp/>=<sp/>strtod(mat_keyword[i<sp/>+<sp/>1],<sp/>NULL);</highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i++;</highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strnicmp(mat_keyword[i],<sp/></highlight><highlight class="stringliteral">&quot;cohesion&quot;</highlight><highlight class="normal">,<sp/>3)<sp/>==<sp/>0)<sp/></highlight><highlight class="comment">/*<sp/>cohesion<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cohele_mat[nmat].<ref refid="structmat__cohelement__t_1aadcf8147cd78389b6a462bde83e7bec9" kindref="member">mat</ref>-&gt;<ref refid="unionany__cohmat__type_1a6580630e08ffd95dce1987938f1f03e8" kindref="member">EM_dyn</ref>.<ref refid="structsolidcohdyn___e_m__t_1a792ea6e0cbf026edd6f77835f0fb7c8d" kindref="member">coh</ref><sp/>=<sp/>strtod(mat_keyword[i<sp/>+<sp/>1],<sp/>NULL);</highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i++;</highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strnicmp(mat_keyword[i],<sp/></highlight><highlight class="stringliteral">&quot;pn&quot;</highlight><highlight class="normal">,<sp/>2)<sp/>==<sp/>0)<sp/></highlight><highlight class="comment">/*<sp/>pn<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cohele_mat[nmat].<ref refid="structmat__cohelement__t_1aadcf8147cd78389b6a462bde83e7bec9" kindref="member">mat</ref>-&gt;<ref refid="unionany__cohmat__type_1a6580630e08ffd95dce1987938f1f03e8" kindref="member">EM_dyn</ref>.<ref refid="structsolidcohdyn___e_m__t_1a2012363918f3e6b9833567dfef6c22f1" kindref="member">pn</ref><sp/>=<sp/>strtod(mat_keyword[i<sp/>+<sp/>1],<sp/>NULL);</highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i++;</highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strnicmp(mat_keyword[i],<sp/></highlight><highlight class="stringliteral">&quot;pt&quot;</highlight><highlight class="normal">,<sp/>2)<sp/>==<sp/>0)<sp/></highlight><highlight class="comment">/*<sp/>pt<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cohele_mat[nmat].<ref refid="structmat__cohelement__t_1aadcf8147cd78389b6a462bde83e7bec9" kindref="member">mat</ref>-&gt;<ref refid="unionany__cohmat__type_1a6580630e08ffd95dce1987938f1f03e8" kindref="member">EM_dyn</ref>.<ref refid="structsolidcohdyn___e_m__t_1aa70c5b55bd505e62c2ba18dc264b5259" kindref="member">pt</ref><sp/>=<sp/>strtod(mat_keyword[i<sp/>+<sp/>1],<sp/>NULL);</highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i++;</highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(stricmp(mat_keyword[i],<sp/></highlight><highlight class="stringliteral">&quot;GI&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)<sp/></highlight><highlight class="comment">/*<sp/>GI<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cohele_mat[nmat].<ref refid="structmat__cohelement__t_1aadcf8147cd78389b6a462bde83e7bec9" kindref="member">mat</ref>-&gt;<ref refid="unionany__cohmat__type_1a6580630e08ffd95dce1987938f1f03e8" kindref="member">EM_dyn</ref>.<ref refid="structsolidcohdyn___e_m__t_1a58eb48dec3e590a5cd1548c0e2369da5" kindref="member">GI</ref><sp/>=<sp/>strtod(mat_keyword[i<sp/>+<sp/>1],<sp/>NULL);</highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i++;</highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(stricmp(mat_keyword[i],<sp/></highlight><highlight class="stringliteral">&quot;GII&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)<sp/></highlight><highlight class="comment">/*<sp/>GII<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cohele_mat[nmat].<ref refid="structmat__cohelement__t_1aadcf8147cd78389b6a462bde83e7bec9" kindref="member">mat</ref>-&gt;<ref refid="unionany__cohmat__type_1a6580630e08ffd95dce1987938f1f03e8" kindref="member">EM_dyn</ref>.<ref refid="structsolidcohdyn___e_m__t_1ac83bcaf81331cfd59d30ee2648fb7d2f" kindref="member">GII</ref><sp/>=<sp/>strtod(mat_keyword[i<sp/>+<sp/>1],<sp/>NULL);</highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i++;</highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strnicmp(mat_keyword[i],<sp/></highlight><highlight class="stringliteral">&quot;friction&quot;</highlight><highlight class="normal">,<sp/>3)<sp/>==<sp/>0)<sp/></highlight><highlight class="comment">/*<sp/>friction<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cohele_mat[nmat].<ref refid="structmat__cohelement__t_1aadcf8147cd78389b6a462bde83e7bec9" kindref="member">mat</ref>-&gt;<ref refid="unionany__cohmat__type_1a6580630e08ffd95dce1987938f1f03e8" kindref="member">EM_dyn</ref>.<ref refid="structsolidcohdyn___e_m__t_1a87632afe13128ce6163d016ae441eb29" kindref="member">fri</ref><sp/>=<sp/>strtod(mat_keyword[i<sp/>+<sp/>1],<sp/>NULL);</highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i++;</highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strnicmp(mat_keyword[i],<sp/></highlight><highlight class="stringliteral">&quot;n_rate&quot;</highlight><highlight class="normal">,<sp/>3)<sp/>==<sp/>0)<sp/></highlight><highlight class="comment">/*<sp/>mode<sp/>I<sp/>critical<sp/>strain<sp/>rate<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cohele_mat[nmat].<ref refid="structmat__cohelement__t_1aadcf8147cd78389b6a462bde83e7bec9" kindref="member">mat</ref>-&gt;<ref refid="unionany__cohmat__type_1a6580630e08ffd95dce1987938f1f03e8" kindref="member">EM_dyn</ref>.<ref refid="structsolidcohdyn___e_m__t_1a51fe15be911e1dfd322b0c922de5dc61" kindref="member">c_rate_n</ref><sp/>=<sp/>strtod(mat_keyword[i<sp/>+<sp/>1],<sp/>NULL);</highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i++;</highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strnicmp(mat_keyword[i],<sp/></highlight><highlight class="stringliteral">&quot;n_pow&quot;</highlight><highlight class="normal">,<sp/>3)<sp/>==<sp/>0)<sp/></highlight><highlight class="comment">/*<sp/>mode<sp/>I<sp/>power<sp/>factor<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cohele_mat[nmat].<ref refid="structmat__cohelement__t_1aadcf8147cd78389b6a462bde83e7bec9" kindref="member">mat</ref>-&gt;<ref refid="unionany__cohmat__type_1a6580630e08ffd95dce1987938f1f03e8" kindref="member">EM_dyn</ref>.<ref refid="structsolidcohdyn___e_m__t_1a1a7bc85cca133c4cedd3c0116f51bbd5" kindref="member">exp_n</ref><sp/>=<sp/>strtod(mat_keyword[i<sp/>+<sp/>1],<sp/>NULL);</highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i++;</highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strnicmp(mat_keyword[i],<sp/></highlight><highlight class="stringliteral">&quot;s_rate&quot;</highlight><highlight class="normal">,<sp/>3)<sp/>==<sp/>0)<sp/></highlight><highlight class="comment">/*<sp/>mode<sp/>II<sp/>critical<sp/>strain<sp/>rate<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cohele_mat[nmat].<ref refid="structmat__cohelement__t_1aadcf8147cd78389b6a462bde83e7bec9" kindref="member">mat</ref>-&gt;<ref refid="unionany__cohmat__type_1a6580630e08ffd95dce1987938f1f03e8" kindref="member">EM_dyn</ref>.<ref refid="structsolidcohdyn___e_m__t_1abcfa2747ea15146f89cad8f47450e2c1" kindref="member">c_rate_s</ref><sp/>=<sp/>strtod(mat_keyword[i<sp/>+<sp/>1],<sp/>NULL);</highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i++;</highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strnicmp(mat_keyword[i],<sp/></highlight><highlight class="stringliteral">&quot;s_pow&quot;</highlight><highlight class="normal">,<sp/>3)<sp/>==<sp/>0)<sp/></highlight><highlight class="comment">/*<sp/>mode<sp/>II<sp/>power<sp/>factor<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cohele_mat[nmat].<ref refid="structmat__cohelement__t_1aadcf8147cd78389b6a462bde83e7bec9" kindref="member">mat</ref>-&gt;<ref refid="unionany__cohmat__type_1a6580630e08ffd95dce1987938f1f03e8" kindref="member">EM_dyn</ref>.<ref refid="structsolidcohdyn___e_m__t_1a4ae914e031424ee174f7e0677f63cb55" kindref="member">exp_s</ref><sp/>=<sp/>strtod(mat_keyword[i<sp/>+<sp/>1],<sp/>NULL);</highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i++;</highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strnicmp(mat_keyword[i],<sp/></highlight><highlight class="stringliteral">&quot;#&quot;</highlight><highlight class="normal">,<sp/>1)<sp/>==<sp/>0)<sp/></highlight><highlight class="comment">/*<sp/>comments<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dump_message_keyword(</highlight><highlight class="stringliteral">&quot;Error:<sp/>no<sp/>found<sp/>keyword:<sp/>&quot;</highlight><highlight class="normal">,<sp/>mat_keyword[i]);</highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exit(-1);</highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nmat++;</highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!stricmp(cons,<sp/></highlight><highlight class="stringliteral">&quot;LINEAR&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>read<sp/>a<sp/>line<sp/>to<sp/>avoid<sp/>\n<sp/>at<sp/>the<sp/>end<sp/>of<sp/>the<sp/>line<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ret<sp/>=<sp/>fscanf(general-&gt;InputFile,<sp/></highlight><highlight class="stringliteral">&quot;%[^\n]%*c&quot;</highlight><highlight class="normal">,<sp/>sn);</highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>split<sp/>the<sp/>string<sp/>into<sp/>strings<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>ptr<sp/>=<sp/>strtok(sn,<sp/>delim);</highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(ptr<sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mat_keyword[keyword_count]<sp/>=<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)malloc(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">)<sp/>*<sp/>20);</highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strcpy(mat_keyword[keyword_count],<sp/>ptr);</highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptr<sp/>=<sp/>strtok(NULL,<sp/>delim);</highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>keyword_count++;</highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cohele_mat[nmat].<ref refid="structmat__cohelement__t_1af10a9fa01cb90333299f9aedd0e4a181" kindref="member">cons</ref><sp/>=<sp/>COH_LINEAR;</highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cohele_mat[nmat].<ref refid="structmat__cohelement__t_1aadcf8147cd78389b6a462bde83e7bec9" kindref="member">mat</ref><sp/><sp/>=<sp/>(<ref refid="unionany__cohmat__type" kindref="compound">any_cohmat_type</ref>*)malloc(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="unionany__cohmat__type" kindref="compound">any_cohmat_type</ref>));</highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*initialize<sp/>the<sp/>parameters<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cohele_mat[nmat].<ref refid="structmat__cohelement__t_1aadcf8147cd78389b6a462bde83e7bec9" kindref="member">mat</ref>-&gt;<ref refid="unionany__cohmat__type_1a910be8599b07c107675de67535cf1b60" kindref="member">linear</ref>.<ref refid="structsolidcoh__linear__t_1a4c9547f0756d1ef47036d3e7bfee1ddd" kindref="member">ten</ref><sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cohele_mat[nmat].<ref refid="structmat__cohelement__t_1aadcf8147cd78389b6a462bde83e7bec9" kindref="member">mat</ref>-&gt;<ref refid="unionany__cohmat__type_1a910be8599b07c107675de67535cf1b60" kindref="member">linear</ref>.<ref refid="structsolidcoh__linear__t_1a792ea6e0cbf026edd6f77835f0fb7c8d" kindref="member">coh</ref><sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cohele_mat[nmat].<ref refid="structmat__cohelement__t_1aadcf8147cd78389b6a462bde83e7bec9" kindref="member">mat</ref>-&gt;<ref refid="unionany__cohmat__type_1a910be8599b07c107675de67535cf1b60" kindref="member">linear</ref>.<ref refid="structsolidcoh__linear__t_1a87632afe13128ce6163d016ae441eb29" kindref="member">fri</ref><sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cohele_mat[nmat].<ref refid="structmat__cohelement__t_1aadcf8147cd78389b6a462bde83e7bec9" kindref="member">mat</ref>-&gt;<ref refid="unionany__cohmat__type_1a910be8599b07c107675de67535cf1b60" kindref="member">linear</ref>.<ref refid="structsolidcoh__linear__t_1a58eb48dec3e590a5cd1548c0e2369da5" kindref="member">GI</ref><sp/><sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cohele_mat[nmat].<ref refid="structmat__cohelement__t_1aadcf8147cd78389b6a462bde83e7bec9" kindref="member">mat</ref>-&gt;<ref refid="unionany__cohmat__type_1a910be8599b07c107675de67535cf1b60" kindref="member">linear</ref>.<ref refid="structsolidcoh__linear__t_1ac83bcaf81331cfd59d30ee2648fb7d2f" kindref="member">GII</ref><sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cohele_mat[nmat].<ref refid="structmat__cohelement__t_1aadcf8147cd78389b6a462bde83e7bec9" kindref="member">mat</ref>-&gt;<ref refid="unionany__cohmat__type_1a910be8599b07c107675de67535cf1b60" kindref="member">linear</ref>.<ref refid="structsolidcoh__linear__t_1a2012363918f3e6b9833567dfef6c22f1" kindref="member">pn</ref><sp/><sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cohele_mat[nmat].<ref refid="structmat__cohelement__t_1aadcf8147cd78389b6a462bde83e7bec9" kindref="member">mat</ref>-&gt;<ref refid="unionany__cohmat__type_1a910be8599b07c107675de67535cf1b60" kindref="member">linear</ref>.<ref refid="structsolidcoh__linear__t_1aa70c5b55bd505e62c2ba18dc264b5259" kindref="member">pt</ref><sp/><sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="662"><highlight class="normal"></highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>keyword_count;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strnicmp(mat_keyword[i],<sp/></highlight><highlight class="stringliteral">&quot;tension&quot;</highlight><highlight class="normal">,<sp/>3)<sp/>==<sp/>0)<sp/></highlight><highlight class="comment">/*<sp/>tension<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cohele_mat[nmat].<ref refid="structmat__cohelement__t_1aadcf8147cd78389b6a462bde83e7bec9" kindref="member">mat</ref>-&gt;<ref refid="unionany__cohmat__type_1a910be8599b07c107675de67535cf1b60" kindref="member">linear</ref>.<ref refid="structsolidcoh__linear__t_1a4c9547f0756d1ef47036d3e7bfee1ddd" kindref="member">ten</ref><sp/>=<sp/>strtod(mat_keyword[i<sp/>+<sp/>1],<sp/>NULL);</highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i++;</highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strnicmp(mat_keyword[i],<sp/></highlight><highlight class="stringliteral">&quot;cohesion&quot;</highlight><highlight class="normal">,<sp/>3)<sp/>==<sp/>0)<sp/></highlight><highlight class="comment">/*<sp/>cohesion<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cohele_mat[nmat].<ref refid="structmat__cohelement__t_1aadcf8147cd78389b6a462bde83e7bec9" kindref="member">mat</ref>-&gt;<ref refid="unionany__cohmat__type_1a910be8599b07c107675de67535cf1b60" kindref="member">linear</ref>.<ref refid="structsolidcoh__linear__t_1a792ea6e0cbf026edd6f77835f0fb7c8d" kindref="member">coh</ref><sp/>=<sp/>strtod(mat_keyword[i<sp/>+<sp/>1],<sp/>NULL);</highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i++;</highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strnicmp(mat_keyword[i],<sp/></highlight><highlight class="stringliteral">&quot;pn&quot;</highlight><highlight class="normal">,<sp/>2)<sp/>==<sp/>0)<sp/></highlight><highlight class="comment">/*<sp/>pn<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cohele_mat[nmat].<ref refid="structmat__cohelement__t_1aadcf8147cd78389b6a462bde83e7bec9" kindref="member">mat</ref>-&gt;<ref refid="unionany__cohmat__type_1a910be8599b07c107675de67535cf1b60" kindref="member">linear</ref>.<ref refid="structsolidcoh__linear__t_1a2012363918f3e6b9833567dfef6c22f1" kindref="member">pn</ref><sp/>=<sp/>strtod(mat_keyword[i<sp/>+<sp/>1],<sp/>NULL);</highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i++;</highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strnicmp(mat_keyword[i],<sp/></highlight><highlight class="stringliteral">&quot;pt&quot;</highlight><highlight class="normal">,<sp/>2)<sp/>==<sp/>0)<sp/></highlight><highlight class="comment">/*<sp/>pt<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cohele_mat[nmat].<ref refid="structmat__cohelement__t_1aadcf8147cd78389b6a462bde83e7bec9" kindref="member">mat</ref>-&gt;<ref refid="unionany__cohmat__type_1a910be8599b07c107675de67535cf1b60" kindref="member">linear</ref>.<ref refid="structsolidcoh__linear__t_1aa70c5b55bd505e62c2ba18dc264b5259" kindref="member">pt</ref><sp/>=<sp/>strtod(mat_keyword[i<sp/>+<sp/>1],<sp/>NULL);</highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i++;</highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(stricmp(mat_keyword[i],<sp/></highlight><highlight class="stringliteral">&quot;GI&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)<sp/></highlight><highlight class="comment">/*<sp/>GI<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cohele_mat[nmat].<ref refid="structmat__cohelement__t_1aadcf8147cd78389b6a462bde83e7bec9" kindref="member">mat</ref>-&gt;<ref refid="unionany__cohmat__type_1a910be8599b07c107675de67535cf1b60" kindref="member">linear</ref>.<ref refid="structsolidcoh__linear__t_1a58eb48dec3e590a5cd1548c0e2369da5" kindref="member">GI</ref><sp/>=<sp/>strtod(mat_keyword[i<sp/>+<sp/>1],<sp/>NULL);</highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i++;</highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(stricmp(mat_keyword[i],<sp/></highlight><highlight class="stringliteral">&quot;GII&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)<sp/></highlight><highlight class="comment">/*<sp/>GII<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cohele_mat[nmat].<ref refid="structmat__cohelement__t_1aadcf8147cd78389b6a462bde83e7bec9" kindref="member">mat</ref>-&gt;<ref refid="unionany__cohmat__type_1a910be8599b07c107675de67535cf1b60" kindref="member">linear</ref>.<ref refid="structsolidcoh__linear__t_1ac83bcaf81331cfd59d30ee2648fb7d2f" kindref="member">GII</ref><sp/>=<sp/>strtod(mat_keyword[i<sp/>+<sp/>1],<sp/>NULL);</highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i++;</highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strnicmp(mat_keyword[i],<sp/></highlight><highlight class="stringliteral">&quot;friction&quot;</highlight><highlight class="normal">,<sp/>3)<sp/>==<sp/>0)<sp/></highlight><highlight class="comment">/*<sp/>friction<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cohele_mat[nmat].<ref refid="structmat__cohelement__t_1aadcf8147cd78389b6a462bde83e7bec9" kindref="member">mat</ref>-&gt;<ref refid="unionany__cohmat__type_1a910be8599b07c107675de67535cf1b60" kindref="member">linear</ref>.<ref refid="structsolidcoh__linear__t_1a87632afe13128ce6163d016ae441eb29" kindref="member">fri</ref><sp/>=<sp/>strtod(mat_keyword[i<sp/>+<sp/>1],<sp/>NULL);</highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i++;</highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strnicmp(mat_keyword[i],<sp/></highlight><highlight class="stringliteral">&quot;#&quot;</highlight><highlight class="normal">,<sp/>1)<sp/>==<sp/>0)<sp/></highlight><highlight class="comment">/*<sp/>comments<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dump_message_keyword(</highlight><highlight class="stringliteral">&quot;Error:<sp/>no<sp/>found<sp/>keyword:<sp/>&quot;</highlight><highlight class="normal">,<sp/>mat_keyword[i]);</highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exit(-1);</highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="700"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nmat++;</highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!stricmp(cons,<sp/></highlight><highlight class="stringliteral">&quot;OP&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>read<sp/>a<sp/>line<sp/>to<sp/>avoid<sp/>\n<sp/>at<sp/>the<sp/>end<sp/>of<sp/>the<sp/>line<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ret<sp/>=<sp/>fscanf(general-&gt;InputFile,<sp/></highlight><highlight class="stringliteral">&quot;%[^\n]%*c&quot;</highlight><highlight class="normal">,<sp/>sn);</highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>split<sp/>the<sp/>string<sp/>into<sp/>strings<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>ptr<sp/>=<sp/>strtok(sn,<sp/>delim);</highlight></codeline>
<codeline lineno="706"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(ptr<sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mat_keyword[keyword_count]<sp/>=<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)malloc(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">)<sp/>*<sp/>20);</highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strcpy(mat_keyword[keyword_count],<sp/>ptr);</highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptr<sp/>=<sp/>strtok(NULL,<sp/>delim);</highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>keyword_count++;</highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="712"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cohele_mat[nmat].<ref refid="structmat__cohelement__t_1af10a9fa01cb90333299f9aedd0e4a181" kindref="member">cons</ref><sp/>=<sp/>COH_OP;</highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cohele_mat[nmat].<ref refid="structmat__cohelement__t_1aadcf8147cd78389b6a462bde83e7bec9" kindref="member">mat</ref><sp/><sp/>=<sp/>(<ref refid="unionany__cohmat__type" kindref="compound">any_cohmat_type</ref>*)malloc(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="unionany__cohmat__type" kindref="compound">any_cohmat_type</ref>));</highlight></codeline>
<codeline lineno="714"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*initialize<sp/>the<sp/>parameters<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="715"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cohele_mat[nmat].<ref refid="structmat__cohelement__t_1aadcf8147cd78389b6a462bde83e7bec9" kindref="member">mat</ref>-&gt;<ref refid="unionany__cohmat__type_1a4372c329a3699541885e361afdd0523a" kindref="member">OP</ref>.<ref refid="structsolidcoh___o_p__t_1a4c9547f0756d1ef47036d3e7bfee1ddd" kindref="member">ten</ref><sp/><sp/><sp/><sp/><sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="716"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cohele_mat[nmat].<ref refid="structmat__cohelement__t_1aadcf8147cd78389b6a462bde83e7bec9" kindref="member">mat</ref>-&gt;<ref refid="unionany__cohmat__type_1a4372c329a3699541885e361afdd0523a" kindref="member">OP</ref>.<ref refid="structsolidcoh___o_p__t_1a792ea6e0cbf026edd6f77835f0fb7c8d" kindref="member">coh</ref><sp/><sp/><sp/><sp/><sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="717"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cohele_mat[nmat].<ref refid="structmat__cohelement__t_1aadcf8147cd78389b6a462bde83e7bec9" kindref="member">mat</ref>-&gt;<ref refid="unionany__cohmat__type_1a4372c329a3699541885e361afdd0523a" kindref="member">OP</ref>.<ref refid="structsolidcoh___o_p__t_1a0458329966afb9c25d1884eae2f05ccc" kindref="member">delta_n</ref><sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="718"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cohele_mat[nmat].<ref refid="structmat__cohelement__t_1aadcf8147cd78389b6a462bde83e7bec9" kindref="member">mat</ref>-&gt;<ref refid="unionany__cohmat__type_1a4372c329a3699541885e361afdd0523a" kindref="member">OP</ref>.<ref refid="structsolidcoh___o_p__t_1af7d01a30c5b5da658ab0e2f002205146" kindref="member">delta_s</ref><sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="719"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cohele_mat[nmat].<ref refid="structmat__cohelement__t_1aadcf8147cd78389b6a462bde83e7bec9" kindref="member">mat</ref>-&gt;<ref refid="unionany__cohmat__type_1a4372c329a3699541885e361afdd0523a" kindref="member">OP</ref>.<ref refid="structsolidcoh___o_p__t_1a2012363918f3e6b9833567dfef6c22f1" kindref="member">pn</ref><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="720"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cohele_mat[nmat].<ref refid="structmat__cohelement__t_1aadcf8147cd78389b6a462bde83e7bec9" kindref="member">mat</ref>-&gt;<ref refid="unionany__cohmat__type_1a4372c329a3699541885e361afdd0523a" kindref="member">OP</ref>.<ref refid="structsolidcoh___o_p__t_1aa70c5b55bd505e62c2ba18dc264b5259" kindref="member">pt</ref><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="721"><highlight class="normal"></highlight></codeline>
<codeline lineno="722"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>keyword_count;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strnicmp(mat_keyword[i],<sp/></highlight><highlight class="stringliteral">&quot;tension&quot;</highlight><highlight class="normal">,<sp/>3)<sp/>==<sp/>0)<sp/></highlight><highlight class="comment">/*<sp/>tension<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="724"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="725"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cohele_mat[nmat].<ref refid="structmat__cohelement__t_1aadcf8147cd78389b6a462bde83e7bec9" kindref="member">mat</ref>-&gt;<ref refid="unionany__cohmat__type_1a4372c329a3699541885e361afdd0523a" kindref="member">OP</ref>.<ref refid="structsolidcoh___o_p__t_1a4c9547f0756d1ef47036d3e7bfee1ddd" kindref="member">ten</ref><sp/>=<sp/>strtod(mat_keyword[i<sp/>+<sp/>1],<sp/>NULL);</highlight></codeline>
<codeline lineno="726"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i++;</highlight></codeline>
<codeline lineno="727"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strnicmp(mat_keyword[i],<sp/></highlight><highlight class="stringliteral">&quot;cohesion&quot;</highlight><highlight class="normal">,<sp/>3)<sp/>==<sp/>0)<sp/></highlight><highlight class="comment">/*<sp/>cohesion<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="728"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="729"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cohele_mat[nmat].<ref refid="structmat__cohelement__t_1aadcf8147cd78389b6a462bde83e7bec9" kindref="member">mat</ref>-&gt;<ref refid="unionany__cohmat__type_1a4372c329a3699541885e361afdd0523a" kindref="member">OP</ref>.<ref refid="structsolidcoh___o_p__t_1a792ea6e0cbf026edd6f77835f0fb7c8d" kindref="member">coh</ref><sp/>=<sp/>strtod(mat_keyword[i<sp/>+<sp/>1],<sp/>NULL);</highlight></codeline>
<codeline lineno="730"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i++;</highlight></codeline>
<codeline lineno="731"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(stricmp(mat_keyword[i],<sp/></highlight><highlight class="stringliteral">&quot;op&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)<sp/></highlight><highlight class="comment">/*<sp/>GI<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="732"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="733"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cohele_mat[nmat].<ref refid="structmat__cohelement__t_1aadcf8147cd78389b6a462bde83e7bec9" kindref="member">mat</ref>-&gt;<ref refid="unionany__cohmat__type_1a4372c329a3699541885e361afdd0523a" kindref="member">OP</ref>.<ref refid="structsolidcoh___o_p__t_1a0458329966afb9c25d1884eae2f05ccc" kindref="member">delta_n</ref><sp/>=<sp/>strtod(mat_keyword[i<sp/>+<sp/>1],<sp/>NULL);</highlight></codeline>
<codeline lineno="734"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i++;</highlight></codeline>
<codeline lineno="735"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(stricmp(mat_keyword[i],<sp/></highlight><highlight class="stringliteral">&quot;sp&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)<sp/></highlight><highlight class="comment">/*<sp/>GII<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="736"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="737"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cohele_mat[nmat].<ref refid="structmat__cohelement__t_1aadcf8147cd78389b6a462bde83e7bec9" kindref="member">mat</ref>-&gt;<ref refid="unionany__cohmat__type_1a4372c329a3699541885e361afdd0523a" kindref="member">OP</ref>.<ref refid="structsolidcoh___o_p__t_1af7d01a30c5b5da658ab0e2f002205146" kindref="member">delta_s</ref><sp/>=<sp/>strtod(mat_keyword[i<sp/>+<sp/>1],<sp/>NULL);</highlight></codeline>
<codeline lineno="738"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i++;</highlight></codeline>
<codeline lineno="739"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strnicmp(mat_keyword[i],<sp/></highlight><highlight class="stringliteral">&quot;#&quot;</highlight><highlight class="normal">,<sp/>1)<sp/>==<sp/>0)<sp/></highlight><highlight class="comment">/*<sp/>comments<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="740"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="741"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="742"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="743"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dump_message_keyword(</highlight><highlight class="stringliteral">&quot;Error:<sp/>no<sp/>found<sp/>keyword:<sp/>&quot;</highlight><highlight class="normal">,<sp/>mat_keyword[i]);</highlight></codeline>
<codeline lineno="744"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exit(-1);</highlight></codeline>
<codeline lineno="745"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="746"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="747"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nmat++;</highlight></codeline>
<codeline lineno="748"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!stricmp(cons,<sp/></highlight><highlight class="stringliteral">&quot;BB&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="749"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cohele_mat[nmat].<ref refid="structmat__cohelement__t_1af10a9fa01cb90333299f9aedd0e4a181" kindref="member">cons</ref><sp/>=<sp/>COH_BB;</highlight></codeline>
<codeline lineno="750"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cohele_mat[nmat].<ref refid="structmat__cohelement__t_1aadcf8147cd78389b6a462bde83e7bec9" kindref="member">mat</ref><sp/><sp/>=<sp/>(<ref refid="unionany__cohmat__type" kindref="compound">any_cohmat_type</ref>*)malloc(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="unionany__cohmat__type" kindref="compound">any_cohmat_type</ref>));</highlight></codeline>
<codeline lineno="751"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nmat++;</highlight></codeline>
<codeline lineno="752"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!stricmp(cons,<sp/></highlight><highlight class="stringliteral">&quot;EM_het&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="753"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>generate<sp/>random<sp/>seeds<sp/>for<sp/>the<sp/>hetergenous<sp/>materials<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="754"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cohelement-&gt;<ref refid="struct_coh__element__structure_1a18fcef7a83145e7064d42153c7d759a2" kindref="member">het_value</ref><sp/>=<sp/>initialize_1D_double_array(cohelement-&gt;<ref refid="struct_coh__element__structure_1af9606282b3f52144a66174c964f90276" kindref="member">cohe_num</ref>,<sp/>0.0);</highlight></codeline>
<codeline lineno="755"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(UInt<sp/>elementid<sp/>=<sp/>0;<sp/>elementid<sp/>&lt;<sp/>cohelement-&gt;<ref refid="struct_coh__element__structure_1af9606282b3f52144a66174c964f90276" kindref="member">cohe_num</ref>;<sp/>elementid++)<sp/>{</highlight></codeline>
<codeline lineno="756"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cohelement-&gt;<ref refid="struct_coh__element__structure_1a18fcef7a83145e7064d42153c7d759a2" kindref="member">het_value</ref>[elementid]<sp/>=<sp/>random_normal(0.0,<sp/>1.0);</highlight></codeline>
<codeline lineno="757"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="758"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>read<sp/>a<sp/>line<sp/>to<sp/>avoid<sp/>\n<sp/>at<sp/>the<sp/>end<sp/>of<sp/>the<sp/>line<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="759"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ret<sp/>=<sp/>fscanf(general-&gt;InputFile,<sp/></highlight><highlight class="stringliteral">&quot;%[^\n]%*c&quot;</highlight><highlight class="normal">,<sp/>sn);</highlight></codeline>
<codeline lineno="760"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>split<sp/>the<sp/>string<sp/>into<sp/>strings<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="761"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>ptr<sp/>=<sp/>strtok(sn,<sp/>delim);</highlight></codeline>
<codeline lineno="762"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(ptr<sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="763"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mat_keyword[keyword_count]<sp/>=<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)malloc(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">)<sp/>*<sp/>20);</highlight></codeline>
<codeline lineno="764"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strcpy(mat_keyword[keyword_count],<sp/>ptr);</highlight></codeline>
<codeline lineno="765"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptr<sp/>=<sp/>strtok(NULL,<sp/>delim);</highlight></codeline>
<codeline lineno="766"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>keyword_count++;</highlight></codeline>
<codeline lineno="767"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="768"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cohele_mat[nmat].<ref refid="structmat__cohelement__t_1af10a9fa01cb90333299f9aedd0e4a181" kindref="member">cons</ref><sp/>=<sp/>COH_EM_HET;</highlight></codeline>
<codeline lineno="769"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cohele_mat[nmat].<ref refid="structmat__cohelement__t_1aadcf8147cd78389b6a462bde83e7bec9" kindref="member">mat</ref><sp/><sp/>=<sp/>(<ref refid="unionany__cohmat__type" kindref="compound">any_cohmat_type</ref>*)malloc(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="unionany__cohmat__type" kindref="compound">any_cohmat_type</ref>));</highlight></codeline>
<codeline lineno="770"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*initialize<sp/>the<sp/>parameters<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="771"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cohele_mat[nmat].<ref refid="structmat__cohelement__t_1aadcf8147cd78389b6a462bde83e7bec9" kindref="member">mat</ref>-&gt;<ref refid="unionany__cohmat__type_1add3298c89ae5060a0ba05405ef0b5e50" kindref="member">EM_het</ref>.<ref refid="structsolidcohhet___e_m__t_1a2012363918f3e6b9833567dfef6c22f1" kindref="member">pn</ref><sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="772"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cohele_mat[nmat].<ref refid="structmat__cohelement__t_1aadcf8147cd78389b6a462bde83e7bec9" kindref="member">mat</ref>-&gt;<ref refid="unionany__cohmat__type_1add3298c89ae5060a0ba05405ef0b5e50" kindref="member">EM_het</ref>.<ref refid="structsolidcohhet___e_m__t_1aa70c5b55bd505e62c2ba18dc264b5259" kindref="member">pt</ref><sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="773"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>ten</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="774"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cohele_mat[nmat].<ref refid="structmat__cohelement__t_1aadcf8147cd78389b6a462bde83e7bec9" kindref="member">mat</ref>-&gt;<ref refid="unionany__cohmat__type_1add3298c89ae5060a0ba05405ef0b5e50" kindref="member">EM_het</ref>.<ref refid="structsolidcohhet___e_m__t_1a500d85dc4ceda517431b5cb4236fece9" kindref="member">ten</ref><sp/><sp/><sp/><sp/>=<sp/>(Real*)malloc(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(Real)<sp/>*<sp/>2);</highlight></codeline>
<codeline lineno="775"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cohele_mat[nmat].<ref refid="structmat__cohelement__t_1aadcf8147cd78389b6a462bde83e7bec9" kindref="member">mat</ref>-&gt;<ref refid="unionany__cohmat__type_1add3298c89ae5060a0ba05405ef0b5e50" kindref="member">EM_het</ref>.<ref refid="structsolidcohhet___e_m__t_1a500d85dc4ceda517431b5cb4236fece9" kindref="member">ten</ref>[0]<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="776"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cohele_mat[nmat].<ref refid="structmat__cohelement__t_1aadcf8147cd78389b6a462bde83e7bec9" kindref="member">mat</ref>-&gt;<ref refid="unionany__cohmat__type_1add3298c89ae5060a0ba05405ef0b5e50" kindref="member">EM_het</ref>.<ref refid="structsolidcohhet___e_m__t_1a500d85dc4ceda517431b5cb4236fece9" kindref="member">ten</ref>[1]<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="777"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>coh</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="778"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cohele_mat[nmat].<ref refid="structmat__cohelement__t_1aadcf8147cd78389b6a462bde83e7bec9" kindref="member">mat</ref>-&gt;<ref refid="unionany__cohmat__type_1add3298c89ae5060a0ba05405ef0b5e50" kindref="member">EM_het</ref>.<ref refid="structsolidcohhet___e_m__t_1a5d587cda6734f31d2dd5d6176a8c6f91" kindref="member">coh</ref><sp/><sp/><sp/><sp/>=<sp/>(Real*)malloc(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(Real)<sp/>*<sp/>2);</highlight></codeline>
<codeline lineno="779"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cohele_mat[nmat].<ref refid="structmat__cohelement__t_1aadcf8147cd78389b6a462bde83e7bec9" kindref="member">mat</ref>-&gt;<ref refid="unionany__cohmat__type_1add3298c89ae5060a0ba05405ef0b5e50" kindref="member">EM_het</ref>.<ref refid="structsolidcohhet___e_m__t_1a5d587cda6734f31d2dd5d6176a8c6f91" kindref="member">coh</ref>[0]<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="780"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cohele_mat[nmat].<ref refid="structmat__cohelement__t_1aadcf8147cd78389b6a462bde83e7bec9" kindref="member">mat</ref>-&gt;<ref refid="unionany__cohmat__type_1add3298c89ae5060a0ba05405ef0b5e50" kindref="member">EM_het</ref>.<ref refid="structsolidcohhet___e_m__t_1a5d587cda6734f31d2dd5d6176a8c6f91" kindref="member">coh</ref>[1]<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="781"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>fri</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="782"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cohele_mat[nmat].<ref refid="structmat__cohelement__t_1aadcf8147cd78389b6a462bde83e7bec9" kindref="member">mat</ref>-&gt;<ref refid="unionany__cohmat__type_1add3298c89ae5060a0ba05405ef0b5e50" kindref="member">EM_het</ref>.<ref refid="structsolidcohhet___e_m__t_1a7750b33c9ae1df281c66d12a6b5576da" kindref="member">fri</ref><sp/><sp/><sp/><sp/>=<sp/>(Real*)malloc(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(Real)<sp/>*<sp/>2);</highlight></codeline>
<codeline lineno="783"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cohele_mat[nmat].<ref refid="structmat__cohelement__t_1aadcf8147cd78389b6a462bde83e7bec9" kindref="member">mat</ref>-&gt;<ref refid="unionany__cohmat__type_1add3298c89ae5060a0ba05405ef0b5e50" kindref="member">EM_het</ref>.<ref refid="structsolidcohhet___e_m__t_1a7750b33c9ae1df281c66d12a6b5576da" kindref="member">fri</ref>[0]<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="784"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cohele_mat[nmat].<ref refid="structmat__cohelement__t_1aadcf8147cd78389b6a462bde83e7bec9" kindref="member">mat</ref>-&gt;<ref refid="unionany__cohmat__type_1add3298c89ae5060a0ba05405ef0b5e50" kindref="member">EM_het</ref>.<ref refid="structsolidcohhet___e_m__t_1a7750b33c9ae1df281c66d12a6b5576da" kindref="member">fri</ref>[1]<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="785"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>GI</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="786"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cohele_mat[nmat].<ref refid="structmat__cohelement__t_1aadcf8147cd78389b6a462bde83e7bec9" kindref="member">mat</ref>-&gt;<ref refid="unionany__cohmat__type_1add3298c89ae5060a0ba05405ef0b5e50" kindref="member">EM_het</ref>.<ref refid="structsolidcohhet___e_m__t_1a9714ec177ae46f736682f2bcc1bef51e" kindref="member">GI</ref><sp/><sp/><sp/><sp/>=<sp/>(Real*)malloc(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(Real)<sp/>*<sp/>2);</highlight></codeline>
<codeline lineno="787"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cohele_mat[nmat].<ref refid="structmat__cohelement__t_1aadcf8147cd78389b6a462bde83e7bec9" kindref="member">mat</ref>-&gt;<ref refid="unionany__cohmat__type_1add3298c89ae5060a0ba05405ef0b5e50" kindref="member">EM_het</ref>.<ref refid="structsolidcohhet___e_m__t_1a9714ec177ae46f736682f2bcc1bef51e" kindref="member">GI</ref>[0]<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="788"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cohele_mat[nmat].<ref refid="structmat__cohelement__t_1aadcf8147cd78389b6a462bde83e7bec9" kindref="member">mat</ref>-&gt;<ref refid="unionany__cohmat__type_1add3298c89ae5060a0ba05405ef0b5e50" kindref="member">EM_het</ref>.<ref refid="structsolidcohhet___e_m__t_1a9714ec177ae46f736682f2bcc1bef51e" kindref="member">GI</ref>[1]<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="789"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>GII</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="790"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cohele_mat[nmat].<ref refid="structmat__cohelement__t_1aadcf8147cd78389b6a462bde83e7bec9" kindref="member">mat</ref>-&gt;<ref refid="unionany__cohmat__type_1add3298c89ae5060a0ba05405ef0b5e50" kindref="member">EM_het</ref>.<ref refid="structsolidcohhet___e_m__t_1ac5f9553eefb1fa03a875cec16fad1ad3" kindref="member">GII</ref><sp/><sp/><sp/><sp/>=<sp/>(Real*)malloc(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(Real)<sp/>*<sp/>2);</highlight></codeline>
<codeline lineno="791"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cohele_mat[nmat].<ref refid="structmat__cohelement__t_1aadcf8147cd78389b6a462bde83e7bec9" kindref="member">mat</ref>-&gt;<ref refid="unionany__cohmat__type_1add3298c89ae5060a0ba05405ef0b5e50" kindref="member">EM_het</ref>.<ref refid="structsolidcohhet___e_m__t_1ac5f9553eefb1fa03a875cec16fad1ad3" kindref="member">GII</ref>[0]<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="792"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cohele_mat[nmat].<ref refid="structmat__cohelement__t_1aadcf8147cd78389b6a462bde83e7bec9" kindref="member">mat</ref>-&gt;<ref refid="unionany__cohmat__type_1add3298c89ae5060a0ba05405ef0b5e50" kindref="member">EM_het</ref>.<ref refid="structsolidcohhet___e_m__t_1ac5f9553eefb1fa03a875cec16fad1ad3" kindref="member">GII</ref>[1]<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="793"><highlight class="normal"></highlight></codeline>
<codeline lineno="794"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>keyword_count;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="795"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strnicmp(mat_keyword[i],<sp/></highlight><highlight class="stringliteral">&quot;tension&quot;</highlight><highlight class="normal">,<sp/>3)<sp/>==<sp/>0)<sp/></highlight><highlight class="comment">/*<sp/>tension<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="796"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="797"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cohele_mat[nmat].<ref refid="structmat__cohelement__t_1aadcf8147cd78389b6a462bde83e7bec9" kindref="member">mat</ref>-&gt;<ref refid="unionany__cohmat__type_1add3298c89ae5060a0ba05405ef0b5e50" kindref="member">EM_het</ref>.<ref refid="structsolidcohhet___e_m__t_1a500d85dc4ceda517431b5cb4236fece9" kindref="member">ten</ref>[0]<sp/>=<sp/>strtod(mat_keyword[i<sp/>+<sp/>1],<sp/>NULL);</highlight></codeline>
<codeline lineno="798"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cohele_mat[nmat].<ref refid="structmat__cohelement__t_1aadcf8147cd78389b6a462bde83e7bec9" kindref="member">mat</ref>-&gt;<ref refid="unionany__cohmat__type_1add3298c89ae5060a0ba05405ef0b5e50" kindref="member">EM_het</ref>.<ref refid="structsolidcohhet___e_m__t_1a500d85dc4ceda517431b5cb4236fece9" kindref="member">ten</ref>[1]<sp/>=<sp/>strtod(mat_keyword[i<sp/>+<sp/>2],<sp/>NULL);</highlight></codeline>
<codeline lineno="799"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>i<sp/>+<sp/>2;</highlight></codeline>
<codeline lineno="800"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strnicmp(mat_keyword[i],<sp/></highlight><highlight class="stringliteral">&quot;cohesion&quot;</highlight><highlight class="normal">,<sp/>3)<sp/>==<sp/>0)<sp/></highlight><highlight class="comment">/*<sp/>cohesion<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="801"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="802"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cohele_mat[nmat].<ref refid="structmat__cohelement__t_1aadcf8147cd78389b6a462bde83e7bec9" kindref="member">mat</ref>-&gt;<ref refid="unionany__cohmat__type_1add3298c89ae5060a0ba05405ef0b5e50" kindref="member">EM_het</ref>.<ref refid="structsolidcohhet___e_m__t_1a5d587cda6734f31d2dd5d6176a8c6f91" kindref="member">coh</ref>[0]<sp/>=<sp/>strtod(mat_keyword[i<sp/>+<sp/>1],<sp/>NULL);</highlight></codeline>
<codeline lineno="803"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cohele_mat[nmat].<ref refid="structmat__cohelement__t_1aadcf8147cd78389b6a462bde83e7bec9" kindref="member">mat</ref>-&gt;<ref refid="unionany__cohmat__type_1add3298c89ae5060a0ba05405ef0b5e50" kindref="member">EM_het</ref>.<ref refid="structsolidcohhet___e_m__t_1a5d587cda6734f31d2dd5d6176a8c6f91" kindref="member">coh</ref>[1]<sp/>=<sp/>strtod(mat_keyword[i<sp/>+<sp/>2],<sp/>NULL);</highlight></codeline>
<codeline lineno="804"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>i<sp/>+<sp/>2;</highlight></codeline>
<codeline lineno="805"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(stricmp(mat_keyword[i],<sp/></highlight><highlight class="stringliteral">&quot;GI&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)<sp/></highlight><highlight class="comment">/*<sp/>GI<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="806"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="807"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cohele_mat[nmat].<ref refid="structmat__cohelement__t_1aadcf8147cd78389b6a462bde83e7bec9" kindref="member">mat</ref>-&gt;<ref refid="unionany__cohmat__type_1add3298c89ae5060a0ba05405ef0b5e50" kindref="member">EM_het</ref>.<ref refid="structsolidcohhet___e_m__t_1a9714ec177ae46f736682f2bcc1bef51e" kindref="member">GI</ref>[0]<sp/>=<sp/>strtod(mat_keyword[i<sp/>+<sp/>1],<sp/>NULL);</highlight></codeline>
<codeline lineno="808"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cohele_mat[nmat].<ref refid="structmat__cohelement__t_1aadcf8147cd78389b6a462bde83e7bec9" kindref="member">mat</ref>-&gt;<ref refid="unionany__cohmat__type_1add3298c89ae5060a0ba05405ef0b5e50" kindref="member">EM_het</ref>.<ref refid="structsolidcohhet___e_m__t_1a9714ec177ae46f736682f2bcc1bef51e" kindref="member">GI</ref>[1]<sp/>=<sp/>strtod(mat_keyword[i<sp/>+<sp/>2],<sp/>NULL);</highlight></codeline>
<codeline lineno="809"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>i<sp/>+<sp/>2;</highlight></codeline>
<codeline lineno="810"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(stricmp(mat_keyword[i],<sp/></highlight><highlight class="stringliteral">&quot;GII&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)<sp/></highlight><highlight class="comment">/*<sp/>GII<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="811"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="812"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cohele_mat[nmat].<ref refid="structmat__cohelement__t_1aadcf8147cd78389b6a462bde83e7bec9" kindref="member">mat</ref>-&gt;<ref refid="unionany__cohmat__type_1add3298c89ae5060a0ba05405ef0b5e50" kindref="member">EM_het</ref>.<ref refid="structsolidcohhet___e_m__t_1ac5f9553eefb1fa03a875cec16fad1ad3" kindref="member">GII</ref>[0]<sp/>=<sp/>strtod(mat_keyword[i<sp/>+<sp/>1],<sp/>NULL);</highlight></codeline>
<codeline lineno="813"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cohele_mat[nmat].<ref refid="structmat__cohelement__t_1aadcf8147cd78389b6a462bde83e7bec9" kindref="member">mat</ref>-&gt;<ref refid="unionany__cohmat__type_1add3298c89ae5060a0ba05405ef0b5e50" kindref="member">EM_het</ref>.<ref refid="structsolidcohhet___e_m__t_1ac5f9553eefb1fa03a875cec16fad1ad3" kindref="member">GII</ref>[1]<sp/>=<sp/>strtod(mat_keyword[i<sp/>+<sp/>2],<sp/>NULL);</highlight></codeline>
<codeline lineno="814"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>i<sp/>+<sp/>2;</highlight></codeline>
<codeline lineno="815"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strnicmp(mat_keyword[i],<sp/></highlight><highlight class="stringliteral">&quot;friction&quot;</highlight><highlight class="normal">,<sp/>3)<sp/>==<sp/>0)<sp/></highlight><highlight class="comment">/*<sp/>friction<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="816"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="817"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cohele_mat[nmat].<ref refid="structmat__cohelement__t_1aadcf8147cd78389b6a462bde83e7bec9" kindref="member">mat</ref>-&gt;<ref refid="unionany__cohmat__type_1add3298c89ae5060a0ba05405ef0b5e50" kindref="member">EM_het</ref>.<ref refid="structsolidcohhet___e_m__t_1a7750b33c9ae1df281c66d12a6b5576da" kindref="member">fri</ref>[0]<sp/>=<sp/>strtod(mat_keyword[i<sp/>+<sp/>1],<sp/>NULL);</highlight></codeline>
<codeline lineno="818"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cohele_mat[nmat].<ref refid="structmat__cohelement__t_1aadcf8147cd78389b6a462bde83e7bec9" kindref="member">mat</ref>-&gt;<ref refid="unionany__cohmat__type_1add3298c89ae5060a0ba05405ef0b5e50" kindref="member">EM_het</ref>.<ref refid="structsolidcohhet___e_m__t_1a7750b33c9ae1df281c66d12a6b5576da" kindref="member">fri</ref>[1]<sp/>=<sp/>strtod(mat_keyword[i<sp/>+<sp/>2],<sp/>NULL);</highlight></codeline>
<codeline lineno="819"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>i<sp/>+<sp/>2;</highlight></codeline>
<codeline lineno="820"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strnicmp(mat_keyword[i],<sp/></highlight><highlight class="stringliteral">&quot;#&quot;</highlight><highlight class="normal">,<sp/>1)<sp/>==<sp/>0)<sp/></highlight><highlight class="comment">/*<sp/>comments<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="821"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="822"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="823"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="824"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dump_message_keyword(</highlight><highlight class="stringliteral">&quot;Error:<sp/>no<sp/>found<sp/>keyword:<sp/>&quot;</highlight><highlight class="normal">,<sp/>mat_keyword[i]);</highlight></codeline>
<codeline lineno="825"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exit(-1);</highlight></codeline>
<codeline lineno="826"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="827"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="828"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nmat++;</highlight></codeline>
<codeline lineno="829"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!stricmp(cons,<sp/></highlight><highlight class="stringliteral">&quot;EM_ani&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="830"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>read<sp/>a<sp/>line<sp/>to<sp/>avoid<sp/>\n<sp/>at<sp/>the<sp/>end<sp/>of<sp/>the<sp/>line<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="831"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ret<sp/>=<sp/>fscanf(general-&gt;InputFile,<sp/></highlight><highlight class="stringliteral">&quot;%[^\n]%*c&quot;</highlight><highlight class="normal">,<sp/>sn);</highlight></codeline>
<codeline lineno="832"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>split<sp/>the<sp/>string<sp/>into<sp/>strings<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="833"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>ptr<sp/>=<sp/>strtok(sn,<sp/>delim);</highlight></codeline>
<codeline lineno="834"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(ptr<sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="835"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mat_keyword[keyword_count]<sp/>=<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)malloc(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">)<sp/>*<sp/>20);</highlight></codeline>
<codeline lineno="836"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strcpy(mat_keyword[keyword_count],<sp/>ptr);</highlight></codeline>
<codeline lineno="837"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptr<sp/>=<sp/>strtok(NULL,<sp/>delim);</highlight></codeline>
<codeline lineno="838"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>keyword_count++;</highlight></codeline>
<codeline lineno="839"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="840"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cohele_mat[nmat].<ref refid="structmat__cohelement__t_1af10a9fa01cb90333299f9aedd0e4a181" kindref="member">cons</ref><sp/>=<sp/>COH_EM_ANI;</highlight></codeline>
<codeline lineno="841"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cohele_mat[nmat].<ref refid="structmat__cohelement__t_1aadcf8147cd78389b6a462bde83e7bec9" kindref="member">mat</ref><sp/><sp/>=<sp/>(<ref refid="unionany__cohmat__type" kindref="compound">any_cohmat_type</ref>*)malloc(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="unionany__cohmat__type" kindref="compound">any_cohmat_type</ref>));</highlight></codeline>
<codeline lineno="842"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*initialize<sp/>the<sp/>parameters<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="843"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cohele_mat[nmat].<ref refid="structmat__cohelement__t_1aadcf8147cd78389b6a462bde83e7bec9" kindref="member">mat</ref>-&gt;<ref refid="unionany__cohmat__type_1a94f67ab5aa017cf697a688870bb0c616" kindref="member">EM_ani</ref>.<ref refid="structsolidcohani___e_m__t_1a2012363918f3e6b9833567dfef6c22f1" kindref="member">pn</ref><sp/><sp/><sp/><sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="844"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cohele_mat[nmat].<ref refid="structmat__cohelement__t_1aadcf8147cd78389b6a462bde83e7bec9" kindref="member">mat</ref>-&gt;<ref refid="unionany__cohmat__type_1a94f67ab5aa017cf697a688870bb0c616" kindref="member">EM_ani</ref>.<ref refid="structsolidcohani___e_m__t_1aa70c5b55bd505e62c2ba18dc264b5259" kindref="member">pt</ref><sp/><sp/><sp/><sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="845"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cohele_mat[nmat].<ref refid="structmat__cohelement__t_1aadcf8147cd78389b6a462bde83e7bec9" kindref="member">mat</ref>-&gt;<ref refid="unionany__cohmat__type_1a94f67ab5aa017cf697a688870bb0c616" kindref="member">EM_ani</ref>.<ref refid="structsolidcohani___e_m__t_1a52bb4c1c2469def4afdc7c9b879d91b1" kindref="member">power</ref><sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="846"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cohele_mat[nmat].<ref refid="structmat__cohelement__t_1aadcf8147cd78389b6a462bde83e7bec9" kindref="member">mat</ref>-&gt;<ref refid="unionany__cohmat__type_1a94f67ab5aa017cf697a688870bb0c616" kindref="member">EM_ani</ref>.<ref refid="structsolidcohani___e_m__t_1a5bfc7d1448bac91d1eec23e44354af76" kindref="member">dip</ref><sp/><sp/><sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="847"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>ten</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="848"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cohele_mat[nmat].<ref refid="structmat__cohelement__t_1aadcf8147cd78389b6a462bde83e7bec9" kindref="member">mat</ref>-&gt;<ref refid="unionany__cohmat__type_1a94f67ab5aa017cf697a688870bb0c616" kindref="member">EM_ani</ref>.<ref refid="structsolidcohani___e_m__t_1a500d85dc4ceda517431b5cb4236fece9" kindref="member">ten</ref><sp/><sp/><sp/><sp/>=<sp/>(Real*)malloc(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(Real)<sp/>*<sp/>2);</highlight></codeline>
<codeline lineno="849"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cohele_mat[nmat].<ref refid="structmat__cohelement__t_1aadcf8147cd78389b6a462bde83e7bec9" kindref="member">mat</ref>-&gt;<ref refid="unionany__cohmat__type_1a94f67ab5aa017cf697a688870bb0c616" kindref="member">EM_ani</ref>.<ref refid="structsolidcohani___e_m__t_1a500d85dc4ceda517431b5cb4236fece9" kindref="member">ten</ref>[0]<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="850"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cohele_mat[nmat].<ref refid="structmat__cohelement__t_1aadcf8147cd78389b6a462bde83e7bec9" kindref="member">mat</ref>-&gt;<ref refid="unionany__cohmat__type_1a94f67ab5aa017cf697a688870bb0c616" kindref="member">EM_ani</ref>.<ref refid="structsolidcohani___e_m__t_1a500d85dc4ceda517431b5cb4236fece9" kindref="member">ten</ref>[1]<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="851"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>coh</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="852"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cohele_mat[nmat].<ref refid="structmat__cohelement__t_1aadcf8147cd78389b6a462bde83e7bec9" kindref="member">mat</ref>-&gt;<ref refid="unionany__cohmat__type_1a94f67ab5aa017cf697a688870bb0c616" kindref="member">EM_ani</ref>.<ref refid="structsolidcohani___e_m__t_1a5d587cda6734f31d2dd5d6176a8c6f91" kindref="member">coh</ref><sp/><sp/><sp/><sp/>=<sp/>(Real*)malloc(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(Real)<sp/>*<sp/>2);</highlight></codeline>
<codeline lineno="853"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cohele_mat[nmat].<ref refid="structmat__cohelement__t_1aadcf8147cd78389b6a462bde83e7bec9" kindref="member">mat</ref>-&gt;<ref refid="unionany__cohmat__type_1a94f67ab5aa017cf697a688870bb0c616" kindref="member">EM_ani</ref>.<ref refid="structsolidcohani___e_m__t_1a5d587cda6734f31d2dd5d6176a8c6f91" kindref="member">coh</ref>[0]<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="854"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cohele_mat[nmat].<ref refid="structmat__cohelement__t_1aadcf8147cd78389b6a462bde83e7bec9" kindref="member">mat</ref>-&gt;<ref refid="unionany__cohmat__type_1a94f67ab5aa017cf697a688870bb0c616" kindref="member">EM_ani</ref>.<ref refid="structsolidcohani___e_m__t_1a5d587cda6734f31d2dd5d6176a8c6f91" kindref="member">coh</ref>[1]<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="855"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>fri</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="856"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cohele_mat[nmat].<ref refid="structmat__cohelement__t_1aadcf8147cd78389b6a462bde83e7bec9" kindref="member">mat</ref>-&gt;<ref refid="unionany__cohmat__type_1a94f67ab5aa017cf697a688870bb0c616" kindref="member">EM_ani</ref>.<ref refid="structsolidcohani___e_m__t_1a7750b33c9ae1df281c66d12a6b5576da" kindref="member">fri</ref><sp/><sp/><sp/><sp/>=<sp/>(Real*)malloc(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(Real)<sp/>*<sp/>2);</highlight></codeline>
<codeline lineno="857"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cohele_mat[nmat].<ref refid="structmat__cohelement__t_1aadcf8147cd78389b6a462bde83e7bec9" kindref="member">mat</ref>-&gt;<ref refid="unionany__cohmat__type_1a94f67ab5aa017cf697a688870bb0c616" kindref="member">EM_ani</ref>.<ref refid="structsolidcohani___e_m__t_1a7750b33c9ae1df281c66d12a6b5576da" kindref="member">fri</ref>[0]<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="858"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cohele_mat[nmat].<ref refid="structmat__cohelement__t_1aadcf8147cd78389b6a462bde83e7bec9" kindref="member">mat</ref>-&gt;<ref refid="unionany__cohmat__type_1a94f67ab5aa017cf697a688870bb0c616" kindref="member">EM_ani</ref>.<ref refid="structsolidcohani___e_m__t_1a7750b33c9ae1df281c66d12a6b5576da" kindref="member">fri</ref>[1]<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="859"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>GI</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="860"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cohele_mat[nmat].<ref refid="structmat__cohelement__t_1aadcf8147cd78389b6a462bde83e7bec9" kindref="member">mat</ref>-&gt;<ref refid="unionany__cohmat__type_1a94f67ab5aa017cf697a688870bb0c616" kindref="member">EM_ani</ref>.<ref refid="structsolidcohani___e_m__t_1a9714ec177ae46f736682f2bcc1bef51e" kindref="member">GI</ref><sp/><sp/><sp/><sp/>=<sp/>(Real*)malloc(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(Real)<sp/>*<sp/>2);</highlight></codeline>
<codeline lineno="861"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cohele_mat[nmat].<ref refid="structmat__cohelement__t_1aadcf8147cd78389b6a462bde83e7bec9" kindref="member">mat</ref>-&gt;<ref refid="unionany__cohmat__type_1a94f67ab5aa017cf697a688870bb0c616" kindref="member">EM_ani</ref>.<ref refid="structsolidcohani___e_m__t_1a9714ec177ae46f736682f2bcc1bef51e" kindref="member">GI</ref>[0]<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="862"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cohele_mat[nmat].<ref refid="structmat__cohelement__t_1aadcf8147cd78389b6a462bde83e7bec9" kindref="member">mat</ref>-&gt;<ref refid="unionany__cohmat__type_1a94f67ab5aa017cf697a688870bb0c616" kindref="member">EM_ani</ref>.<ref refid="structsolidcohani___e_m__t_1a9714ec177ae46f736682f2bcc1bef51e" kindref="member">GI</ref>[1]<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="863"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>GII</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="864"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cohele_mat[nmat].<ref refid="structmat__cohelement__t_1aadcf8147cd78389b6a462bde83e7bec9" kindref="member">mat</ref>-&gt;<ref refid="unionany__cohmat__type_1a94f67ab5aa017cf697a688870bb0c616" kindref="member">EM_ani</ref>.<ref refid="structsolidcohani___e_m__t_1ac5f9553eefb1fa03a875cec16fad1ad3" kindref="member">GII</ref><sp/><sp/><sp/><sp/>=<sp/>(Real*)malloc(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(Real)<sp/>*<sp/>2);</highlight></codeline>
<codeline lineno="865"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cohele_mat[nmat].<ref refid="structmat__cohelement__t_1aadcf8147cd78389b6a462bde83e7bec9" kindref="member">mat</ref>-&gt;<ref refid="unionany__cohmat__type_1a94f67ab5aa017cf697a688870bb0c616" kindref="member">EM_ani</ref>.<ref refid="structsolidcohani___e_m__t_1ac5f9553eefb1fa03a875cec16fad1ad3" kindref="member">GII</ref>[0]<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="866"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cohele_mat[nmat].<ref refid="structmat__cohelement__t_1aadcf8147cd78389b6a462bde83e7bec9" kindref="member">mat</ref>-&gt;<ref refid="unionany__cohmat__type_1a94f67ab5aa017cf697a688870bb0c616" kindref="member">EM_ani</ref>.<ref refid="structsolidcohani___e_m__t_1ac5f9553eefb1fa03a875cec16fad1ad3" kindref="member">GII</ref>[1]<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="867"><highlight class="normal"></highlight></codeline>
<codeline lineno="868"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>keyword_count;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="869"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strnicmp(mat_keyword[i],<sp/></highlight><highlight class="stringliteral">&quot;tension&quot;</highlight><highlight class="normal">,<sp/>3)<sp/>==<sp/>0)<sp/></highlight><highlight class="comment">/*<sp/>tension<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="870"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="871"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cohele_mat[nmat].<ref refid="structmat__cohelement__t_1aadcf8147cd78389b6a462bde83e7bec9" kindref="member">mat</ref>-&gt;<ref refid="unionany__cohmat__type_1a94f67ab5aa017cf697a688870bb0c616" kindref="member">EM_ani</ref>.<ref refid="structsolidcohani___e_m__t_1a500d85dc4ceda517431b5cb4236fece9" kindref="member">ten</ref>[0]<sp/>=<sp/>strtod(mat_keyword[i<sp/>+<sp/>1],<sp/>NULL);</highlight></codeline>
<codeline lineno="872"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cohele_mat[nmat].<ref refid="structmat__cohelement__t_1aadcf8147cd78389b6a462bde83e7bec9" kindref="member">mat</ref>-&gt;<ref refid="unionany__cohmat__type_1a94f67ab5aa017cf697a688870bb0c616" kindref="member">EM_ani</ref>.<ref refid="structsolidcohani___e_m__t_1a500d85dc4ceda517431b5cb4236fece9" kindref="member">ten</ref>[1]<sp/>=<sp/>strtod(mat_keyword[i<sp/>+<sp/>2],<sp/>NULL);</highlight></codeline>
<codeline lineno="873"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>i<sp/>+<sp/>2;</highlight></codeline>
<codeline lineno="874"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strnicmp(mat_keyword[i],<sp/></highlight><highlight class="stringliteral">&quot;cohesion&quot;</highlight><highlight class="normal">,<sp/>3)<sp/>==<sp/>0)<sp/></highlight><highlight class="comment">/*<sp/>cohesion<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="875"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="876"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cohele_mat[nmat].<ref refid="structmat__cohelement__t_1aadcf8147cd78389b6a462bde83e7bec9" kindref="member">mat</ref>-&gt;<ref refid="unionany__cohmat__type_1a94f67ab5aa017cf697a688870bb0c616" kindref="member">EM_ani</ref>.<ref refid="structsolidcohani___e_m__t_1a5d587cda6734f31d2dd5d6176a8c6f91" kindref="member">coh</ref>[0]<sp/>=<sp/>strtod(mat_keyword[i<sp/>+<sp/>1],<sp/>NULL);</highlight></codeline>
<codeline lineno="877"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cohele_mat[nmat].<ref refid="structmat__cohelement__t_1aadcf8147cd78389b6a462bde83e7bec9" kindref="member">mat</ref>-&gt;<ref refid="unionany__cohmat__type_1a94f67ab5aa017cf697a688870bb0c616" kindref="member">EM_ani</ref>.<ref refid="structsolidcohani___e_m__t_1a5d587cda6734f31d2dd5d6176a8c6f91" kindref="member">coh</ref>[1]<sp/>=<sp/>strtod(mat_keyword[i<sp/>+<sp/>2],<sp/>NULL);</highlight></codeline>
<codeline lineno="878"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>i<sp/>+<sp/>2;</highlight></codeline>
<codeline lineno="879"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strnicmp(mat_keyword[i],<sp/></highlight><highlight class="stringliteral">&quot;dip&quot;</highlight><highlight class="normal">,<sp/>3)<sp/>==<sp/>0)<sp/></highlight><highlight class="comment">/*<sp/>dip<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="880"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="881"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cohele_mat[nmat].<ref refid="structmat__cohelement__t_1aadcf8147cd78389b6a462bde83e7bec9" kindref="member">mat</ref>-&gt;<ref refid="unionany__cohmat__type_1a94f67ab5aa017cf697a688870bb0c616" kindref="member">EM_ani</ref>.<ref refid="structsolidcohani___e_m__t_1a5bfc7d1448bac91d1eec23e44354af76" kindref="member">dip</ref><sp/>=<sp/>strtod(mat_keyword[i<sp/>+<sp/>1],<sp/>NULL);</highlight></codeline>
<codeline lineno="882"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>i<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="883"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strnicmp(mat_keyword[i],<sp/></highlight><highlight class="stringliteral">&quot;power&quot;</highlight><highlight class="normal">,<sp/>3)<sp/>==<sp/>0)<sp/></highlight><highlight class="comment">/*<sp/>power<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="884"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="885"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cohele_mat[nmat].<ref refid="structmat__cohelement__t_1aadcf8147cd78389b6a462bde83e7bec9" kindref="member">mat</ref>-&gt;<ref refid="unionany__cohmat__type_1a94f67ab5aa017cf697a688870bb0c616" kindref="member">EM_ani</ref>.<ref refid="structsolidcohani___e_m__t_1a52bb4c1c2469def4afdc7c9b879d91b1" kindref="member">power</ref><sp/>=<sp/>strtod(mat_keyword[i<sp/>+<sp/>1],<sp/>NULL);</highlight></codeline>
<codeline lineno="886"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>i<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="887"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(stricmp(mat_keyword[i],<sp/></highlight><highlight class="stringliteral">&quot;GI&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)<sp/></highlight><highlight class="comment">/*<sp/>GI<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="888"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="889"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cohele_mat[nmat].<ref refid="structmat__cohelement__t_1aadcf8147cd78389b6a462bde83e7bec9" kindref="member">mat</ref>-&gt;<ref refid="unionany__cohmat__type_1a94f67ab5aa017cf697a688870bb0c616" kindref="member">EM_ani</ref>.<ref refid="structsolidcohani___e_m__t_1a9714ec177ae46f736682f2bcc1bef51e" kindref="member">GI</ref>[0]<sp/>=<sp/>strtod(mat_keyword[i<sp/>+<sp/>1],<sp/>NULL);</highlight></codeline>
<codeline lineno="890"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cohele_mat[nmat].<ref refid="structmat__cohelement__t_1aadcf8147cd78389b6a462bde83e7bec9" kindref="member">mat</ref>-&gt;<ref refid="unionany__cohmat__type_1a94f67ab5aa017cf697a688870bb0c616" kindref="member">EM_ani</ref>.<ref refid="structsolidcohani___e_m__t_1a9714ec177ae46f736682f2bcc1bef51e" kindref="member">GI</ref>[1]<sp/>=<sp/>strtod(mat_keyword[i<sp/>+<sp/>2],<sp/>NULL);</highlight></codeline>
<codeline lineno="891"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>i<sp/>+<sp/>2;</highlight></codeline>
<codeline lineno="892"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(stricmp(mat_keyword[i],<sp/></highlight><highlight class="stringliteral">&quot;GII&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)<sp/></highlight><highlight class="comment">/*<sp/>GII<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="893"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="894"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cohele_mat[nmat].<ref refid="structmat__cohelement__t_1aadcf8147cd78389b6a462bde83e7bec9" kindref="member">mat</ref>-&gt;<ref refid="unionany__cohmat__type_1a94f67ab5aa017cf697a688870bb0c616" kindref="member">EM_ani</ref>.<ref refid="structsolidcohani___e_m__t_1ac5f9553eefb1fa03a875cec16fad1ad3" kindref="member">GII</ref>[0]<sp/>=<sp/>strtod(mat_keyword[i<sp/>+<sp/>1],<sp/>NULL);</highlight></codeline>
<codeline lineno="895"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cohele_mat[nmat].<ref refid="structmat__cohelement__t_1aadcf8147cd78389b6a462bde83e7bec9" kindref="member">mat</ref>-&gt;<ref refid="unionany__cohmat__type_1a94f67ab5aa017cf697a688870bb0c616" kindref="member">EM_ani</ref>.<ref refid="structsolidcohani___e_m__t_1ac5f9553eefb1fa03a875cec16fad1ad3" kindref="member">GII</ref>[1]<sp/>=<sp/>strtod(mat_keyword[i<sp/>+<sp/>2],<sp/>NULL);</highlight></codeline>
<codeline lineno="896"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>i<sp/>+<sp/>2;</highlight></codeline>
<codeline lineno="897"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strnicmp(mat_keyword[i],<sp/></highlight><highlight class="stringliteral">&quot;friction&quot;</highlight><highlight class="normal">,<sp/>3)<sp/>==<sp/>0)<sp/></highlight><highlight class="comment">/*<sp/>friction<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="898"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="899"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cohele_mat[nmat].<ref refid="structmat__cohelement__t_1aadcf8147cd78389b6a462bde83e7bec9" kindref="member">mat</ref>-&gt;<ref refid="unionany__cohmat__type_1a94f67ab5aa017cf697a688870bb0c616" kindref="member">EM_ani</ref>.<ref refid="structsolidcohani___e_m__t_1a7750b33c9ae1df281c66d12a6b5576da" kindref="member">fri</ref>[0]<sp/>=<sp/>strtod(mat_keyword[i<sp/>+<sp/>1],<sp/>NULL);</highlight></codeline>
<codeline lineno="900"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cohele_mat[nmat].<ref refid="structmat__cohelement__t_1aadcf8147cd78389b6a462bde83e7bec9" kindref="member">mat</ref>-&gt;<ref refid="unionany__cohmat__type_1a94f67ab5aa017cf697a688870bb0c616" kindref="member">EM_ani</ref>.<ref refid="structsolidcohani___e_m__t_1a7750b33c9ae1df281c66d12a6b5576da" kindref="member">fri</ref>[1]<sp/>=<sp/>strtod(mat_keyword[i<sp/>+<sp/>2],<sp/>NULL);</highlight></codeline>
<codeline lineno="901"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>i<sp/>+<sp/>2;</highlight></codeline>
<codeline lineno="902"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strnicmp(mat_keyword[i],<sp/></highlight><highlight class="stringliteral">&quot;#&quot;</highlight><highlight class="normal">,<sp/>1)<sp/>==<sp/>0)<sp/></highlight><highlight class="comment">/*<sp/>comments<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="903"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="904"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="905"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="906"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dump_message_keyword(</highlight><highlight class="stringliteral">&quot;Error:<sp/>no<sp/>found<sp/>keyword:<sp/>&quot;</highlight><highlight class="normal">,<sp/>mat_keyword[i]);</highlight></codeline>
<codeline lineno="907"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exit(-1);</highlight></codeline>
<codeline lineno="908"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="909"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="910"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nmat++;</highlight></codeline>
<codeline lineno="911"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="912"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dump_message(</highlight><highlight class="stringliteral">&quot;Error:<sp/>unrecognised<sp/>boudary<sp/>type.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="913"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="914"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="915"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="916"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="917"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(find_id<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="918"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Error:<sp/>fail<sp/>to<sp/>find<sp/>cohesive<sp/>element<sp/>group<sp/>\&quot;%s\&quot;.\n&quot;</highlight><highlight class="normal">,<sp/>keyword);</highlight></codeline>
<codeline lineno="919"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exit(-1);</highlight></codeline>
<codeline lineno="920"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="921"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="922"><highlight class="normal"><sp/><sp/><sp/><sp/>solidmat-&gt;<ref refid="struct_solid__mat__structure_1a5c97443b78faecc0f0d70a809f84ea96" kindref="member">n_cohmat</ref><sp/><sp/>=<sp/>nmat;</highlight></codeline>
<codeline lineno="923"><highlight class="normal"><sp/><sp/><sp/><sp/>solidmat-&gt;<ref refid="struct_solid__mat__structure_1aa4d8920cccd2705cc2d8d8de0033b1fd" kindref="member">cohelemat</ref><sp/>=<sp/>cohele_mat;</highlight></codeline>
<codeline lineno="924"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="materials/solid_mat_cohesive/push_cohesive_element_materials.c"/>
  </compounddef>
</doxygen>
