<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="boudary__element__insitu__force_8c" kind="file" language="C++">
    <compoundname>boudary_element_insitu_force.c</compoundname>
    <includes refid="solver_8h" local="yes">../solver.h</includes>
    <incdepgraph>
      <node id="8">
        <label>boudary/openfdem_boundary.h</label>
        <link refid="openfdem__boundary_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>../solid/solid_mechanics_contact/openfdem_solid_contact.h</label>
      </node>
      <node id="9">
        <label>../../common/openfdem_enum.h</label>
      </node>
      <node id="7">
        <label>../solid/openfdem_nodal.h</label>
      </node>
      <node id="5">
        <label>../io/dumper/openfdem_history.h</label>
      </node>
      <node id="1">
        <label>boudary/boudary_element_insitu_force.c</label>
        <link refid="boudary__element__insitu__force_8c"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>../solver.h</label>
        <link refid="solver_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>../solid/solid_mechanics_cohesive/DFN/openfdem_DFN.h</label>
      </node>
      <node id="3">
        <label>openfdem.h</label>
        <link refid="openfdem_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>../../common/openfdem_commom.h</label>
      </node>
      <node id="11">
        <label>../mesh/group/openfdem_group.h</label>
      </node>
      <node id="17">
        <label>../solid/solid_mechanics_cohesive/sesmic/openfdem_sesmic.h</label>
      </node>
      <node id="13">
        <label>../solid/solid_mechanics/openfdem_solid.h</label>
      </node>
      <node id="4">
        <label>../common/openfdem_general.h</label>
      </node>
      <node id="14">
        <label>../solid/solid_mechanics_cohesive/openfdem_solid_cohesive.h</label>
      </node>
      <node id="16">
        <label>../solid/materials/openfdem_mat.h</label>
      </node>
      <node id="18">
        <label>../geometry/openfdem_geometry.h</label>
      </node>
      <node id="6">
        <label>../mesh/openfdem_mesh_insert.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="boudary__element__insitu__force_8c_1a25675ea42d69c6ffd8cb2d2e2b28b5fb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void boudary_element_insitu_force</definition>
        <argsstring>(Boudary boudary, Element element, Nodal nodal)</argsstring>
        <name>boudary_element_insitu_force</name>
        <param>
          <type><ref refid="openfdem__boundary_8h_1a46c9ed01abc40da05d649718dcf1f738" kindref="member">Boudary</ref></type>
          <declname>boudary</declname>
        </param>
        <param>
          <type>Element</type>
          <declname>element</declname>
        </param>
        <param>
          <type>Nodal</type>
          <declname>nodal</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="boudary/boudary_element_insitu_force.c" line="4" column="6" bodyfile="boudary/boudary_element_insitu_force.c" bodystart="4" bodyend="90"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*<sp/>File<sp/><sp/><sp/>Openfdem_main_solve.c<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../solver.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="boudary__element__insitu__force_8c_1a25675ea42d69c6ffd8cb2d2e2b28b5fb" kindref="member">boudary_element_insitu_force</ref>(</highlight></codeline>
<codeline lineno="5"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_boundary__structure" kindref="compound">Boudary</ref><sp/>boudary,<sp/>Element<sp/>element,<sp/>Nodal<sp/>nodal)</highlight></codeline>
<codeline lineno="6"><highlight class="normal">{</highlight></codeline>
<codeline lineno="7"><highlight class="normal"><sp/><sp/><sp/><sp/>UInt<sp/>i,<sp/>j,<sp/>k;</highlight></codeline>
<codeline lineno="8"><highlight class="normal"><sp/><sp/><sp/><sp/>UInt<sp/>in,<sp/>jn,<sp/>kn;</highlight></codeline>
<codeline lineno="9"><highlight class="normal"><sp/><sp/><sp/><sp/>UInt<sp/>elementid;</highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/><sp/><sp/>Real<sp/>nx,<sp/>ny;</highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/><sp/>Real<sp/>Tinsitu[2][2];<sp/></highlight><highlight class="comment">/*<sp/>element<sp/>in-situ<sp/>stress<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(UInt<sp/>eleset<sp/>=<sp/>0;<sp/>eleset<sp/>&lt;<sp/>boudary-&gt;<ref refid="struct_boundary__structure_1a64083f51b32163fed34acdd386e4fedb" kindref="member">n_ele</ref>;<sp/>eleset++)</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(boudary-&gt;<ref refid="struct_boundary__structure_1ab10960d7d3d40c6a91033132c0512a37" kindref="member">ele</ref>[eleset].<ref refid="structboudary__ele__type_1a2c02d5d4974aa91518675ab1d667e17b" kindref="member">type</ref><sp/>==<sp/>STRESS)</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>À­ÕýÑ¹¸º<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Tinsitu[0][0]<sp/>=<sp/>-boudary-&gt;<ref refid="struct_boundary__structure_1ab10960d7d3d40c6a91033132c0512a37" kindref="member">ele</ref>[eleset].<ref refid="structboudary__ele__type_1a7e65ab819e0717c931d8e052b6f4976c" kindref="member">xx</ref>;</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Tinsitu[0][1]<sp/>=<sp/>-boudary-&gt;<ref refid="struct_boundary__structure_1ab10960d7d3d40c6a91033132c0512a37" kindref="member">ele</ref>[eleset].<ref refid="structboudary__ele__type_1a124420f8d64e46bf72f288c1a8852601" kindref="member">xy</ref>;</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Tinsitu[1][0]<sp/>=<sp/>Tinsitu[0][1];</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Tinsitu[1][1]<sp/>=<sp/>-boudary-&gt;<ref refid="struct_boundary__structure_1ab10960d7d3d40c6a91033132c0512a37" kindref="member">ele</ref>[eleset].<ref refid="structboudary__ele__type_1a2bdf6fba07771d98b9558f145295d559" kindref="member">yy</ref>;</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(UInt<sp/>elesetid<sp/>=<sp/>0;<sp/>elesetid<sp/>&lt;<sp/>boudary-&gt;<ref refid="struct_boundary__structure_1ab10960d7d3d40c6a91033132c0512a37" kindref="member">ele</ref>[eleset].<ref refid="structboudary__ele__type_1ab4edaa939d5469abd0e3b312d5dcbd1c" kindref="member">size</ref>;<sp/>elesetid++)</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elementid<sp/>=<sp/>boudary-&gt;<ref refid="struct_boundary__structure_1ab10960d7d3d40c6a91033132c0512a37" kindref="member">ele</ref>[eleset].<ref refid="structboudary__ele__type_1af0395c3a03c2623ae05642ecdd0fbab8" kindref="member">ele</ref>[elesetid];</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((element-&gt;ele[elementid].excavation<sp/>==<sp/>0)<sp/>&amp;&amp;<sp/>(boudary-&gt;<ref refid="struct_boundary__structure_1a769983d7f6905af6c560c1eef492dcba" kindref="member">excavation_terminate</ref><sp/>!=<sp/>1))</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Nodal<sp/>Forces<sp/>due<sp/>to<sp/>in-situ<sp/>stress<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>element-&gt;ele[elementid].n_node;<sp/>i++)</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>j<sp/>=<sp/>i<sp/>+<sp/>1;<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(j<sp/>&gt;<sp/>element-&gt;ele[elementid].n_node<sp/>-<sp/>1)j<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>k<sp/>=<sp/>j<sp/>+<sp/>1;<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(k<sp/>&gt;<sp/>element-&gt;ele[elementid].n_node<sp/>-<sp/>1)k<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>in<sp/>=<sp/>element-&gt;ele[elementid].nodes[i];</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>jn<sp/>=<sp/>element-&gt;ele[elementid].nodes[j];</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>kn<sp/>=<sp/>element-&gt;ele[elementid].nodes[k];</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nx<sp/>=<sp/>nodal-&gt;node[kn].y<sp/>-<sp/>nodal-&gt;node[jn].y;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ny<sp/>=<sp/>nodal-&gt;node[jn].x<sp/>-<sp/>nodal-&gt;node[kn].x;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nodal-&gt;total_force[in].x<sp/>+=<sp/>(Tinsitu[0][0]<sp/>*<sp/>nx<sp/>+<sp/>Tinsitu[0][1]<sp/>*<sp/>ny)<sp/>/<sp/>2.0;<sp/><sp/></highlight><highlight class="comment">/*<sp/>compression<sp/>is<sp/>negative,<sp/>shear<sp/>negative-negative<sp/>is<sp/>postive<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nodal-&gt;total_force[in].y<sp/>+=<sp/>(Tinsitu[1][0]<sp/>*<sp/>nx<sp/>+<sp/>Tinsitu[1][1]<sp/>*<sp/>ny)<sp/>/<sp/>2.0;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/>}<sp/><sp/><sp/>}<sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(boudary-&gt;<ref refid="struct_boundary__structure_1ab10960d7d3d40c6a91033132c0512a37" kindref="member">ele</ref>[eleset].<ref refid="structboudary__ele__type_1a2c02d5d4974aa91518675ab1d667e17b" kindref="member">type</ref><sp/>==<sp/>GRADIENT_X)</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(UInt<sp/>elesetid<sp/>=<sp/>0;<sp/>elesetid<sp/>&lt;<sp/>boudary-&gt;<ref refid="struct_boundary__structure_1ab10960d7d3d40c6a91033132c0512a37" kindref="member">ele</ref>[eleset].<ref refid="structboudary__ele__type_1ab4edaa939d5469abd0e3b312d5dcbd1c" kindref="member">size</ref>;<sp/>elesetid++)</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elementid<sp/>=<sp/>boudary-&gt;<ref refid="struct_boundary__structure_1ab10960d7d3d40c6a91033132c0512a37" kindref="member">ele</ref>[eleset].<ref refid="structboudary__ele__type_1af0395c3a03c2623ae05642ecdd0fbab8" kindref="member">ele</ref>[elesetid];</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Tinsitu[0][0]<sp/>=<sp/>-boudary-&gt;<ref refid="struct_boundary__structure_1ab10960d7d3d40c6a91033132c0512a37" kindref="member">ele</ref>[eleset].<ref refid="structboudary__ele__type_1a7e65ab819e0717c931d8e052b6f4976c" kindref="member">xx</ref><sp/>*<sp/>element-&gt;ele[elementid].x;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Tinsitu[0][1]<sp/>=<sp/>-boudary-&gt;<ref refid="struct_boundary__structure_1ab10960d7d3d40c6a91033132c0512a37" kindref="member">ele</ref>[eleset].<ref refid="structboudary__ele__type_1a124420f8d64e46bf72f288c1a8852601" kindref="member">xy</ref><sp/>*<sp/>element-&gt;ele[elementid].x;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Tinsitu[1][0]<sp/>=<sp/>Tinsitu[0][1];</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Tinsitu[1][1]<sp/>=<sp/>-boudary-&gt;<ref refid="struct_boundary__structure_1ab10960d7d3d40c6a91033132c0512a37" kindref="member">ele</ref>[eleset].<ref refid="structboudary__ele__type_1a2bdf6fba07771d98b9558f145295d559" kindref="member">yy</ref><sp/>*<sp/>element-&gt;ele[elementid].x;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((element-&gt;ele[elementid].excavation<sp/>==<sp/>0)<sp/>&amp;&amp;<sp/>(boudary-&gt;<ref refid="struct_boundary__structure_1a769983d7f6905af6c560c1eef492dcba" kindref="member">excavation_terminate</ref><sp/>!=<sp/>1))</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Nodal<sp/>Forces<sp/>due<sp/>to<sp/>in-situ<sp/>stress<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>element-&gt;ele[elementid].n_node;<sp/>i++)</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>j<sp/>=<sp/>i<sp/>+<sp/>1;<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(j<sp/>&gt;<sp/>element-&gt;ele[elementid].n_node<sp/>-<sp/>1)j<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>k<sp/>=<sp/>j<sp/>+<sp/>1;<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(k<sp/>&gt;<sp/>element-&gt;ele[elementid].n_node<sp/>-<sp/>1)k<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>in<sp/>=<sp/>element-&gt;ele[elementid].nodes[i];</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>jn<sp/>=<sp/>element-&gt;ele[elementid].nodes[j];</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>kn<sp/>=<sp/>element-&gt;ele[elementid].nodes[k];</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nx<sp/>=<sp/>nodal-&gt;node[kn].y<sp/>-<sp/>nodal-&gt;node[jn].y;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ny<sp/>=<sp/>nodal-&gt;node[jn].x<sp/>-<sp/>nodal-&gt;node[kn].x;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nodal-&gt;total_force[in].x<sp/>+=<sp/>(Tinsitu[0][0]<sp/>*<sp/>nx<sp/>+<sp/>Tinsitu[0][1]<sp/>*<sp/>ny)<sp/>/<sp/>2.0;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nodal-&gt;total_force[in].y<sp/>+=<sp/>(Tinsitu[1][0]<sp/>*<sp/>nx<sp/>+<sp/>Tinsitu[1][1]<sp/>*<sp/>ny)<sp/>/<sp/>2.0;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/>}<sp/><sp/><sp/>}<sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(boudary-&gt;<ref refid="struct_boundary__structure_1ab10960d7d3d40c6a91033132c0512a37" kindref="member">ele</ref>[eleset].<ref refid="structboudary__ele__type_1a2c02d5d4974aa91518675ab1d667e17b" kindref="member">type</ref><sp/>==<sp/>GRADIENT_Y)</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(UInt<sp/>elesetid<sp/>=<sp/>0;<sp/>elesetid<sp/>&lt;<sp/>boudary-&gt;<ref refid="struct_boundary__structure_1ab10960d7d3d40c6a91033132c0512a37" kindref="member">ele</ref>[eleset].<ref refid="structboudary__ele__type_1ab4edaa939d5469abd0e3b312d5dcbd1c" kindref="member">size</ref>;<sp/>elesetid++)</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elementid<sp/>=<sp/>boudary-&gt;<ref refid="struct_boundary__structure_1ab10960d7d3d40c6a91033132c0512a37" kindref="member">ele</ref>[eleset].<ref refid="structboudary__ele__type_1af0395c3a03c2623ae05642ecdd0fbab8" kindref="member">ele</ref>[elesetid];</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Tinsitu[0][0]<sp/>=<sp/>-boudary-&gt;<ref refid="struct_boundary__structure_1ab10960d7d3d40c6a91033132c0512a37" kindref="member">ele</ref>[eleset].<ref refid="structboudary__ele__type_1a7e65ab819e0717c931d8e052b6f4976c" kindref="member">xx</ref><sp/>*<sp/>element-&gt;ele[elementid].y;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Tinsitu[0][1]<sp/>=<sp/>-boudary-&gt;<ref refid="struct_boundary__structure_1ab10960d7d3d40c6a91033132c0512a37" kindref="member">ele</ref>[eleset].<ref refid="structboudary__ele__type_1a124420f8d64e46bf72f288c1a8852601" kindref="member">xy</ref><sp/>*<sp/>element-&gt;ele[elementid].y;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Tinsitu[1][0]<sp/>=<sp/>Tinsitu[0][1];</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Tinsitu[1][1]<sp/>=<sp/>-boudary-&gt;<ref refid="struct_boundary__structure_1ab10960d7d3d40c6a91033132c0512a37" kindref="member">ele</ref>[eleset].<ref refid="structboudary__ele__type_1a2bdf6fba07771d98b9558f145295d559" kindref="member">yy</ref><sp/>*<sp/>element-&gt;ele[elementid].y;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((element-&gt;ele[elementid].excavation<sp/>==<sp/>0)<sp/>&amp;&amp;<sp/>(boudary-&gt;<ref refid="struct_boundary__structure_1a769983d7f6905af6c560c1eef492dcba" kindref="member">excavation_terminate</ref><sp/>!=<sp/>1))</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Nodal<sp/>Forces<sp/>due<sp/>to<sp/>in-situ<sp/>stress<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>element-&gt;ele[elementid].n_node;<sp/>i++)</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>j<sp/>=<sp/>i<sp/>+<sp/>1;<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(j<sp/>&gt;<sp/>element-&gt;ele[elementid].n_node<sp/>-<sp/>1)j<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>k<sp/>=<sp/>j<sp/>+<sp/>1;<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(k<sp/>&gt;<sp/>element-&gt;ele[elementid].n_node<sp/>-<sp/>1)k<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>in<sp/>=<sp/>element-&gt;ele[elementid].nodes[i];</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>jn<sp/>=<sp/>element-&gt;ele[elementid].nodes[j];</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>kn<sp/>=<sp/>element-&gt;ele[elementid].nodes[k];</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nx<sp/>=<sp/>nodal-&gt;node[kn].y<sp/>-<sp/>nodal-&gt;node[jn].y;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ny<sp/>=<sp/>nodal-&gt;node[jn].x<sp/>-<sp/>nodal-&gt;node[kn].x;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nodal-&gt;total_force[in].x<sp/>+=<sp/>(Tinsitu[0][0]<sp/>*<sp/>nx<sp/>+<sp/>Tinsitu[0][1]<sp/>*<sp/>ny)<sp/>/<sp/>2.0;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nodal-&gt;total_force[in].y<sp/>+=<sp/>(Tinsitu[1][0]<sp/>*<sp/>nx<sp/>+<sp/>Tinsitu[1][1]<sp/>*<sp/>ny)<sp/>/<sp/>2.0;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/>}<sp/><sp/><sp/>}<sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="90"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="boudary/boudary_element_insitu_force.c"/>
  </compounddef>
</doxygen>
