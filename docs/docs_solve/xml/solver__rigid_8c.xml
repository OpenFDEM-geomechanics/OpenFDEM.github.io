<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="solver__rigid_8c" kind="file" language="C++">
    <compoundname>solver_rigid.c</compoundname>
    <includes refid="solver_8h" local="yes">solver.h</includes>
    <includes local="yes">../common/openfdem_math.h</includes>
    <incdepgraph>
      <node id="8">
        <label>boudary/openfdem_boundary.h</label>
        <link refid="openfdem__boundary_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>../solid/solid_mechanics_contact/openfdem_solid_contact.h</label>
      </node>
      <node id="9">
        <label>../../common/openfdem_enum.h</label>
      </node>
      <node id="7">
        <label>../solid/openfdem_nodal.h</label>
      </node>
      <node id="5">
        <label>../io/dumper/openfdem_history.h</label>
      </node>
      <node id="2">
        <label>solver.h</label>
        <link refid="solver_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>../solid/solid_mechanics_cohesive/DFN/openfdem_DFN.h</label>
      </node>
      <node id="3">
        <label>openfdem.h</label>
        <link refid="openfdem_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>solver_rigid.c</label>
        <link refid="solver__rigid_8c"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>../../common/openfdem_commom.h</label>
      </node>
      <node id="19">
        <label>../common/openfdem_math.h</label>
      </node>
      <node id="11">
        <label>../mesh/group/openfdem_group.h</label>
      </node>
      <node id="17">
        <label>../solid/solid_mechanics_cohesive/sesmic/openfdem_sesmic.h</label>
      </node>
      <node id="13">
        <label>../solid/solid_mechanics/openfdem_solid.h</label>
      </node>
      <node id="4">
        <label>../common/openfdem_general.h</label>
      </node>
      <node id="14">
        <label>../solid/solid_mechanics_cohesive/openfdem_solid_cohesive.h</label>
      </node>
      <node id="16">
        <label>../solid/materials/openfdem_mat.h</label>
      </node>
      <node id="18">
        <label>../geometry/openfdem_geometry.h</label>
      </node>
      <node id="6">
        <label>../mesh/openfdem_mesh_insert.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="solver__rigid_8c_1af4fab905f52d133e681eaf034070f253" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void solver_rigid</definition>
        <argsstring>(Element element, double TimeStep, double PropElementDensity, long ele_mat_id, node_type *node, of_vector *NodalContactForce, of_vector *NodalCurrentVelocity)</argsstring>
        <name>solver_rigid</name>
        <param>
          <type>Element</type>
          <declname>element</declname>
        </param>
        <param>
          <type>double</type>
          <declname>TimeStep</declname>
        </param>
        <param>
          <type>double</type>
          <declname>PropElementDensity</declname>
        </param>
        <param>
          <type>long</type>
          <declname>ele_mat_id</declname>
        </param>
        <param>
          <type>node_type *</type>
          <declname>node</declname>
        </param>
        <param>
          <type>of_vector *</type>
          <declname>NodalContactForce</declname>
        </param>
        <param>
          <type>of_vector *</type>
          <declname>NodalCurrentVelocity</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="solver_rigid.c" line="7" column="6" bodyfile="solver_rigid.c" bodystart="7" bodyend="82"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*<sp/>This<sp/>module<sp/>is<sp/>for<sp/>large<sp/>deformation<sp/>of<sp/>soften<sp/>element<sp/>considering<sp/>the<sp/>volumetric<sp/>fracture,<sp/>if<sp/>the<sp/>volumteric</highlight></codeline>
<codeline lineno="2"><highlight class="comment">strain<sp/>of<sp/>the<sp/>element<sp/>exceeds<sp/>the<sp/>strecth,<sp/>the<sp/>element<sp/>will<sp/>be<sp/>splitted<sp/>and<sp/>after<sp/>that<sp/>considering<sp/>contact<sp/>computation</highlight></codeline>
<codeline lineno="3"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="solver_8h" kindref="compound">solver.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../common/openfdem_math.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="solver__rigid_8c_1af4fab905f52d133e681eaf034070f253" kindref="member">solver_rigid</ref>(<sp/></highlight><highlight class="comment">/*<sp/>mechanical<sp/>solver<sp/>rigid<sp/>triangles<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"><sp/><sp/><sp/><sp/>Element<sp/>element,</highlight></codeline>
<codeline lineno="9"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>TimeStep,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>PropElementDensity,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>ele_mat_id,</highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/><sp/><sp/>node_type*<sp/>node,<sp/>of_vector*<sp/>NodalContactForce,</highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/><sp/>of_vector*<sp/>NodalCurrentVelocity</highlight></codeline>
<codeline lineno="12"><highlight class="normal">)</highlight></codeline>
<codeline lineno="13"><highlight class="normal">{</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>i,<sp/>elementid;</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>mas,<sp/>iner,<sp/>xc,<sp/>yc,<sp/>vxc,<sp/>vyc,<sp/>fxc,<sp/>fyc,<sp/>omega,<sp/>c,<sp/>s,<sp/>momf,<sp/>momv;</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>fx[3];</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>fy[3];</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x[3];</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>y[3];</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>xnew;</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>ynew;</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>vx[3];</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>vy[3];</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(elementid<sp/>=<sp/>0;<sp/>elementid<sp/>&lt;<sp/>element-&gt;e_num;<sp/>elementid++)</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>element_type<sp/>ele<sp/>=<sp/>element-&gt;ele[elementid];</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ele.matid<sp/>==<sp/>ele_mat_id)</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>3;<sp/>i++)</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x[i]<sp/>=<sp/>node[ele.nodes[i]].x;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y[i]<sp/>=<sp/>node[ele.nodes[i]].y;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vx[i]<sp/>=<sp/>NodalCurrentVelocity[ele.nodes[i]].x;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vy[i]<sp/>=<sp/>NodalCurrentVelocity[ele.nodes[i]].y;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fx[i]<sp/>=<sp/>NodalContactForce[ele.nodes[i]].x;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fy[i]<sp/>=<sp/>NodalContactForce[ele.nodes[i]].y;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xc<sp/>=<sp/>(x[0]<sp/>+<sp/>x[1]<sp/>+<sp/>x[2])<sp/>/<sp/>3.0;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>yc<sp/>=<sp/>(y[0]<sp/>+<sp/>y[1]<sp/>+<sp/>y[2])<sp/>/<sp/>3.0;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vxc<sp/>=<sp/>(vx[0]<sp/>+<sp/>vx[1]<sp/>+<sp/>vx[2])<sp/>/<sp/>3.0;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vyc<sp/>=<sp/>(vy[0]<sp/>+<sp/>vy[1]<sp/>+<sp/>vy[2])<sp/>/<sp/>3.0;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fxc<sp/>=<sp/>(fx[0]<sp/>+<sp/>fx[1]<sp/>+<sp/>fx[2])<sp/>/<sp/>3.0;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fyc<sp/>=<sp/>(fy[0]<sp/>+<sp/>fy[1]<sp/>+<sp/>fy[2])<sp/>/<sp/>3.0;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>3;<sp/>i++)</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x[i]<sp/>=<sp/>x[i]<sp/>-<sp/>xc;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y[i]<sp/>=<sp/>y[i]<sp/>-<sp/>yc;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vx[i]<sp/>=<sp/>vx[i]<sp/>-<sp/>vxc;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vy[i]<sp/>=<sp/>vy[i]<sp/>-<sp/>vyc;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>momf<sp/>=<sp/>0.0;<sp/><sp/>momv<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>3;<sp/>i++)</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>momf<sp/>=<sp/>momf<sp/>+<sp/>x[i]<sp/>*<sp/>fy[i]<sp/>-<sp/>y[i]<sp/>*<sp/>fx[i];</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>momv<sp/>=<sp/>momv<sp/>+<sp/>x[i]<sp/>*<sp/>vy[i]<sp/>-<sp/>y[i]<sp/>*<sp/>vx[i];</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mas<sp/>=<sp/>PropElementDensity<sp/>*<sp/>((x[1]<sp/>-<sp/>x[0])<sp/>*<sp/>(y[2]<sp/>-<sp/>y[0])<sp/>-</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(y[1]<sp/>-<sp/>y[0])<sp/>*<sp/>(x[2]<sp/>-<sp/>x[0]))<sp/>/<sp/>6.0;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iner<sp/>=<sp/>mas<sp/>*<sp/>(x[0]<sp/>*<sp/>x[0]<sp/>+<sp/>y[0]<sp/>*<sp/>y[0]</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/>x[1]<sp/>*<sp/>x[1]<sp/>+<sp/>y[1]<sp/>*<sp/>y[1]</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/>x[2]<sp/>*<sp/>x[2]<sp/>+<sp/>y[2]<sp/>*<sp/>y[2]);</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>momv<sp/>=<sp/>momv<sp/>*<sp/>mas;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vxc<sp/>=<sp/>vxc<sp/>+<sp/>fxc<sp/>*<sp/>TimeStep<sp/>/<sp/>mas;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vyc<sp/>=<sp/>vyc<sp/>+<sp/>fyc<sp/>*<sp/>TimeStep<sp/>/<sp/>mas;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xc<sp/>=<sp/>xc<sp/>+<sp/>TimeStep<sp/>*<sp/>vxc;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>yc<sp/>=<sp/>yc<sp/>+<sp/>TimeStep<sp/>*<sp/>vyc;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>omega<sp/>=<sp/>momv<sp/>/<sp/>iner<sp/>+<sp/>momf<sp/>*<sp/>TimeStep<sp/>/<sp/>iner;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c<sp/>=<sp/>cos(TimeStep<sp/>*<sp/>omega);</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s<sp/>=<sp/>sin(TimeStep<sp/>*<sp/>omega);</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>3;<sp/>i++)</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xnew<sp/>=<sp/>x[i]<sp/>*<sp/>c<sp/>-<sp/>y[i]<sp/>*<sp/>s;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ynew<sp/>=<sp/>y[i]<sp/>*<sp/>c<sp/>+<sp/>x[i]<sp/>*<sp/>s;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node[ele.nodes[i]].x<sp/>=<sp/>xc<sp/>+<sp/>xnew;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node[ele.nodes[i]].y<sp/>=<sp/>yc<sp/>+<sp/>ynew;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NodalCurrentVelocity[ele.nodes[i]].x<sp/>=<sp/>vxc<sp/>-<sp/>ynew<sp/>*<sp/>omega;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NodalCurrentVelocity[ele.nodes[i]].y<sp/>=<sp/>vyc<sp/>+<sp/>xnew<sp/>*<sp/>omega;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node[ele.nodes[i]].mass<sp/>=<sp/>mas;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="82"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="solver_rigid.c"/>
  </compounddef>
</doxygen>
