<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="openfdem__message_8c" kind="file" language="C++">
    <compoundname>openfdem_message.c</compoundname>
    <includes refid="openfdem__message_8h" local="yes">openfdem_message.h</includes>
    <includes local="no">direct.h</includes>
    <incdepgraph>
      <node id="3">
        <label>stdlib.h</label>
      </node>
      <node id="1">
        <label>openfdem_message.c</label>
        <link refid="openfdem__message_8c"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>openfdem_message.h</label>
        <link refid="openfdem__message_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>direct.h</label>
      </node>
      <node id="6">
        <label>limits.h</label>
      </node>
      <node id="5">
        <label>string.h</label>
      </node>
      <node id="7">
        <label>signal.h</label>
      </node>
      <node id="4">
        <label>stdio.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="openfdem__message_8c_1ac59fe315507b8fbec235cb32e31ccf6c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void dump_message</definition>
        <argsstring>(char *c1)</argsstring>
        <name>dump_message</name>
        <param>
          <type>char *</type>
          <declname>c1</declname>
        </param>
        <briefdescription>
<para>filename <ref refid="openfdem__math_8c" kindref="compound">openfdem_math.c</ref> </para>
        </briefdescription>
        <detaileddescription>
<para>author Xiaofeng Li <ulink url="mailto:xfli@whrsm.ac.cn">xfli@whrsm.ac.cn</ulink></para>
<para>date creation: Fri Jun 18 2010 date last modification: Tue Sep 29 2020</para>
<para>function: common math</para>
<sect1 id="openfdem__tools_8h_1LICENSE">
<title>LICENSE</title>
<para>This library is free software; you can redistribute it and/or modify it under the terms of the GNU Lesser General Public License as published by the Free Software Foundation; either version 2.1 of the License, or (at your option) any later version.</para>
<para>This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more details. </para>
</sect1>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="openfdem_message.c" line="29" column="6" bodyfile="openfdem_message.c" bodystart="29" bodyend="33"/>
      </memberdef>
      <memberdef kind="function" id="openfdem__message_8c_1ae1d49ec5624757466f01b399ff39d9bc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void dump_message_keyword</definition>
        <argsstring>(char *c1, char *c2)</argsstring>
        <name>dump_message_keyword</name>
        <param>
          <type>char *</type>
          <declname>c1</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>c2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="openfdem_message.c" line="35" column="6" bodyfile="openfdem_message.c" bodystart="35" bodyend="40"/>
      </memberdef>
      <memberdef kind="function" id="openfdem__message_8c_1a5c5d6763ea30cc913e708dfc0ee65e54" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void dump_message_group</definition>
        <argsstring>(int n1, char *c1, char *c2)</argsstring>
        <name>dump_message_group</name>
        <param>
          <type>int</type>
          <declname>n1</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>c1</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>c2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="openfdem_message.c" line="42" column="6" bodyfile="openfdem_message.c" bodystart="42" bodyend="50"/>
      </memberdef>
      <memberdef kind="function" id="openfdem__message_8c_1a79282509116fdde9eebf6a06b5a2d95d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void dump_message_mat</definition>
        <argsstring>(char *c1, int c2)</argsstring>
        <name>dump_message_mat</name>
        <param>
          <type>char *</type>
          <declname>c1</declname>
        </param>
        <param>
          <type>int</type>
          <declname>c2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="openfdem_message.c" line="52" column="6" bodyfile="openfdem_message.c" bodystart="52" bodyend="57"/>
      </memberdef>
      <memberdef kind="function" id="openfdem__message_8c_1aade87e5c136db1457c5800dc6085379c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void dump_message_type2</definition>
        <argsstring>(int c2, char *c1)</argsstring>
        <name>dump_message_type2</name>
        <param>
          <type>int</type>
          <declname>c2</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>c1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="openfdem_message.c" line="59" column="6" bodyfile="openfdem_message.c" bodystart="59" bodyend="64"/>
      </memberdef>
      <memberdef kind="function" id="openfdem__message_8c_1a3909092e2e38f731a3babe15c106233e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void check_parse_status</definition>
        <argsstring>(FILE *checkfile, char *keyword)</argsstring>
        <name>check_parse_status</name>
        <param>
          <type>FILE *</type>
          <declname>checkfile</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>keyword</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="openfdem_message.c" line="66" column="6" bodyfile="openfdem_message.c" bodystart="66" bodyend="71"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="openfdem__message_8h" kindref="compound">openfdem_message.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;direct.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/></highlight><highlight class="comment">/*<sp/>Arrays<sp/>input<sp/>output<sp/>and<sp/>allocation<sp/>routines<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="openfdem__message_8c_1ac59fe315507b8fbec235cb32e31ccf6c" kindref="member">dump_message</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>c1)<sp/><sp/></highlight><highlight class="comment">//<sp/>print<sp/>message<sp/>out<sp/>to<sp/>screen</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal">{</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="openfdem__message_8h_1a03f3b55fbf24a53a66d5bc9731bcbecb" kindref="member">dump_string</ref>(stdout,<sp/>c1);</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="openfdem__message_8h_1a03f3b55fbf24a53a66d5bc9731bcbecb" kindref="member">dump_string</ref>(stdout,<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="33"><highlight class="normal">}</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="openfdem__message_8c_1ae1d49ec5624757466f01b399ff39d9bc" kindref="member">dump_message_keyword</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>c1,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>c2)<sp/><sp/></highlight><highlight class="comment">//<sp/>print<sp/>message<sp/>out<sp/>to<sp/>screen</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal">{</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="openfdem__message_8h_1a03f3b55fbf24a53a66d5bc9731bcbecb" kindref="member">dump_string</ref>(stdout,<sp/>c1);</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="openfdem__message_8h_1a03f3b55fbf24a53a66d5bc9731bcbecb" kindref="member">dump_string</ref>(stdout,<sp/>c2);</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="openfdem__message_8h_1a03f3b55fbf24a53a66d5bc9731bcbecb" kindref="member">dump_string</ref>(stdout,<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="40"><highlight class="normal">}</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="openfdem__message_8c_1a5c5d6763ea30cc913e708dfc0ee65e54" kindref="member">dump_message_group</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n1,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>c1,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>c2)<sp/><sp/></highlight><highlight class="comment">//<sp/>print<sp/>message<sp/>out<sp/>to<sp/>screen</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal">{</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;*****<sp/>%d<sp/>&quot;</highlight><highlight class="normal">,<sp/>n1);</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="openfdem__message_8h_1a03f3b55fbf24a53a66d5bc9731bcbecb" kindref="member">dump_string</ref>(stdout,<sp/>c1);</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="openfdem__message_8h_1a03f3b55fbf24a53a66d5bc9731bcbecb" kindref="member">dump_string</ref>(stdout,<sp/></highlight><highlight class="stringliteral">&quot;\&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="openfdem__message_8h_1a03f3b55fbf24a53a66d5bc9731bcbecb" kindref="member">dump_string</ref>(stdout,<sp/>c2);</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="openfdem__message_8h_1a03f3b55fbf24a53a66d5bc9731bcbecb" kindref="member">dump_string</ref>(stdout,<sp/></highlight><highlight class="stringliteral">&quot;\&quot;.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="openfdem__message_8h_1a03f3b55fbf24a53a66d5bc9731bcbecb" kindref="member">dump_string</ref>(stdout,<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="50"><highlight class="normal">}</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="openfdem__message_8c_1a79282509116fdde9eebf6a06b5a2d95d" kindref="member">dump_message_mat</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>c1,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>c2)<sp/><sp/></highlight><highlight class="comment">//<sp/>print<sp/>message<sp/>out<sp/>to<sp/>screen</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal">{</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="openfdem__message_8h_1a03f3b55fbf24a53a66d5bc9731bcbecb" kindref="member">dump_string</ref>(stdout,<sp/>c1);</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="openfdem__message_8h_1a6d4e34f3389d20725d1e2ce9f03e8dca" kindref="member">Dump_int</ref>(stdout,<sp/>c2,<sp/>5);</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="openfdem__message_8h_1a03f3b55fbf24a53a66d5bc9731bcbecb" kindref="member">dump_string</ref>(stdout,<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="57"><highlight class="normal">}</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="openfdem__message_8c_1aade87e5c136db1457c5800dc6085379c" kindref="member">dump_message_type2</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>c2,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>c1)<sp/><sp/></highlight><highlight class="comment">//<sp/>print<sp/>message<sp/>out<sp/>to<sp/>screen</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal">{</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;*****<sp/>%d<sp/>&quot;</highlight><highlight class="normal">,<sp/>c2);</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="openfdem__message_8h_1a03f3b55fbf24a53a66d5bc9731bcbecb" kindref="member">dump_string</ref>(stdout,<sp/>c1);</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="openfdem__message_8h_1a03f3b55fbf24a53a66d5bc9731bcbecb" kindref="member">dump_string</ref>(stdout,<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="64"><highlight class="normal">}</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="openfdem__message_8c_1a3909092e2e38f731a3babe15c106233e" kindref="member">check_parse_status</ref>(FILE*<sp/>checkfile,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>keyword)<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>chech<sp/>the<sp/>parse<sp/>postion<sp/>for<sp/>debuging</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal">{</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="openfdem__message_8h_1a03f3b55fbf24a53a66d5bc9731bcbecb" kindref="member">dump_string</ref>(checkfile,<sp/></highlight><highlight class="stringliteral">&quot;parsing<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="openfdem__message_8h_1a03f3b55fbf24a53a66d5bc9731bcbecb" kindref="member">dump_string</ref>(checkfile,<sp/>keyword);</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="openfdem__message_8h_1a03f3b55fbf24a53a66d5bc9731bcbecb" kindref="member">dump_string</ref>(checkfile,<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="71"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="openfdem_message.c"/>
  </compounddef>
</doxygen>
