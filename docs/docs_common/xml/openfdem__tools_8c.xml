<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="openfdem__tools_8c" kind="file" language="C++">
    <compoundname>openfdem_tools.c</compoundname>
    <includes refid="openfdem__tools_8h" local="yes">openfdem_tools.h</includes>
    <incdepgraph>
      <node id="3">
        <label>stdlib.h</label>
      </node>
      <node id="11">
        <label>../solid/openfdem_nodal.h</label>
      </node>
      <node id="15">
        <label>openfdem_enum.h</label>
        <link refid="openfdem__enum_8h"/>
      </node>
      <node id="13">
        <label>openfdem_commom.h</label>
        <link refid="openfdem__commom_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>openfdem_message.h</label>
        <link refid="openfdem__message_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>limits.h</label>
      </node>
      <node id="5">
        <label>string.h</label>
      </node>
      <node id="7">
        <label>signal.h</label>
      </node>
      <node id="10">
        <label>../solid/solid_mechanics_cohesive/sesmic/openfdem_sesmic.h</label>
      </node>
      <node id="1">
        <label>openfdem_tools.c</label>
        <link refid="openfdem__tools_8c"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>openfdem_tools.h</label>
        <link refid="openfdem__tools_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>../common/openfdem_general.h</label>
        <link refid="openfdem__general_8h"/>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>../solid/solid_mechanics_cohesive/openfdem_solid_cohesive.h</label>
      </node>
      <node id="8">
        <label>openfdem_struct.h</label>
        <link refid="openfdem__struct_8h"/>
      </node>
      <node id="4">
        <label>stdio.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="openfdem__tools_8c_1abf777839782e2fda16e5882fb49fbb14" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>fracture_type *</type>
        <definition>fracture_type* realloc_fracture_structure</definition>
        <argsstring>(fracture_type *array, UInt size)</argsstring>
        <name>realloc_fracture_structure</name>
        <param>
          <type>fracture_type *</type>
          <declname>array</declname>
        </param>
        <param>
          <type><ref refid="openfdem__struct_8h_1a26ff0e0ab71ea1ed8bac401c56ed2242" kindref="member">UInt</ref></type>
          <declname>size</declname>
        </param>
        <briefdescription>
<para>filename <ref refid="openfdem__math_8c" kindref="compound">openfdem_math.c</ref> </para>
        </briefdescription>
        <detaileddescription>
<para>author Xiaofeng Li <ulink url="mailto:xfli@whrsm.ac.cn">xfli@whrsm.ac.cn</ulink></para>
<para>date creation: Fri Jun 18 2010 date last modification: Tue Sep 29 2020</para>
<para>function: common math</para>
<sect1 id="openfdem__tools_8h_1LICENSE">
<title>LICENSE</title>
<para>This library is free software; you can redistribute it and/or modify it under the terms of the GNU Lesser General Public License as published by the Free Software Foundation; either version 2.1 of the License, or (at your option) any later version.</para>
<para>This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more details. </para>
</sect1>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="openfdem_tools.c" line="29" column="15" bodyfile="openfdem_tools.c" bodystart="29" bodyend="39"/>
      </memberdef>
      <memberdef kind="function" id="openfdem__tools_8c_1af743496ad845e62c23dac01ddaea5c54" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>damage_type *</type>
        <definition>damage_type* realloc_damage_structure</definition>
        <argsstring>(damage_type *array, UInt size)</argsstring>
        <name>realloc_damage_structure</name>
        <param>
          <type>damage_type *</type>
          <declname>array</declname>
        </param>
        <param>
          <type><ref refid="openfdem__struct_8h_1a26ff0e0ab71ea1ed8bac401c56ed2242" kindref="member">UInt</ref></type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="openfdem_tools.c" line="41" column="13" bodyfile="openfdem_tools.c" bodystart="41" bodyend="51"/>
      </memberdef>
      <memberdef kind="function" id="openfdem__tools_8c_1ad241ef8bba6e42797a76a505600054d5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ae_type *</type>
        <definition>ae_type* realloc_ae_structure</definition>
        <argsstring>(ae_type *array, UInt size)</argsstring>
        <name>realloc_ae_structure</name>
        <param>
          <type>ae_type *</type>
          <declname>array</declname>
        </param>
        <param>
          <type><ref refid="openfdem__struct_8h_1a26ff0e0ab71ea1ed8bac401c56ed2242" kindref="member">UInt</ref></type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="openfdem_tools.c" line="53" column="9" bodyfile="openfdem_tools.c" bodystart="53" bodyend="63"/>
      </memberdef>
      <memberdef kind="function" id="openfdem__tools_8c_1a5b0419d452d83dde98db55773d7dc938" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void parse_node</definition>
        <argsstring>(FILE *fileptr, long max_size, long actual_size, node_type **d1aray, General general)</argsstring>
        <name>parse_node</name>
        <param>
          <type>FILE *</type>
          <declname>fileptr</declname>
        </param>
        <param>
          <type>long</type>
          <declname>max_size</declname>
        </param>
        <param>
          <type>long</type>
          <declname>actual_size</declname>
        </param>
        <param>
          <type>node_type **</type>
          <declname>d1aray</declname>
        </param>
        <param>
          <type><ref refid="openfdem__general_8h_1a7c262346c166dd2efb8d134d43f37b4d" kindref="member">General</ref></type>
          <declname>general</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="openfdem_tools.c" line="65" column="6" bodyfile="openfdem_tools.c" bodystart="65" bodyend="99"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="openfdem__tools_8h" kindref="compound">openfdem_tools.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/></highlight><highlight class="comment">/*<sp/>Arrays<sp/>input<sp/>output<sp/>and<sp/>allocation<sp/>routines<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal">fracture_type*<sp/><ref refid="openfdem__tools_8c_1abf777839782e2fda16e5882fb49fbb14" kindref="member">realloc_fracture_structure</ref>(fracture_type*<sp/>array,<sp/><ref refid="openfdem__struct_8h_1a26ff0e0ab71ea1ed8bac401c56ed2242" kindref="member">UInt</ref><sp/>size)</highlight></codeline>
<codeline lineno="30"><highlight class="normal">{</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(size<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>array<sp/>=<sp/>(fracture_type*)malloc(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(fracture_type)<sp/>*<sp/>(size<sp/>+<sp/>1));</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>array<sp/>=<sp/>(fracture_type*)realloc(array,<sp/>(size<sp/>+<sp/>1)<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(fracture_type));</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>array;</highlight></codeline>
<codeline lineno="39"><highlight class="normal">}</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal">damage_type*<sp/><ref refid="openfdem__tools_8c_1af743496ad845e62c23dac01ddaea5c54" kindref="member">realloc_damage_structure</ref>(damage_type*<sp/>array,<sp/><ref refid="openfdem__struct_8h_1a26ff0e0ab71ea1ed8bac401c56ed2242" kindref="member">UInt</ref><sp/>size)</highlight></codeline>
<codeline lineno="42"><highlight class="normal">{</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(size<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>array<sp/>=<sp/>(damage_type*)malloc(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(damage_type)<sp/>*<sp/>(size<sp/>+<sp/>1));</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>array<sp/>=<sp/>(damage_type*)realloc(array,<sp/>(size<sp/>+<sp/>1)<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(damage_type));</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>array;</highlight></codeline>
<codeline lineno="51"><highlight class="normal">}</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal">ae_type*<sp/><ref refid="openfdem__tools_8c_1ad241ef8bba6e42797a76a505600054d5" kindref="member">realloc_ae_structure</ref>(ae_type*<sp/>array,<sp/><ref refid="openfdem__struct_8h_1a26ff0e0ab71ea1ed8bac401c56ed2242" kindref="member">UInt</ref><sp/>size)</highlight></codeline>
<codeline lineno="54"><highlight class="normal">{</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(size<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>array<sp/>=<sp/>(ae_type*)malloc(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(ae_type)<sp/>*<sp/>(size<sp/>+<sp/>1));</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>array<sp/>=<sp/>(ae_type*)realloc(array,<sp/>(size<sp/>+<sp/>1)<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(ae_type));</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>array;</highlight></codeline>
<codeline lineno="63"><highlight class="normal">}</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="openfdem__tools_8c_1a5b0419d452d83dde98db55773d7dc938" kindref="member">parse_node</ref>(FILE*<sp/>fileptr,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>max_size,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>actual_size,<sp/>node_type**<sp/>d1aray,<sp/><ref refid="struct_general__structure" kindref="compound">General</ref><sp/>general)</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal">{</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>i,<sp/>n<sp/>=<sp/>actual_size;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>dnum;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/>node_type*<sp/>d1<sp/>=<sp/>*d1aray;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(d1<sp/>==<sp/>(node_type*)NULL)<sp/>{<sp/>d1<sp/>=<sp/>malloc(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(node_type)<sp/>*<sp/>(max_size));<sp/>}</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/>*d1aray<sp/>=<sp/>d1;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(d1<sp/>!=<sp/>(node_type*)NULL)</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>max_size;<sp/>i++)</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d1[i].mass<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d1[i].x0<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d1[i].y0<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d1[i].x<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d1[i].y<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d1[i].n_group<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d1[i].old_map<sp/>=<sp/>i;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d1[i].group<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fileptr<sp/>!=<sp/><ref refid="openfdem__commom_8h_1ace5d16511ddcfcce938c2a0e577eaa27" kindref="member">FileNull</ref>)</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>n;<sp/>i++)</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="openfdem__message_8h_1ab6f5e66570130d1825298ace278b30ee" kindref="member">Parse_double</ref>(fileptr,<sp/>&amp;dnum);</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d1[i].x0<sp/>=<sp/>dnum;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d1[i].x<sp/>=<sp/>dnum;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="openfdem__message_8h_1ab6f5e66570130d1825298ace278b30ee" kindref="member">Parse_double</ref>(fileptr,<sp/>&amp;dnum);</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d1[i].y0<sp/>=<sp/>dnum;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d1[i].y<sp/>=<sp/>dnum;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="99"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="openfdem_tools.c"/>
  </compounddef>
</doxygen>
